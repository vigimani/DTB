{
  "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "NewTokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "TokenRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token_deposited",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "PLPissued",
          "type": "uint256"
        }
      ],
      "name": "depositEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "oldexpo",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newexpo",
          "type": "uint8"
        }
      ],
      "name": "expoEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "exposition",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNAV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NAV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdcNAV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "longNAV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shortNAV",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalsupply",
          "type": "uint256"
        }
      ],
      "name": "navEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nav",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "preop_supply",
          "type": "uint256"
        }
      ],
      "name": "withdrawEvent",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "GMX_controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "acceptToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exposition",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExposition",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGMX_controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNetAssetValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gmxVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "isAccepted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateLongPositions",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidateShortPositions",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "netAssetValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openPosition",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_exposition",
          "type": "uint8"
        }
      ],
      "name": "setExposition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setGMX_controller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenAccepted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateNetAssetValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x00c416a991b34839db4b9de01630ee4aeb702807d5515f321743140366781602",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
    "transactionIndex": 0,
    "gasUsed": "2156904",
    "logsBloom": "0x
    "blockHash": "0x83bb06d0737728a5fbfd7902e81b9dbfba75fde8bd0f09d7e20dfab44816dca7",
    "transactionHash": "0x00c416a991b34839db4b9de01630ee4aeb702807d5515f321743140366781602",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 63248291,
        "transactionHash": "0x00c416a991b34839db4b9de01630ee4aeb702807d5515f321743140366781602",
        "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x83bb06d0737728a5fbfd7902e81b9dbfba75fde8bd0f09d7e20dfab44816dca7"
      }
    ],
    "blockNumber": 63248291,
    "cumulativeGasUsed": "2156904",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a97b8ef12aba17d74d94845ca8abf425",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"NewTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token_deposited\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"PLPissued\",\"type\":\"uint256\"}],\"name\":\"depositEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"oldexpo\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newexpo\",\"type\":\"uint8\"}],\"name\":\"expoEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"exposition\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNAV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NAV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcNAV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"longNAV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shortNAV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalsupply\",\"type\":\"uint256\"}],\"name\":\"navEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nav\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preop_supply\",\"type\":\"uint256\"}],\"name\":\"withdrawEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GMX_controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"acceptToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exposition\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExposition\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGMX_controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNetAssetValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gmxVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"isAccepted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateLongPositions\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateShortPositions\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"netAssetValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openPosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_exposition\",\"type\":\"uint8\"}],\"name\":\"setExposition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setGMX_controller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenAccepted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateNetAssetValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Victor Gillibert\",\"custom:experimental\":\"This is an experimental contract.\",\"details\":\"Improvement to do :Add fees to compensate for transaction fees paid when position need to be modifiedAllow other token to be addedAdd non reentrantGard from OZ\",\"kind\":\"dev\",\"methods\":{\"acceptToken(address)\":{\"details\":\"until now, only USDC deposit are handled\",\"params\":{\"tokenAddress\":\"arbitrum address of the ERC20 token\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(address,uint256)\":{\"details\":\"take USDC and send back PLP according to current vault value and price per share;\",\"params\":{\"_amount\":\"amount of USDC decimals 10**6\",\"tokenAddress\":\"USDC address only for the moment, but keeping the possibility to add other token\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setExposition(uint8)\":{\"details\":\"only the owner can call this function\",\"params\":{\"_exposition\":\"0 for neutral | 1 Long | 2 Short\"}},\"setGMX_controller(address)\":{\"details\":\"only the owner can call this function\",\"params\":{\"_addr\":\"address of the controller to add\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"take PLP and send back USDC according to current price per share;\",\"params\":{\"_amount\":\"amount of PLP decimals 10**18\"}}},\"title\":\"Vault contract to receive funds and rebalance on GMX thanks to controller according to exposition strategy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptToken(address)\":{\"notice\":\"whitelist the token accepted in the vault, allow a better control\"},\"deposit(address,uint256)\":{\"notice\":\"Function that handles the deposit of fund in USDC and sent back PLP token \"},\"setExposition(uint8)\":{\"notice\":\"function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\"},\"setGMX_controller(address)\":{\"notice\":\"function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\"},\"withdraw(uint256)\":{\"notice\":\"Function to withdraw funds from the vaultFunction that handles the withdraw of fund\"}},\"notice\":\"It works as a fund manager, send token as shares of the vault according to the value in it, send back USDC when token are given back\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyVault.sol\":\"MyVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/MyVault.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ninterface IGMXController {\\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable ; \\n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable ; \\n    function liquidatePosition(bool isLong) external payable ; \\n}\\n\\ninterface IGMXVault {\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\\n}\\n\\n/// @title Vault contract to receive funds and rebalance on GMX thanks to controller according to exposition strategy\\n/// @author Victor Gillibert\\n/// @notice It works as a fund manager, send token as shares of the vault according to the value in it, send back USDC when token are given back\\n/// @dev Improvement to do :\\n/// @dev Add fees to compensate for transaction fees paid when position need to be modified\\n/// @dev Allow other token to be added\\n/// @dev Add non reentrantGard from OZ\\n/// @custom:experimental This is an experimental contract.\\ncontract MyVault is Ownable, ERC20 {\\n    // ::::::::::::: VARIABLE AND EVENT ::::::::::::: //\\n    address public GMX_controller;\\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\\n    address public gmxVault = 0x489ee077994B6658eAfA855C308275EAd8097C4A;\\n    uint256 public netAssetValue;\\n    uint8 public exposition; //0 neutral - 1 Long ETH - 2 short ETH\\n\\n    mapping(address => bool) public tokenAccepted;\\n    event NewTokenAdded(address tokenAddress);\\n    event TokenRemoved(address tokenAddress);\\n    event expoEvent(uint256 when, uint8 oldexpo, uint8 newexpo);\\n    event depositEvent(\\n        address indexed account,\\n        uint256 when,\\n        address token_deposited,\\n        uint256 amount,\\n        uint256 PLPissued\\n    );\\n    event withdrawEvent(\\n        address indexed account,\\n        uint256 when,\\n        uint256 amount,\\n        uint256 nav,\\n        uint256 preop_supply\\n    );\\n    event navEvent(\\n        uint256 when,\\n        uint8 exposition,\\n        uint256 oldNAV,\\n        uint256 NAV,\\n        uint256 usdcNAV,\\n        uint256 longNAV,\\n        uint256 shortNAV,\\n        uint256 totalsupply\\n    );\\n\\n    // ::::::::::::: CONSTRUCTOR ::::::::::::: //\\n\\n    constructor() ERC20(\\\"Polyplus\\\", \\\"PLP\\\") {\\n        exposition = 0;\\n        netAssetValue = 1;\\n    }\\n\\n    // ::::::::::::: HANDLING TOKEN LISTS ACCEPTED ::::::::::::: //\\n\\n    //Gestion des tokens accept\\u00e9s [until now stable only with USDC]\\n    /// @notice whitelist the token accepted in the vault, allow a better control\\n    /// @dev until now, only USDC deposit are handled\\n    /// @param tokenAddress arbitrum address of the ERC20 token\\n    function acceptToken(address tokenAddress) external onlyOwner {\\n        require(!tokenAccepted[tokenAddress], \\\"Token already added\\\");\\n        tokenAccepted[tokenAddress] = true;\\n        emit NewTokenAdded(tokenAddress);\\n    }\\n    function removeToken(address tokenAddress) external onlyOwner {\\n        require(tokenAccepted[tokenAddress], \\\"Token not yet added\\\");\\n        tokenAccepted[tokenAddress] = false;\\n        emit TokenRemoved(tokenAddress);\\n    }\\n    function isAccepted(address tokenAddress) external view returns (bool) {\\n        return tokenAccepted[tokenAddress];\\n    }\\n\\n    // ::::::::::::: GMX CONTROLLER AND FEES::::::::::::: //\\n\\n    /// @notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\\n    /// @dev only the owner can call this function\\n    /// @param _addr address of the controller to add\\n    function setGMX_controller(address _addr) external onlyOwner {\\n        GMX_controller = _addr;\\n    }\\n    function getGMX_controller() public view returns (address) {\\n        return GMX_controller;\\n    }\\n\\n    // ::::::::::::: STRATEGY EXPOSITION AND GLOBAL TX ::::::::::::: //\\n\\n    /// @notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\\n    /// @dev only the owner can call this function\\n    /// @param _exposition 0 for neutral | 1 Long | 2 Short\\n    function setExposition(uint8 _exposition) external onlyOwner {\\n        require(\\n            _exposition == 0 || _exposition == 1 || _exposition == 2,\\n            \\\"Value must be 0 for neutral, 1 for Long or 2 for Short\\\"\\n        );\\n        require(\\n            exposition != _exposition,\\n            \\\"Reverted because exposition has not changed\\\"\\n        );\\n        uint8 oldexposition = exposition;\\n        exposition = _exposition;\\n        emit expoEvent(block.timestamp, oldexposition, exposition);\\n    }\\n    function getExposition() external view returns (uint8) {\\n        return exposition;\\n    }\\n    function openPosition() external payable onlyOwner {\\n        bool isLong = (exposition == 1 ? true : false);\\n        IERC20(USDC).approve(\\n            GMX_controller,\\n            IERC20(USDC).balanceOf(address(this))\\n        );\\n        IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n            IERC20(USDC).balanceOf(address(this)),\\n            isLong\\n        );\\n    }\\n    function liquidateLongPositions() external payable onlyOwner {\\n        IGMXController(GMX_controller).liquidatePosition{value: msg.value}(\\n            true\\n        );\\n    }\\n    function liquidateShortPositions() external payable onlyOwner {\\n        IGMXController(GMX_controller).liquidatePosition{value: msg.value}(\\n            false\\n        );\\n    }\\n\\n    // ::::::::::::: NET ASSET VALUE OF THE FUNDS ::::::::::::: //\\n   \\n    function updateNetAssetValue() external onlyOwner {\\n        _updateNAV();\\n    }\\n    //decimals 10**30\\n    function _updateNAV() private {\\n        uint256 oldNAV = netAssetValue;\\n        uint256 _deltavalueLong = 0;\\n        uint256 _deltavalueShort = 0;\\n        uint256 usdcBal = ERC20(USDC).balanceOf(address(this)) * 10**24; ///10**18 met USDC 6 decimals donc 10**12\\n        (, uint256 _collateralLong, , , , , , ) = IGMXVault(gmxVault)\\n            .getPosition(GMX_controller, WETH, WETH, true);\\n        if (_collateralLong > 0) {\\n            (, _deltavalueLong) = IGMXVault(gmxVault).getPositionDelta(\\n                GMX_controller,\\n                WETH,\\n                WETH,\\n                true\\n            );\\n        }\\n        uint256 posLong = (_collateralLong + _deltavalueLong);\\n        (, uint256 _collateralShort, , , , , , ) = IGMXVault(gmxVault)\\n            .getPosition(GMX_controller, USDC, WETH, false);\\n        if (_collateralShort > 0) {\\n            (, _deltavalueShort) = IGMXVault(gmxVault).getPositionDelta(\\n                GMX_controller,\\n                USDC,\\n                WETH,\\n                false\\n            );\\n        }\\n        uint256 posShort = (_collateralShort - _deltavalueShort);\\n        netAssetValue = usdcBal + posLong + posShort;\\n        emit navEvent(\\n            block.timestamp,\\n            exposition,\\n            oldNAV,\\n            netAssetValue,\\n            usdcBal,\\n            posLong,\\n            posShort,\\n            this.totalSupply()\\n        );\\n    }\\n    function getNetAssetValue() external view returns (uint256) {\\n        return netAssetValue;\\n    }\\n\\n    // ::::::::::::: USER INTERFACE ::::::::::::: //\\n\\n    /// @notice Function that handles the deposit of fund in USDC and sent back PLP token \\n    /// @dev take USDC and send back PLP according to current vault value and price per share;\\n    /// @param tokenAddress USDC address only for the moment, but keeping the possibility to add other token\\n    /// @param _amount amount of USDC decimals 10**6\\n    function deposit(address tokenAddress, uint256 _amount) external payable {\\n        require(tokenAccepted[tokenAddress], \\\"Token not yet supported\\\");\\n        require(_amount > 0, \\\"Amount to deposit is mandatory\\\");\\n        uint256 amountToken = _amount - _amount / 100; //1% entry fees paid to GMX [0.1% entry fees + 0.8% swap fees]\\n        uint256 amountPLPToken;\\n        if (this.totalSupply() == 0) {\\n            amountPLPToken = _amount * (10**12); //10**18 / 10**6 decimals PLP / decimals USDC\\n        } else {\\n            _updateNAV();\\n            if (exposition == 0) {\\n                amountPLPToken = (((10**24) * _amount * this.totalSupply()) /\\n                    netAssetValue);\\n            } else {\\n                amountPLPToken = (((10**24) *\\n                    amountToken *\\n                    this.totalSupply()) / netAssetValue); //10**30 decimals net asset value / 10**6 USDC\\n            }\\n        }\\n        _mint(msg.sender, amountPLPToken);\\n        IERC20(tokenAddress).transferFrom(msg.sender, address(this), _amount);\\n        IERC20(tokenAddress).approve(GMX_controller, _amount);\\n        if (exposition == 1) {\\n            IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n                _amount,\\n                true\\n            );\\n        } else if (exposition == 2) {\\n            IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n                _amount,\\n                false\\n            );\\n        }\\n        emit depositEvent(\\n            msg.sender,\\n            block.timestamp,\\n            tokenAddress,\\n            _amount,\\n            amountPLPToken\\n        );\\n    }\\n\\n    /// @notice Function to withdraw funds from the vault\\n    /// @notice Function that handles the withdraw of fund\\n    /// @dev take PLP and send back USDC according to current price per share;\\n    /// @param _amount amount of PLP decimals 10**18\\n    function withdraw(uint256 _amount) external payable {\\n        require(_amount > 0);\\n        require(\\n            this.balanceOf(msg.sender) >= _amount,\\n            \\\"Surprisingly you cannot withdraw token you have not bought\\\"\\n        );\\n        bool isLong = (exposition == 1 ? true : false);\\n        _updateNAV();\\n        uint256 preop_supply = this.totalSupply();\\n        _burn(msg.sender, _amount);\\n        \\n        if (exposition == 0) {\\n            IERC20(USDC).transfer(msg.sender,(10**6*_amount *netAssetValue)/(preop_supply*10**30));\\n        } else {\\n            IGMXController(GMX_controller).decreasePosition{value: msg.value}(\\n                msg.sender,\\n                (99*10**4*_amount *netAssetValue)/(preop_supply*10**30), // [decimals USDC] * (#PLP / [decimals PLP]) * (NAV / [decimals NAV]) * ([decimals TS] / TS)) | 99% pour prendre en compte l'effet dillutif des frais GMX \\u00e0 la sortie\\n                isLong\\n            );\\n        } \\n        emit withdrawEvent(msg.sender, block.timestamp, _amount, netAssetValue, preop_supply);\\n    }\\n}\\n\",\"keccak256\":\"0x3710ffaa0464b39d1e548a9e22a05b23eb712b40b6a41fbc09473e351d88d74b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600780546001600160a01b03199081167382af49447d8a07e3bd95bd0d56f35241523fbab11790915560088054821673ff970a61a04b1ca14834a43f5de4533ebddb5cc81790556009805490911673489ee077994b6658eafa855c308275ead8097c4a1790553480156200007757600080fd5b5060405180604001604052806008815260200167506f6c79706c757360c01b815250604051806040016040528060038152602001620504c560ec1b815250620000cf620000c96200010460201b60201c565b62000108565b6004620000dd8382620001fd565b506005620000ec8282620001fd565b5050600b805460ff19169055506001600a55620002c9565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018357607f821691505b602082108103620001a457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001f857600081815260208120601f850160051c81016020861015620001d35750805b601f850160051c820191505b81811015620001f457828155600101620001df565b5050505b505050565b81516001600160401b0381111562000219576200021962000158565b62000231816200022a84546200016e565b84620001aa565b602080601f831160018114620002695760008415620002505750858301515b600019600386901b1c1916600185901b178555620001f4565b600085815260208120601f198616915b828110156200029a5788860151825594840194600190910190840162000279565b5085821015620002b95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6122fa80620002d96000396000f3fe6080604052600436106101c45760003560e01c806370a08231116100f8578063a9059cbb11610090578063a9059cbb146104b3578063ad5c4648146104d3578063aedf795e146104f3578063b3b3453e14610523578063dd62ed3e14610543578063de9257cd14610563578063e6f091f91461057b578063ed61f4a1146105b4578063f2fde38b146105c957600080fd5b806370a082311461039f578063715018a6146103d557806389a30271146103ea5780638cd3f0641461040a5780638da5cb5b1461042a57806395d89b41146104485780639ecbfa421461045d578063a3673b381461047d578063a457c2d71461049357600080fd5b80632e1a7d4d1161016b5780632e1a7d4d146102e05780633027ac22146102f3578063313ce567146102fb578063350245c21461030f578063395093511461031757806347e7ef2414610337578063481d6ee91461034a5780635fa7b5841461036a5780636639a81d1461038a57600080fd5b80630677a2a5146101c957806306fdde03146101f9578063095ea7b31461021b57806311af7d951461024b57806318160ddd1461026d5780631cd2f7c81461028c57806323b872dd146102b857806328250e0d146102d8575b600080fd5b3480156101d557600080fd5b506006546001600160a01b03165b6040516101f09190611f67565b60405180910390f35b34801561020557600080fd5b5061020e6105e9565b6040516101f09190611f7b565b34801561022757600080fd5b5061023b610236366004611fe5565b61067b565b60405190151581526020016101f0565b34801561025757600080fd5b5061026b61026636600461200f565b610695565b005b34801561027957600080fd5b506003545b6040519081526020016101f0565b34801561029857600080fd5b50600b546102a69060ff1681565b60405160ff90911681526020016101f0565b3480156102c457600080fd5b5061023b6102d3366004612031565b6106bf565b61026b6106e3565b61026b6102ee36600461206d565b61074e565b61026b610a96565b34801561030757600080fd5b5060126102a6565b61026b610ad1565b34801561032357600080fd5b5061023b610332366004611fe5565b610cb2565b61026b610345366004611fe5565b610cd4565b34801561035657600080fd5b5061026b610365366004612086565b611192565b34801561037657600080fd5b5061026b61038536600461200f565b6112ed565b34801561039657600080fd5b50600a5461027e565b3480156103ab57600080fd5b5061027e6103ba36600461200f565b6001600160a01b031660009081526001602052604090205490565b3480156103e157600080fd5b5061026b6113ae565b3480156103f657600080fd5b506008546101e3906001600160a01b031681565b34801561041657600080fd5b5061026b61042536600461200f565b6113c2565b34801561043657600080fd5b506000546001600160a01b03166101e3565b34801561045457600080fd5b5061020e61147c565b34801561046957600080fd5b506006546101e3906001600160a01b031681565b34801561048957600080fd5b5061027e600a5481565b34801561049f57600080fd5b5061023b6104ae366004611fe5565b61148b565b3480156104bf57600080fd5b5061023b6104ce366004611fe5565b611506565b3480156104df57600080fd5b506007546101e3906001600160a01b031681565b3480156104ff57600080fd5b5061023b61050e36600461200f565b600c6020526000908152604090205460ff1681565b34801561052f57600080fd5b506009546101e3906001600160a01b031681565b34801561054f57600080fd5b5061027e61055e3660046120a9565b611514565b34801561056f57600080fd5b50600b5460ff166102a6565b34801561058757600080fd5b5061023b61059636600461200f565b6001600160a01b03166000908152600c602052604090205460ff1690565b3480156105c057600080fd5b5061026b61153f565b3480156105d557600080fd5b5061026b6105e436600461200f565b61154f565b6060600480546105f8906120dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610624906120dc565b80156106715780601f1061064657610100808354040283529160200191610671565b820191906000526020600020905b81548152906001019060200180831161065457829003601f168201915b5050505050905090565b6000336106898185856115c8565b60019150505b92915050565b61069d6116ed565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000336106cd858285611747565b6106d88585856117c1565b506001949350505050565b6106eb6116ed565b600654604051637cb1759760e01b8152600160048201526001600160a01b0390911690637cb175979034906024015b6000604051808303818588803b15801561073357600080fd5b505af1158015610747573d6000803e3d6000fd5b5050505050565b6000811161075b57600080fd5b6040516370a0823160e01b8152819030906370a0823190610780903390600401611f67565b602060405180830381865afa15801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c19190612116565b101561083a5760405162461bcd60e51b815260206004820152603a60248201527f53757270726973696e676c7920796f752063616e6e6f7420776974686472617760448201527f20746f6b656e20796f752068617665206e6f7420626f7567687400000000000060648201526084015b60405180910390fd5b600b5460009060ff16600114610851576000610854565b60015b905061085e61195a565b6000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561089e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c29190612116565b90506108ce3384611d4e565b600b5460ff1660000361098e576008546001600160a01b031663a9059cbb33610904846c0c9f2c9cd04674edea40000000612145565b600a5461091488620f4240612145565b61091e9190612145565b610928919061215c565b6040518363ffffffff1660e01b815260040161094592919061217e565b6020604051808303816000875af1158015610964573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098891906121a7565b50610a43565b6006546001600160a01b031663c5dac33b34336109b8856c0c9f2c9cd04674edea40000000612145565b600a546109c889620f1b30612145565b6109d29190612145565b6109dc919061215c565b6040516001600160e01b031960e086901b1681526001600160a01b039092166004830152602482015285151560448201526064016000604051808303818588803b158015610a2957600080fd5b505af1158015610a3d573d6000803e3d6000fd5b50505050505b600a546040805142815260208101869052908101919091526060810182905233907f7d655f729e74749ef66079e8380b356147309a7161212c83e699b8e7fb78781c9060800160405180910390a2505050565b610a9e6116ed565b600654604051637cb1759760e01b8152600060048201526001600160a01b0390911690637cb1759790349060240161071a565b610ad96116ed565b600b5460009060ff16600114610af0576000610af3565b60015b6008546006546040516370a0823160e01b81529293506001600160a01b039182169263095ea7b3929091169083906370a0823190610b35903090600401611f67565b602060405180830381865afa158015610b52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b769190612116565b6040518363ffffffff1660e01b8152600401610b9392919061217e565b6020604051808303816000875af1158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd691906121a7565b506006546008546040516370a0823160e01b81526001600160a01b0392831692631c5ecc069234929116906370a0823190610c15903090600401611f67565b602060405180830381865afa158015610c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c569190612116565b6040516001600160e01b031960e085901b168152600481019190915284151560248201526044016000604051808303818588803b158015610c9657600080fd5b505af1158015610caa573d6000803e3d6000fd5b505050505050565b600033610689818585610cc58383611514565b610ccf91906121c2565b6115c8565b6001600160a01b0382166000908152600c602052604090205460ff16610d365760405162461bcd60e51b8152602060048201526017602482015276151bdad95b881b9bdd081e595d081cdd5c1c1bdc9d1959604a1b6044820152606401610831565b60008111610d865760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e7420746f206465706f736974206973206d616e6461746f727900006044820152606401610831565b6000610d9360648361215c565b610d9d90836121d5565b90506000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e039190612116565b600003610e2057610e198364e8d4a51000612145565b9050610f52565b610e2861195a565b600b5460ff16600003610ec257600a54306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9a9190612116565b610eae8569d3c21bcecceda1000000612145565b610eb89190612145565b610e19919061215c565b600a54306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f279190612116565b610f3b8469d3c21bcecceda1000000612145565b610f459190612145565b610f4f919061215c565b90505b610f5c3382611e68565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd391906121a7565b5060065460405163095ea7b360e01b81526001600160a01b038681169263095ea7b3926110089290911690879060040161217e565b6020604051808303816000875af1158015611027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104b91906121a7565b50600b5460ff166001036110c557600654604051630e2f660360e11b815260048101859052600160248201526001600160a01b0390911690631c5ecc069034906044016000604051808303818588803b1580156110a757600080fd5b505af11580156110bb573d6000803e3d6000fd5b505050505061113a565b600b5460ff1660020361113a57600654604051630e2f660360e11b815260048101859052600060248201526001600160a01b0390911690631c5ecc069034906044016000604051808303818588803b15801561112057600080fd5b505af1158015611134573d6000803e3d6000fd5b50505050505b604080514281526001600160a01b03861660208201529081018490526060810182905233907fc43285a6e98e6524bf49b1c1bdda72f38b968b31d2861d4422c0716e89b131819060800160405180910390a250505050565b61119a6116ed565b60ff811615806111ad57508060ff166001145b806111bb57508060ff166002145b6112265760405162461bcd60e51b815260206004820152603660248201527f56616c7565206d757374206265203020666f72206e65757472616c2c203120666044820152751bdc88131bdb99c81bdc880c88199bdc8814da1bdc9d60521b6064820152608401610831565b600b5460ff8083169116036112915760405162461bcd60e51b815260206004820152602b60248201527f52657665727465642062656361757365206578706f736974696f6e206861732060448201526a1b9bdd0818da185b99d95960aa1b6064820152608401610831565b600b805460ff19811660ff84811691821790935560408051428152939092166020840181905291830152907ffa0731d6f72a8f51cd2381cdd6778ccea1323c89d9b49a780eb07d809e4ce1699060600160405180910390a15050565b6112f56116ed565b6001600160a01b0381166000908152600c602052604090205460ff166113535760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081e595d081859191959606a1b6044820152606401610831565b6001600160a01b0381166000908152600c602052604090819020805460ff19169055517f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3906113a3908390611f67565b60405180910390a150565b6113b66116ed565b6113c06000611f17565b565b6113ca6116ed565b6001600160a01b0381166000908152600c602052604090205460ff16156114295760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610831565b6001600160a01b0381166000908152600c602052604090819020805460ff19166001179055517fae340411f33c346ae24187433a8df6e508be40cf0deb3949d51cea12df7fa021906113a3908390611f67565b6060600580546105f8906120dc565b600033816114998286611514565b9050838110156114f95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610831565b6106d882868684036115c8565b6000336106898185856117c1565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6115476116ed565b6113c061195a565b6115576116ed565b6001600160a01b0381166115bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610831565b6115c581611f17565b50565b6001600160a01b03831661162a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610831565b6001600160a01b03821661168b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610831565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000546001600160a01b031633146113c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610831565b60006117538484611514565b905060001981146117bb57818110156117ae5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610831565b6117bb84848484036115c8565b50505050565b6001600160a01b0383166118255760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610831565b6001600160a01b0382166118875760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610831565b6001600160a01b038316600090815260016020526040902054818110156118ff5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610831565b6001600160a01b0380851660008181526001602052604080822086860390559286168082529083902080548601905591516000805160206122a58339815191529061194d9086815260200190565b60405180910390a36117bb565b600a546008546040516370a0823160e01b8152600091829182916001600160a01b0316906370a0823190611992903090600401611f67565b602060405180830381865afa1580156119af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d39190612116565b6119e79069d3c21bcecceda1000000612145565b600954600654600754604051634a3f088d60e01b81529394506000936001600160a01b0393841693634a3f088d93611a2d939082169291169081906001906004016121e8565b610100604051808303816000875af1158015611a4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a719190612212565b5050505050509150506000811115611b095760095460065460075460405163045a6f3760e41b81526001600160a01b03938416936345a6f37093611ac3939082169291169081906001906004016121e8565b60408051808303816000875af1158015611ae1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b059190612278565b9450505b6000611b1585836121c2565b600954600654600854600754604051634a3f088d60e01b81529495506000946001600160a01b0394851694634a3f088d94611b5f94908216939082169291169087906004016121e8565b610100604051808303816000875af1158015611b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba39190612212565b5050505050509150506000811115611c405760095460065460085460075460405163045a6f3760e41b81526001600160a01b03948516946345a6f37094611bfa9490821693908216929116906000906004016121e8565b60408051808303816000875af1158015611c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3c9190612278565b9550505b6000611c4c86836121d5565b905080611c5984876121c2565b611c6391906121c2565b600a819055507f059d0701380a5813cc605b68bc8aae0c943d3aecbfa3d35e11f8396e056eb6cc42600b60009054906101000a900460ff168a600a54898887306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d049190612116565b6040805198895260ff9097166020890152958701949094526060860192909252608085015260a084015260c083015260e08201526101000160405180910390a15050505050505050565b6001600160a01b038216611dae5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610831565b6001600160a01b03821660009081526001602052604090205481811015611e225760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610831565b6001600160a01b03831660008181526001602090815260408083208686039055600380548790039055518581529192916000805160206122a583398151915291016116e0565b6001600160a01b038216611ebe5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610831565b8060036000828254611ed091906121c2565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481526000805160206122a5833981519152910160405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0391909116815260200190565b600060208083528351808285015260005b81811015611fa857858101830151858201604001528201611f8c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611fe057600080fd5b919050565b60008060408385031215611ff857600080fd5b61200183611fc9565b946020939093013593505050565b60006020828403121561202157600080fd5b61202a82611fc9565b9392505050565b60008060006060848603121561204657600080fd5b61204f84611fc9565b925061205d60208501611fc9565b9150604084013590509250925092565b60006020828403121561207f57600080fd5b5035919050565b60006020828403121561209857600080fd5b813560ff8116811461202a57600080fd5b600080604083850312156120bc57600080fd5b6120c583611fc9565b91506120d360208401611fc9565b90509250929050565b600181811c908216806120f057607f821691505b60208210810361211057634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561212857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761068f5761068f61212f565b60008261217957634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03929092168252602082015260400190565b80518015158114611fe057600080fd5b6000602082840312156121b957600080fd5b61202a82612197565b8082018082111561068f5761068f61212f565b8181038181111561068f5761068f61212f565b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b600080600080600080600080610100898b03121561222f57600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925061226260c08a01612197565b915060e089015190509295985092959890939650565b6000806040838503121561228b57600080fd5b61229483612197565b915060208301519050925092905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220bd451247cc278bfaf78b4030f3169e28c82da19845fdd87d7b3beddf5f23377e64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106101c45760003560e01c806370a08231116100f8578063a9059cbb11610090578063a9059cbb146104b3578063ad5c4648146104d3578063aedf795e146104f3578063b3b3453e14610523578063dd62ed3e14610543578063de9257cd14610563578063e6f091f91461057b578063ed61f4a1146105b4578063f2fde38b146105c957600080fd5b806370a082311461039f578063715018a6146103d557806389a30271146103ea5780638cd3f0641461040a5780638da5cb5b1461042a57806395d89b41146104485780639ecbfa421461045d578063a3673b381461047d578063a457c2d71461049357600080fd5b80632e1a7d4d1161016b5780632e1a7d4d146102e05780633027ac22146102f3578063313ce567146102fb578063350245c21461030f578063395093511461031757806347e7ef2414610337578063481d6ee91461034a5780635fa7b5841461036a5780636639a81d1461038a57600080fd5b80630677a2a5146101c957806306fdde03146101f9578063095ea7b31461021b57806311af7d951461024b57806318160ddd1461026d5780631cd2f7c81461028c57806323b872dd146102b857806328250e0d146102d8575b600080fd5b3480156101d557600080fd5b506006546001600160a01b03165b6040516101f09190611f67565b60405180910390f35b34801561020557600080fd5b5061020e6105e9565b6040516101f09190611f7b565b34801561022757600080fd5b5061023b610236366004611fe5565b61067b565b60405190151581526020016101f0565b34801561025757600080fd5b5061026b61026636600461200f565b610695565b005b34801561027957600080fd5b506003545b6040519081526020016101f0565b34801561029857600080fd5b50600b546102a69060ff1681565b60405160ff90911681526020016101f0565b3480156102c457600080fd5b5061023b6102d3366004612031565b6106bf565b61026b6106e3565b61026b6102ee36600461206d565b61074e565b61026b610a96565b34801561030757600080fd5b5060126102a6565b61026b610ad1565b34801561032357600080fd5b5061023b610332366004611fe5565b610cb2565b61026b610345366004611fe5565b610cd4565b34801561035657600080fd5b5061026b610365366004612086565b611192565b34801561037657600080fd5b5061026b61038536600461200f565b6112ed565b34801561039657600080fd5b50600a5461027e565b3480156103ab57600080fd5b5061027e6103ba36600461200f565b6001600160a01b031660009081526001602052604090205490565b3480156103e157600080fd5b5061026b6113ae565b3480156103f657600080fd5b506008546101e3906001600160a01b031681565b34801561041657600080fd5b5061026b61042536600461200f565b6113c2565b34801561043657600080fd5b506000546001600160a01b03166101e3565b34801561045457600080fd5b5061020e61147c565b34801561046957600080fd5b506006546101e3906001600160a01b031681565b34801561048957600080fd5b5061027e600a5481565b34801561049f57600080fd5b5061023b6104ae366004611fe5565b61148b565b3480156104bf57600080fd5b5061023b6104ce366004611fe5565b611506565b3480156104df57600080fd5b506007546101e3906001600160a01b031681565b3480156104ff57600080fd5b5061023b61050e36600461200f565b600c6020526000908152604090205460ff1681565b34801561052f57600080fd5b506009546101e3906001600160a01b031681565b34801561054f57600080fd5b5061027e61055e3660046120a9565b611514565b34801561056f57600080fd5b50600b5460ff166102a6565b34801561058757600080fd5b5061023b61059636600461200f565b6001600160a01b03166000908152600c602052604090205460ff1690565b3480156105c057600080fd5b5061026b61153f565b3480156105d557600080fd5b5061026b6105e436600461200f565b61154f565b6060600480546105f8906120dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610624906120dc565b80156106715780601f1061064657610100808354040283529160200191610671565b820191906000526020600020905b81548152906001019060200180831161065457829003601f168201915b5050505050905090565b6000336106898185856115c8565b60019150505b92915050565b61069d6116ed565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000336106cd858285611747565b6106d88585856117c1565b506001949350505050565b6106eb6116ed565b600654604051637cb1759760e01b8152600160048201526001600160a01b0390911690637cb175979034906024015b6000604051808303818588803b15801561073357600080fd5b505af1158015610747573d6000803e3d6000fd5b5050505050565b6000811161075b57600080fd5b6040516370a0823160e01b8152819030906370a0823190610780903390600401611f67565b602060405180830381865afa15801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c19190612116565b101561083a5760405162461bcd60e51b815260206004820152603a60248201527f53757270726973696e676c7920796f752063616e6e6f7420776974686472617760448201527f20746f6b656e20796f752068617665206e6f7420626f7567687400000000000060648201526084015b60405180910390fd5b600b5460009060ff16600114610851576000610854565b60015b905061085e61195a565b6000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561089e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c29190612116565b90506108ce3384611d4e565b600b5460ff1660000361098e576008546001600160a01b031663a9059cbb33610904846c0c9f2c9cd04674edea40000000612145565b600a5461091488620f4240612145565b61091e9190612145565b610928919061215c565b6040518363ffffffff1660e01b815260040161094592919061217e565b6020604051808303816000875af1158015610964573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098891906121a7565b50610a43565b6006546001600160a01b031663c5dac33b34336109b8856c0c9f2c9cd04674edea40000000612145565b600a546109c889620f1b30612145565b6109d29190612145565b6109dc919061215c565b6040516001600160e01b031960e086901b1681526001600160a01b039092166004830152602482015285151560448201526064016000604051808303818588803b158015610a2957600080fd5b505af1158015610a3d573d6000803e3d6000fd5b50505050505b600a546040805142815260208101869052908101919091526060810182905233907f7d655f729e74749ef66079e8380b356147309a7161212c83e699b8e7fb78781c9060800160405180910390a2505050565b610a9e6116ed565b600654604051637cb1759760e01b8152600060048201526001600160a01b0390911690637cb1759790349060240161071a565b610ad96116ed565b600b5460009060ff16600114610af0576000610af3565b60015b6008546006546040516370a0823160e01b81529293506001600160a01b039182169263095ea7b3929091169083906370a0823190610b35903090600401611f67565b602060405180830381865afa158015610b52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b769190612116565b6040518363ffffffff1660e01b8152600401610b9392919061217e565b6020604051808303816000875af1158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd691906121a7565b506006546008546040516370a0823160e01b81526001600160a01b0392831692631c5ecc069234929116906370a0823190610c15903090600401611f67565b602060405180830381865afa158015610c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c569190612116565b6040516001600160e01b031960e085901b168152600481019190915284151560248201526044016000604051808303818588803b158015610c9657600080fd5b505af1158015610caa573d6000803e3d6000fd5b505050505050565b600033610689818585610cc58383611514565b610ccf91906121c2565b6115c8565b6001600160a01b0382166000908152600c602052604090205460ff16610d365760405162461bcd60e51b8152602060048201526017602482015276151bdad95b881b9bdd081e595d081cdd5c1c1bdc9d1959604a1b6044820152606401610831565b60008111610d865760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e7420746f206465706f736974206973206d616e6461746f727900006044820152606401610831565b6000610d9360648361215c565b610d9d90836121d5565b90506000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e039190612116565b600003610e2057610e198364e8d4a51000612145565b9050610f52565b610e2861195a565b600b5460ff16600003610ec257600a54306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9a9190612116565b610eae8569d3c21bcecceda1000000612145565b610eb89190612145565b610e19919061215c565b600a54306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f279190612116565b610f3b8469d3c21bcecceda1000000612145565b610f459190612145565b610f4f919061215c565b90505b610f5c3382611e68565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd391906121a7565b5060065460405163095ea7b360e01b81526001600160a01b038681169263095ea7b3926110089290911690879060040161217e565b6020604051808303816000875af1158015611027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104b91906121a7565b50600b5460ff166001036110c557600654604051630e2f660360e11b815260048101859052600160248201526001600160a01b0390911690631c5ecc069034906044016000604051808303818588803b1580156110a757600080fd5b505af11580156110bb573d6000803e3d6000fd5b505050505061113a565b600b5460ff1660020361113a57600654604051630e2f660360e11b815260048101859052600060248201526001600160a01b0390911690631c5ecc069034906044016000604051808303818588803b15801561112057600080fd5b505af1158015611134573d6000803e3d6000fd5b50505050505b604080514281526001600160a01b03861660208201529081018490526060810182905233907fc43285a6e98e6524bf49b1c1bdda72f38b968b31d2861d4422c0716e89b131819060800160405180910390a250505050565b61119a6116ed565b60ff811615806111ad57508060ff166001145b806111bb57508060ff166002145b6112265760405162461bcd60e51b815260206004820152603660248201527f56616c7565206d757374206265203020666f72206e65757472616c2c203120666044820152751bdc88131bdb99c81bdc880c88199bdc8814da1bdc9d60521b6064820152608401610831565b600b5460ff8083169116036112915760405162461bcd60e51b815260206004820152602b60248201527f52657665727465642062656361757365206578706f736974696f6e206861732060448201526a1b9bdd0818da185b99d95960aa1b6064820152608401610831565b600b805460ff19811660ff84811691821790935560408051428152939092166020840181905291830152907ffa0731d6f72a8f51cd2381cdd6778ccea1323c89d9b49a780eb07d809e4ce1699060600160405180910390a15050565b6112f56116ed565b6001600160a01b0381166000908152600c602052604090205460ff166113535760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081e595d081859191959606a1b6044820152606401610831565b6001600160a01b0381166000908152600c602052604090819020805460ff19169055517f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3906113a3908390611f67565b60405180910390a150565b6113b66116ed565b6113c06000611f17565b565b6113ca6116ed565b6001600160a01b0381166000908152600c602052604090205460ff16156114295760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610831565b6001600160a01b0381166000908152600c602052604090819020805460ff19166001179055517fae340411f33c346ae24187433a8df6e508be40cf0deb3949d51cea12df7fa021906113a3908390611f67565b6060600580546105f8906120dc565b600033816114998286611514565b9050838110156114f95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610831565b6106d882868684036115c8565b6000336106898185856117c1565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6115476116ed565b6113c061195a565b6115576116ed565b6001600160a01b0381166115bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610831565b6115c581611f17565b50565b6001600160a01b03831661162a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610831565b6001600160a01b03821661168b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610831565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000546001600160a01b031633146113c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610831565b60006117538484611514565b905060001981146117bb57818110156117ae5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610831565b6117bb84848484036115c8565b50505050565b6001600160a01b0383166118255760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610831565b6001600160a01b0382166118875760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610831565b6001600160a01b038316600090815260016020526040902054818110156118ff5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610831565b6001600160a01b0380851660008181526001602052604080822086860390559286168082529083902080548601905591516000805160206122a58339815191529061194d9086815260200190565b60405180910390a36117bb565b600a546008546040516370a0823160e01b8152600091829182916001600160a01b0316906370a0823190611992903090600401611f67565b602060405180830381865afa1580156119af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d39190612116565b6119e79069d3c21bcecceda1000000612145565b600954600654600754604051634a3f088d60e01b81529394506000936001600160a01b0393841693634a3f088d93611a2d939082169291169081906001906004016121e8565b610100604051808303816000875af1158015611a4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a719190612212565b5050505050509150506000811115611b095760095460065460075460405163045a6f3760e41b81526001600160a01b03938416936345a6f37093611ac3939082169291169081906001906004016121e8565b60408051808303816000875af1158015611ae1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b059190612278565b9450505b6000611b1585836121c2565b600954600654600854600754604051634a3f088d60e01b81529495506000946001600160a01b0394851694634a3f088d94611b5f94908216939082169291169087906004016121e8565b610100604051808303816000875af1158015611b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba39190612212565b5050505050509150506000811115611c405760095460065460085460075460405163045a6f3760e41b81526001600160a01b03948516946345a6f37094611bfa9490821693908216929116906000906004016121e8565b60408051808303816000875af1158015611c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3c9190612278565b9550505b6000611c4c86836121d5565b905080611c5984876121c2565b611c6391906121c2565b600a819055507f059d0701380a5813cc605b68bc8aae0c943d3aecbfa3d35e11f8396e056eb6cc42600b60009054906101000a900460ff168a600a54898887306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d049190612116565b6040805198895260ff9097166020890152958701949094526060860192909252608085015260a084015260c083015260e08201526101000160405180910390a15050505050505050565b6001600160a01b038216611dae5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610831565b6001600160a01b03821660009081526001602052604090205481811015611e225760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610831565b6001600160a01b03831660008181526001602090815260408083208686039055600380548790039055518581529192916000805160206122a583398151915291016116e0565b6001600160a01b038216611ebe5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610831565b8060036000828254611ed091906121c2565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481526000805160206122a5833981519152910160405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0391909116815260200190565b600060208083528351808285015260005b81811015611fa857858101830151858201604001528201611f8c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611fe057600080fd5b919050565b60008060408385031215611ff857600080fd5b61200183611fc9565b946020939093013593505050565b60006020828403121561202157600080fd5b61202a82611fc9565b9392505050565b60008060006060848603121561204657600080fd5b61204f84611fc9565b925061205d60208501611fc9565b9150604084013590509250925092565b60006020828403121561207f57600080fd5b5035919050565b60006020828403121561209857600080fd5b813560ff8116811461202a57600080fd5b600080604083850312156120bc57600080fd5b6120c583611fc9565b91506120d360208401611fc9565b90509250929050565b600181811c908216806120f057607f821691505b60208210810361211057634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561212857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761068f5761068f61212f565b60008261217957634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03929092168252602082015260400190565b80518015158114611fe057600080fd5b6000602082840312156121b957600080fd5b61202a82612197565b8082018082111561068f5761068f61212f565b8181038181111561068f5761068f61212f565b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b600080600080600080600080610100898b03121561222f57600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925061226260c08a01612197565b915060e089015190509295985092959890939650565b6000806040838503121561228b57600080fd5b61229483612197565b915060208301519050925092905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220bd451247cc278bfaf78b4030f3169e28c82da19845fdd87d7b3beddf5f23377e64736f6c63430008110033",
  "devdoc": {
    "author": "Victor Gillibert",
    "custom:experimental": "This is an experimental contract.",
    "details": "Improvement to do :Add fees to compensate for transaction fees paid when position need to be modifiedAllow other token to be addedAdd non reentrantGard from OZ",
    "kind": "dev",
    "methods": {
      "acceptToken(address)": {
        "details": "until now, only USDC deposit are handled",
        "params": {
          "tokenAddress": "arbitrum address of the ERC20 token"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(address,uint256)": {
        "details": "take USDC and send back PLP according to current vault value and price per share;",
        "params": {
          "_amount": "amount of USDC decimals 10**6",
          "tokenAddress": "USDC address only for the moment, but keeping the possibility to add other token"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setExposition(uint8)": {
        "details": "only the owner can call this function",
        "params": {
          "_exposition": "0 for neutral | 1 Long | 2 Short"
        }
      },
      "setGMX_controller(address)": {
        "details": "only the owner can call this function",
        "params": {
          "_addr": "address of the controller to add"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "details": "take PLP and send back USDC according to current price per share;",
        "params": {
          "_amount": "amount of PLP decimals 10**18"
        }
      }
    },
    "title": "Vault contract to receive funds and rebalance on GMX thanks to controller according to exposition strategy",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptToken(address)": {
        "notice": "whitelist the token accepted in the vault, allow a better control"
      },
      "deposit(address,uint256)": {
        "notice": "Function that handles the deposit of fund in USDC and sent back PLP token "
      },
      "setExposition(uint8)": {
        "notice": "function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)"
      },
      "setGMX_controller(address)": {
        "notice": "function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)"
      },
      "withdraw(uint256)": {
        "notice": "Function to withdraw funds from the vaultFunction that handles the withdraw of fund"
      }
    },
    "notice": "It works as a fund manager, send token as shares of the vault according to the value in it, send back USDC when token are given back",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10640,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10839,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10845,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 10847,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 10849,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "_name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 10851,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "_symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 1648,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "GMX_controller",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 1651,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "WETH",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 1654,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "USDC",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 1657,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "gmxVault",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 1659,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "netAssetValue",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 1661,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "exposition",
        "offset": 0,
        "slot": "11",
        "type": "t_uint8"
      },
      {
        "astId": 1665,
        "contract": "contracts/MyVault.sol:MyVault",
        "label": "tokenAccepted",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}