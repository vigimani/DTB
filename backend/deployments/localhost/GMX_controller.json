{
  "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "GMXexecutionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        }
      ],
      "name": "decreasePosition",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGMXexecutionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gmxPositionRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gmxRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gmxVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        }
      ],
      "name": "increasePosition",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        }
      ],
      "name": "liquidatePosition",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newFees",
          "type": "uint256"
        }
      ],
      "name": "setGMXexecutionFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setVaultOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xffe0d96cb25789342f7159d73e8a0596f29c11ecb6323ee35ac3ee8a00d11562",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x998abeb3E57409262aE5b751f60747921B33613E",
    "transactionIndex": 0,
    "gasUsed": "1360408",
    "logsBloom": "0x
    "blockHash": "0xb9b2840a5fc887042ed7eca1e83089cfd62a49334aee378b71a2938824331cb6",
    "transactionHash": "0xffe0d96cb25789342f7159d73e8a0596f29c11ecb6323ee35ac3ee8a00d11562",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 63248292,
        "transactionHash": "0xffe0d96cb25789342f7159d73e8a0596f29c11ecb6323ee35ac3ee8a00d11562",
        "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xb9b2840a5fc887042ed7eca1e83089cfd62a49334aee378b71a2938824331cb6"
      }
    ],
    "blockNumber": 63248292,
    "cumulativeGasUsed": "1360408",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x95401dc811bb5740090279Ba06cfA8fcF6113778"
  ],
  "numDeployments": 1,
  "solcInputHash": "a97b8ef12aba17d74d94845ca8abf425",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GMXexecutionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"decreasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGMXexecutionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gmxPositionRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gmxRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gmxVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"increasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"liquidatePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFees\",\"type\":\"uint256\"}],\"name\":\"setGMXexecutionFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setVaultOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Victor Gillibert\",\"custom:experimental\":\"This is an experimental contract.\",\"details\":\"Improvement to do :Allow not only USDC and create functions to handle tokens authorized Allow to modify leverage See if oracle price works better on mainnet\",\"kind\":\"dev\",\"methods\":{\"decreasePosition(address,uint256,bool)\":{\"details\":\"USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\",\"params\":{\"_to\":\"receiver of the funds \",\"isLong\":\"true for Long, False for Short\",\"tokenAmount\":\"amount to withdraw in USDC [10**6]\"}},\"increasePosition(uint256,bool)\":{\"details\":\"USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\",\"params\":{\"isLong\":\"true for Long, False for Short\",\"tokenAmount\":\"amount to withdraw in USDC [10**6]\"}},\"liquidatePosition(bool)\":{\"details\":\"USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\",\"params\":{\"isLong\":\"true for Long, False for Short\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decreasePosition(address,uint256,bool)\":{\"notice\":\"Decrease positions on GMX - only the vault can call this function\"},\"increasePosition(uint256,bool)\":{\"notice\":\"Increase positions on GMX - only the vault can call this function\"},\"liquidatePosition(bool)\":{\"notice\":\"Liquidates positions on GMX - only the vault can call this function\"}},\"notice\":\"This contract should work with any vault on Arbitrum network\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GMX_controller.sol\":\"GMX_controller\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/GMX_controller.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IGMXReader {\\n    function getPositions(address _vault, address _account, address[] memory _collateralTokens, address[] memory _indexTokens, bool[] memory _isLong) external ;\\n}\\ninterface IGMXVault {\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\\n}\\ninterface IGMXRouter {\\n    function approvePlugin(address _plugin) external;\\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external payable ;\\n}\\ninterface IGMXPositionRouter {\\n    function createIncreasePosition(address[] memory _path, address _indexToken, uint256 _amountIn, uint256 _minOut, uint256 _sizeDelta, bool _isLong, uint256 _acceptablePrice, uint256 _executionFee, bytes32 _referralCode, address _callbackTarget) external payable;\\n    function createDecreasePosition(address[] memory _path, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver, uint256 _acceptablePrice, uint256 _minOut, uint256 _executionFee, bool _withdrawETH, address _callbackTarget) external payable;\\n    function minExecutionFee() external view returns (uint256);\\n}\\n\\n\\n/// @title Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network \\n/// @author Victor Gillibert\\n/// @notice This contract should work with any vault on Arbitrum network\\n/// @dev Improvement to do :\\n/// @dev Allow not only USDC and create functions to handle tokens authorized \\n/// @dev Allow to modify leverage \\n/// @dev See if oracle price works better on mainnet\\n/// @custom:experimental This is an experimental contract.\\ncontract GMX_controller is Ownable {\\n    address public gmxVault =\\n        address(0x489ee077994B6658eAfA855C308275EAd8097C4A);\\n    address public gmxRouter =\\n        address(0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064);\\n    address public gmxPositionRouter =\\n        address(0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868);\\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\\n    uint256 public GMXexecutionFee ;\\n    address public vault;\\n\\n    constructor(address _vault) {\\n        vault = _vault;\\n        IGMXRouter(gmxRouter).approvePlugin(gmxPositionRouter);\\n        GMXexecutionFee = IGMXPositionRouter(gmxPositionRouter).minExecutionFee();\\n    }\\n\\n    modifier onlyMyVault {\\n        require(msg.sender == vault, \\\"Not vault\\\");\\n        _;\\n    }\\n    function setVaultOwner(address _addr) external onlyOwner {\\n        vault=_addr;\\n    }\\n    function getVaultOwner() public view returns(address) {\\n        return vault;\\n    }\\n    function setGMXexecutionFees(uint256 _newFees) external onlyOwner{\\n        GMXexecutionFee = _newFees;\\n    }\\n    function getGMXexecutionFees() public view returns(uint256) {\\n        return GMXexecutionFee;\\n    }\\n\\n    /// @notice Increase positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable onlyMyVault{\\n        IERC20(USDC).transferFrom(vault, address(this), tokenAmount);\\n        IERC20(USDC).approve(gmxRouter, tokenAmount);\\n        uint256 positionSize = ((tokenAmount * 1e24 * 110)/100); // 1.1x leverage \\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert USDC to WETH\\n            path[0] = USDC;\\n            path[1] = WETH;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030 / 10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(\\n                path,\\n                WETH,\\n                tokenAmount,\\n                0,\\n                positionSize,\\n                isLong,\\n                acceptablePrice,\\n                GMXexecutionFee,\\n                0x6d79726566657272616c4d6176696e6967690000000000000000000000000000,\\n                address(0)\\n            );            \\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(path, WETH, tokenAmount, 0, positionSize, isLong, acceptablePrice, GMXexecutionFee, 0x0, address(0));\\n        }\\n    }\\n\\n    /// @notice Decrease positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param _to receiver of the funds \\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100);\\n\\n        // uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100) * (tokenAmount*1e24 +GMXexecutionFee*10**18)/(tokenAmount*1e24);\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong, _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong,  _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n    /// @notice Liquidates positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param isLong true for Long, False for Short\\n    function liquidatePosition(bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2); //[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), WETH, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), USDC, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x7bfd6d9457179c528af89e234dea80889046984b3148acaa52cb729ab0814dc7\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600180546001600160a01b031990811673489ee077994b6658eafa855c308275ead8097c4a1790915560028054821673abbc5f99639c9b6bcb58544ddf04efa6802f406417905560038054821673b87a436b93ffe9d75c5cfa7bacfff96430b098681790556004805482167382af49447d8a07e3bd95bd0d56f35241523fbab11790556005805490911673ff970a61a04b1ca14834a43f5de4533ebddb5cc8179055348015620000b357600080fd5b506040516200163738038062001637833981016040819052620000d69162000230565b620000e133620001e0565b600780546001600160a01b0319166001600160a01b03838116919091179091556002546003546040516338c74dd960e01b815290831660048201529116906338c74dd990602401600060405180830381600087803b1580156200014357600080fd5b505af115801562000158573d6000803e3d6000fd5b50505050600360009054906101000a90046001600160a01b03166001600160a01b03166363ae21036040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d6919062000262565b600655506200027c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200024357600080fd5b81516001600160a01b03811681146200025b57600080fd5b9392505050565b6000602082840312156200027557600080fd5b5051919050565b6113ab806200028c6000396000f3fe6080604052600436106100de5760003560e01c806389a302711161008557806389a30271146101c75780638da5cb5b146101e7578063a44ca34614610205578063ad5c464814610223578063b3b3453e14610243578063c5dac33b14610263578063c657e7c214610276578063f2fde38b14610296578063fbfa77cf146102b657600080fd5b80631c5ecc06146100e35780632c908916146100f8578063434c0c751461011c578063634e318014610132578063715018a61461015f57806379db7ef1146101745780637cb175971461019457806380b3631c146101a7575b600080fd5b6100f66100f136600461100b565b6102d6565b005b34801561010457600080fd5b506006545b6040519081526020015b60405180910390f35b34801561012857600080fd5b5061010960065481565b34801561013e57600080fd5b50600254610152906001600160a01b031681565b604051610113919061103b565b34801561016b57600080fd5b506100f661074b565b34801561018057600080fd5b506100f661018f36600461104f565b61075f565b6100f66101a2366004611068565b61076c565b3480156101b357600080fd5b506100f66101c23660046110a8565b610b23565b3480156101d357600080fd5b50600554610152906001600160a01b031681565b3480156101f357600080fd5b506000546001600160a01b0316610152565b34801561021157600080fd5b506007546001600160a01b0316610152565b34801561022f57600080fd5b50600454610152906001600160a01b031681565b34801561024f57600080fd5b50600154610152906001600160a01b031681565b6100f66102713660046110c3565b610b4d565b34801561028257600080fd5b50600354610152906001600160a01b031681565b3480156102a257600080fd5b506100f66102b13660046110a8565b610eda565b3480156102c257600080fd5b50600754610152906001600160a01b031681565b6007546001600160a01b031633146103095760405162461bcd60e51b815260040161030090611103565b60405180910390fd5b6005546007546040516323b872dd60e01b81526001600160a01b039182166004820152306024820152604481018590529116906323b872dd906064016020604051808303816000875af1158015610364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103889190611126565b5060055460025460405163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b3906044016020604051808303816000875af11580156103de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104029190611126565b506000606461041b8469d3c21bcecceda1000000611143565b61042690606e611143565b610430919061116e565b9050600082156105e457604080516002808252606082018352600092602083019080368337505060055482519293506001600160a01b03169183915060009061047b5761047b611190565b6001600160a01b0392831660209182029290920101526004548251911690829060019081106104ac576104ac611190565b6001600160a01b03928316602091820292909201015260015460048054604051637092736960e11b8152612710949384169363e124e6d2936104f293909116910161103b565b602060405180830381865afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053391906111a6565b61053f9061272e611143565b610549919061116e565b6003546004805460065460405163f2ae372f60e01b81529496506001600160a01b039384169463f2ae372f9434946105ac9489949216928d926000928d928f928e929091716d79726566657272616c4d6176696e69676960701b91879101611203565b6000604051808303818588803b1580156105c557600080fd5b505af11580156105d9573d6000803e3d6000fd5b505050505050610745565b60408051600180825281830190925260009160208083019080368337505060055482519293506001600160a01b03169183915060009061062657610626611190565b6001600160a01b039283166020918202929092010152600154600480546040516340d3096b60e11b815261271094938416936381a612d69361066c93909116910161103b565b602060405180830381865afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad91906111a6565b6106b9906126f2611143565b6106c3919061116e565b6003546004805460065460405163f2ae372f60e01b81529496506001600160a01b039384169463f2ae372f9434946107119489949216928d926000928d928f928e9290918691829101611203565b6000604051808303818588803b15801561072a57600080fd5b505af115801561073e573d6000803e3d6000fd5b5050505050505b50505050565b610753610f53565b61075d6000610fad565b565b610767610f53565b600655565b6007546001600160a01b031633146107965760405162461bcd60e51b815260040161030090611103565b600081156109bd57604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b0316918391506000906107df576107df611190565b6001600160a01b03928316602091820292909201015260055482519116908290600190811061081057610810611190565b6001600160a01b03928316602091820292909201015260015460048054604051634a3f088d60e01b815260009493841693634a3f088d9361085a93309392169182918b910161126e565b610100604051808303816000875af115801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190611298565b5050600154600480546040516340d3096b60e11b8152989950612710986001600160a01b0393841698506381a612d697506108e096509216935001905061103b565b602060405180830381865afa1580156108fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092191906111a6565b61092d906126f2611143565b610937919061116e565b60035460048054600654604051637be7d14160e01b81529497506001600160a01b0393841694637be7d141943494610985948a949216926000928a928e9233928f9287928391829101611302565b6000604051808303818588803b15801561099e57600080fd5b505af11580156109b2573d6000803e3d6000fd5b505050505050505050565b60408051600180825281830190925260009160208083019080368337505060055482519293506001600160a01b0316918391506000906109ff576109ff611190565b6001600160a01b03928316602091820292909201015260015460055460048054604051634a3f088d60e01b815260009594851694634a3f088d94610a509430949183169391909216918b910161126e565b610100604051808303816000875af1158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a949190611298565b505060015460048054604051637092736960e11b8152989950612710986001600160a01b03938416985063e124e6d29750610ad696509216935001905061103b565b602060405180830381865afa158015610af3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1791906111a6565b61092d9061272e611143565b610b2b610f53565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b03163314610b775760405162461bcd60e51b815260040161030090611103565b6000806064610b908569d3c21bcecceda1000000611143565b610b9b90606e611143565b610ba5919061116e565b90508215610d5a57604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b031691839150600090610bee57610bee611190565b6001600160a01b039283166020918202929092010152600554825191169082906001908110610c1f57610c1f611190565b6001600160a01b039283166020918202929092010152600154600480546040516340d3096b60e11b815261271094938416936381a612d693610c6593909116910161103b565b602060405180830381865afa158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca691906111a6565b610cb2906126f2611143565b610cbc919061116e565b6003546004549194506001600160a01b0390811691637be7d141913491859116610cf08a69d3c21bcecceda1000000611143565b878a8d8b60006006546000806040518d63ffffffff1660e01b8152600401610d229b9a99989796959493929190611302565b6000604051808303818588803b158015610d3b57600080fd5b505af1158015610d4f573d6000803e3d6000fd5b505050505050610ed3565b60408051600180825281830190925260009160208083019080368337505060055482519293506001600160a01b031691839150600090610d9c57610d9c611190565b6001600160a01b03928316602091820292909201015260015460048054604051637092736960e11b8152612710949384169363e124e6d293610de293909116910161103b565b602060405180830381865afa158015610dff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2391906111a6565b610e2f9061272e611143565b610e39919061116e565b6003546004549194506001600160a01b0390811691637be7d141913491859116610e6d8a69d3c21bcecceda1000000611143565b878a8d8b60006006546000806040518d63ffffffff1660e01b8152600401610e9f9b9a99989796959493929190611302565b6000604051808303818588803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b5050505050505b5050505050565b610ee2610f53565b6001600160a01b038116610f475760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610300565b610f5081610fad565b50565b6000546001600160a01b0316331461075d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610300565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8015158114610f5057600080fd5b6000806040838503121561101e57600080fd5b82359150602083013561103081610ffd565b809150509250929050565b6001600160a01b0391909116815260200190565b60006020828403121561106157600080fd5b5035919050565b60006020828403121561107a57600080fd5b813561108581610ffd565b9392505050565b80356001600160a01b03811681146110a357600080fd5b919050565b6000602082840312156110ba57600080fd5b6110858261108c565b6000806000606084860312156110d857600080fd5b6110e18461108c565b92506020840135915060408401356110f881610ffd565b809150509250925092565b602080825260099082015268139bdd081d985d5b1d60ba1b604082015260600190565b60006020828403121561113857600080fd5b815161108581610ffd565b808202811582820484141761116857634e487b7160e01b600052601160045260246000fd5b92915050565b60008261118b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156111b857600080fd5b5051919050565b600081518084526020808501945080840160005b838110156111f85781516001600160a01b0316875295820195908201906001016111d3565b509495945050505050565b60006101408083526112178184018e6111bf565b6001600160a01b039c8d166020850152604084019b909b5250506060810197909752608087019590955292151560a086015260c085019190915260e084015261010083015290921661012090920191909152919050565b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b600080600080600080600080610100898b0312156112b557600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c08901516112ea81610ffd565b8092505060e089015190509295985092959890939650565b60006101608083526113168184018f6111bf565b6001600160a01b039d8e166020850152604084019c909c5250506060810198909852951515608088015293881660a087015260c086019290925260e085015261010084015215156101208301529092166101409092019190915291905056fea264697066735822122093b7944af4b414bfdf50c550abe21d82ce4da750d980263aa03165270e243d6c64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100de5760003560e01c806389a302711161008557806389a30271146101c75780638da5cb5b146101e7578063a44ca34614610205578063ad5c464814610223578063b3b3453e14610243578063c5dac33b14610263578063c657e7c214610276578063f2fde38b14610296578063fbfa77cf146102b657600080fd5b80631c5ecc06146100e35780632c908916146100f8578063434c0c751461011c578063634e318014610132578063715018a61461015f57806379db7ef1146101745780637cb175971461019457806380b3631c146101a7575b600080fd5b6100f66100f136600461100b565b6102d6565b005b34801561010457600080fd5b506006545b6040519081526020015b60405180910390f35b34801561012857600080fd5b5061010960065481565b34801561013e57600080fd5b50600254610152906001600160a01b031681565b604051610113919061103b565b34801561016b57600080fd5b506100f661074b565b34801561018057600080fd5b506100f661018f36600461104f565b61075f565b6100f66101a2366004611068565b61076c565b3480156101b357600080fd5b506100f66101c23660046110a8565b610b23565b3480156101d357600080fd5b50600554610152906001600160a01b031681565b3480156101f357600080fd5b506000546001600160a01b0316610152565b34801561021157600080fd5b506007546001600160a01b0316610152565b34801561022f57600080fd5b50600454610152906001600160a01b031681565b34801561024f57600080fd5b50600154610152906001600160a01b031681565b6100f66102713660046110c3565b610b4d565b34801561028257600080fd5b50600354610152906001600160a01b031681565b3480156102a257600080fd5b506100f66102b13660046110a8565b610eda565b3480156102c257600080fd5b50600754610152906001600160a01b031681565b6007546001600160a01b031633146103095760405162461bcd60e51b815260040161030090611103565b60405180910390fd5b6005546007546040516323b872dd60e01b81526001600160a01b039182166004820152306024820152604481018590529116906323b872dd906064016020604051808303816000875af1158015610364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103889190611126565b5060055460025460405163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b3906044016020604051808303816000875af11580156103de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104029190611126565b506000606461041b8469d3c21bcecceda1000000611143565b61042690606e611143565b610430919061116e565b9050600082156105e457604080516002808252606082018352600092602083019080368337505060055482519293506001600160a01b03169183915060009061047b5761047b611190565b6001600160a01b0392831660209182029290920101526004548251911690829060019081106104ac576104ac611190565b6001600160a01b03928316602091820292909201015260015460048054604051637092736960e11b8152612710949384169363e124e6d2936104f293909116910161103b565b602060405180830381865afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053391906111a6565b61053f9061272e611143565b610549919061116e565b6003546004805460065460405163f2ae372f60e01b81529496506001600160a01b039384169463f2ae372f9434946105ac9489949216928d926000928d928f928e929091716d79726566657272616c4d6176696e69676960701b91879101611203565b6000604051808303818588803b1580156105c557600080fd5b505af11580156105d9573d6000803e3d6000fd5b505050505050610745565b60408051600180825281830190925260009160208083019080368337505060055482519293506001600160a01b03169183915060009061062657610626611190565b6001600160a01b039283166020918202929092010152600154600480546040516340d3096b60e11b815261271094938416936381a612d69361066c93909116910161103b565b602060405180830381865afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad91906111a6565b6106b9906126f2611143565b6106c3919061116e565b6003546004805460065460405163f2ae372f60e01b81529496506001600160a01b039384169463f2ae372f9434946107119489949216928d926000928d928f928e9290918691829101611203565b6000604051808303818588803b15801561072a57600080fd5b505af115801561073e573d6000803e3d6000fd5b5050505050505b50505050565b610753610f53565b61075d6000610fad565b565b610767610f53565b600655565b6007546001600160a01b031633146107965760405162461bcd60e51b815260040161030090611103565b600081156109bd57604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b0316918391506000906107df576107df611190565b6001600160a01b03928316602091820292909201015260055482519116908290600190811061081057610810611190565b6001600160a01b03928316602091820292909201015260015460048054604051634a3f088d60e01b815260009493841693634a3f088d9361085a93309392169182918b910161126e565b610100604051808303816000875af115801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190611298565b5050600154600480546040516340d3096b60e11b8152989950612710986001600160a01b0393841698506381a612d697506108e096509216935001905061103b565b602060405180830381865afa1580156108fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092191906111a6565b61092d906126f2611143565b610937919061116e565b60035460048054600654604051637be7d14160e01b81529497506001600160a01b0393841694637be7d141943494610985948a949216926000928a928e9233928f9287928391829101611302565b6000604051808303818588803b15801561099e57600080fd5b505af11580156109b2573d6000803e3d6000fd5b505050505050505050565b60408051600180825281830190925260009160208083019080368337505060055482519293506001600160a01b0316918391506000906109ff576109ff611190565b6001600160a01b03928316602091820292909201015260015460055460048054604051634a3f088d60e01b815260009594851694634a3f088d94610a509430949183169391909216918b910161126e565b610100604051808303816000875af1158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a949190611298565b505060015460048054604051637092736960e11b8152989950612710986001600160a01b03938416985063e124e6d29750610ad696509216935001905061103b565b602060405180830381865afa158015610af3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1791906111a6565b61092d9061272e611143565b610b2b610f53565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b03163314610b775760405162461bcd60e51b815260040161030090611103565b6000806064610b908569d3c21bcecceda1000000611143565b610b9b90606e611143565b610ba5919061116e565b90508215610d5a57604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b031691839150600090610bee57610bee611190565b6001600160a01b039283166020918202929092010152600554825191169082906001908110610c1f57610c1f611190565b6001600160a01b039283166020918202929092010152600154600480546040516340d3096b60e11b815261271094938416936381a612d693610c6593909116910161103b565b602060405180830381865afa158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca691906111a6565b610cb2906126f2611143565b610cbc919061116e565b6003546004549194506001600160a01b0390811691637be7d141913491859116610cf08a69d3c21bcecceda1000000611143565b878a8d8b60006006546000806040518d63ffffffff1660e01b8152600401610d229b9a99989796959493929190611302565b6000604051808303818588803b158015610d3b57600080fd5b505af1158015610d4f573d6000803e3d6000fd5b505050505050610ed3565b60408051600180825281830190925260009160208083019080368337505060055482519293506001600160a01b031691839150600090610d9c57610d9c611190565b6001600160a01b03928316602091820292909201015260015460048054604051637092736960e11b8152612710949384169363e124e6d293610de293909116910161103b565b602060405180830381865afa158015610dff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2391906111a6565b610e2f9061272e611143565b610e39919061116e565b6003546004549194506001600160a01b0390811691637be7d141913491859116610e6d8a69d3c21bcecceda1000000611143565b878a8d8b60006006546000806040518d63ffffffff1660e01b8152600401610e9f9b9a99989796959493929190611302565b6000604051808303818588803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b5050505050505b5050505050565b610ee2610f53565b6001600160a01b038116610f475760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610300565b610f5081610fad565b50565b6000546001600160a01b0316331461075d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610300565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8015158114610f5057600080fd5b6000806040838503121561101e57600080fd5b82359150602083013561103081610ffd565b809150509250929050565b6001600160a01b0391909116815260200190565b60006020828403121561106157600080fd5b5035919050565b60006020828403121561107a57600080fd5b813561108581610ffd565b9392505050565b80356001600160a01b03811681146110a357600080fd5b919050565b6000602082840312156110ba57600080fd5b6110858261108c565b6000806000606084860312156110d857600080fd5b6110e18461108c565b92506020840135915060408401356110f881610ffd565b809150509250925092565b602080825260099082015268139bdd081d985d5b1d60ba1b604082015260600190565b60006020828403121561113857600080fd5b815161108581610ffd565b808202811582820484141761116857634e487b7160e01b600052601160045260246000fd5b92915050565b60008261118b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156111b857600080fd5b5051919050565b600081518084526020808501945080840160005b838110156111f85781516001600160a01b0316875295820195908201906001016111d3565b509495945050505050565b60006101408083526112178184018e6111bf565b6001600160a01b039c8d166020850152604084019b909b5250506060810197909752608087019590955292151560a086015260c085019190915260e084015261010083015290921661012090920191909152919050565b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b600080600080600080600080610100898b0312156112b557600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c08901516112ea81610ffd565b8092505060e089015190509295985092959890939650565b60006101608083526113168184018f6111bf565b6001600160a01b039d8e166020850152604084019c909c5250506060810198909852951515608088015293881660a087015260c086019290925260e085015261010084015215156101208301529092166101409092019190915291905056fea264697066735822122093b7944af4b414bfdf50c550abe21d82ce4da750d980263aa03165270e243d6c64736f6c63430008110033",
  "devdoc": {
    "author": "Victor Gillibert",
    "custom:experimental": "This is an experimental contract.",
    "details": "Improvement to do :Allow not only USDC and create functions to handle tokens authorized Allow to modify leverage See if oracle price works better on mainnet",
    "kind": "dev",
    "methods": {
      "decreasePosition(address,uint256,bool)": {
        "details": "USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();",
        "params": {
          "_to": "receiver of the funds ",
          "isLong": "true for Long, False for Short",
          "tokenAmount": "amount to withdraw in USDC [10**6]"
        }
      },
      "increasePosition(uint256,bool)": {
        "details": "USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();",
        "params": {
          "isLong": "true for Long, False for Short",
          "tokenAmount": "amount to withdraw in USDC [10**6]"
        }
      },
      "liquidatePosition(bool)": {
        "details": "USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();",
        "params": {
          "isLong": "true for Long, False for Short"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network ",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "decreasePosition(address,uint256,bool)": {
        "notice": "Decrease positions on GMX - only the vault can call this function"
      },
      "increasePosition(uint256,bool)": {
        "notice": "Increase positions on GMX - only the vault can call this function"
      },
      "liquidatePosition(bool)": {
        "notice": "Liquidates positions on GMX - only the vault can call this function"
      }
    },
    "notice": "This contract should work with any vault on Arbitrum network",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10640,
        "contract": "contracts/GMX_controller.sol:GMX_controller",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 986,
        "contract": "contracts/GMX_controller.sol:GMX_controller",
        "label": "gmxVault",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 992,
        "contract": "contracts/GMX_controller.sol:GMX_controller",
        "label": "gmxRouter",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 998,
        "contract": "contracts/GMX_controller.sol:GMX_controller",
        "label": "gmxPositionRouter",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1001,
        "contract": "contracts/GMX_controller.sol:GMX_controller",
        "label": "WETH",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 1004,
        "contract": "contracts/GMX_controller.sol:GMX_controller",
        "label": "USDC",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1006,
        "contract": "contracts/GMX_controller.sol:GMX_controller",
        "label": "GMXexecutionFee",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1008,
        "contract": "contracts/GMX_controller.sol:GMX_controller",
        "label": "vault",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}