{"id":"bcaf1e1b1e1592f754b89c3aa562ec5b","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/GMX_controller.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\nimport \"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface IGMXReader {\n    function getPositions(address _vault, address _account, address[] memory _collateralTokens, address[] memory _indexTokens, bool[] memory _isLong) external ;\n}\ninterface IGMXVault {\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\n    function getMaxPrice(address _token) external view returns (uint256);\n    function getMinPrice(address _token) external view returns (uint256);\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\n}\ninterface IGMXRouter {\n    function approvePlugin(address _plugin) external;\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external payable ;\n}\ninterface IGMXPositionRouter {\n    function createIncreasePosition(address[] memory _path, address _indexToken, uint256 _amountIn, uint256 _minOut, uint256 _sizeDelta, bool _isLong, uint256 _acceptablePrice, uint256 _executionFee, bytes32 _referralCode, address _callbackTarget) external payable;\n    function createDecreasePosition(address[] memory _path, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver, uint256 _acceptablePrice, uint256 _minOut, uint256 _executionFee, bool _withdrawETH, address _callbackTarget) external payable;\n    function minExecutionFee() external view returns (uint256);\n}\n\n\n/// @title Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network \n/// @author Victor Gillibert\n/// @notice This contract should work with any vault on Arbitrum network\n/// @dev Improvement to do :\n/// @dev Allow not only USDC and create functions to handle tokens authorized \n/// @dev Allow to modify leverage \n/// @dev See if oracle price works better on mainnet\n/// @custom:experimental This is an experimental contract.\ncontract GMX_controller is Ownable {\n    address public gmxVault =0x489ee077994B6658eAfA855C308275EAd8097C4A;\n    address public gmxRouter =0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064;\n    address public gmxPositionRouter =0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868;\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\n    uint256 public GMXexecutionFee ;\n    address public vault;\n\n    constructor(address _vault) {\n        vault = _vault;\n        IGMXRouter(gmxRouter).approvePlugin(gmxPositionRouter);\n        GMXexecutionFee = IGMXPositionRouter(gmxPositionRouter).minExecutionFee();\n    }\n\n    modifier onlyMyVault {\n        require(msg.sender == vault, \"Not vault\");\n        _;\n    }\n    function setVaultOwner(address _addr) external onlyOwner {\n        vault=_addr;\n    }\n    function getVaultOwner() public view returns(address) {\n        return vault;\n    }\n    function setGMXexecutionFees(uint256 _newFees) external onlyOwner{\n        GMXexecutionFee = _newFees;\n    }\n    function getGMXexecutionFees() public view returns(uint256) {\n        return GMXexecutionFee;\n    }\n\n    /// @notice Increase positions on GMX - only the vault can call this function\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\n    /// @param isLong true for Long, False for Short\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable onlyMyVault{\n        IERC20(USDC).transferFrom(vault, address(this), tokenAmount);\n        IERC20(USDC).approve(gmxRouter, tokenAmount);\n        uint256 positionSize = ((tokenAmount * 1e24 * 110)/100); // 1.1x leverage \n        uint256 acceptablePrice = 0;\n        if (isLong) {\n            address[] memory path = new address[](2);//[2] because GMX has to convert USDC to WETH\n            path[0] = USDC;\n            path[1] = WETH;\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030 / 10000;// GMX uses 30 bps tolerance\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(\n                path,\n                WETH,\n                tokenAmount,\n                0,\n                positionSize,\n                isLong,\n                acceptablePrice,\n                GMXexecutionFee,\n                0x6d79726566657272616c4d6176696e6967690000000000000000000000000000,\n                address(0)\n            );            \n        } else {\n            address[] memory path = new address[](1);\n            path[0] = USDC;\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// GMX uses 30 bps tolerance\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(path, WETH, tokenAmount, 0, positionSize, isLong, acceptablePrice, GMXexecutionFee, 0x0, address(0));\n        }\n    }\n\n    /// @notice Decrease positions on GMX - only the vault can call this function\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\n    /// @param _to receiver of the funds \n    /// @param tokenAmount amount to withdraw in USDC [10**6]\n    /// @param isLong true for Long, False for Short\n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable onlyMyVault {\n        uint256 acceptablePrice = 0;\n        uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100);\n\n        // uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100) * (tokenAmount*1e24 +GMXexecutionFee*10**18)/(tokenAmount*1e24);\n        if (isLong) {\n            address[] memory path = new address[](2);//[2] because GMX has to convert WETH back in USDC\n            path[0] = WETH;\n            path[1] = USDC;\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong, _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\n        } else {\n            address[] memory path = new address[](1);\n            path[0] = USDC;\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong,  _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\n        }\n    }\n\n    /// @notice Liquidates positions on GMX - only the vault can call this function\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\n    /// @param isLong true for Long, False for Short\n    function liquidatePosition(bool isLong) external payable onlyMyVault {\n        uint256 acceptablePrice = 0;\n        if (isLong) {\n            address[] memory path = new address[](2); //[2] because GMX has to convert WETH back in USDC\n            path[0] = WETH;\n            path[1] = USDC;\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), WETH, WETH, isLong);\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\n        } else {\n            address[] memory path = new address[](1);\n            path[0] = USDC;\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), USDC, WETH, isLong);\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\n        }\n    }\n\n}\n"},"contracts/MyVault.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\nimport \"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n\ninterface IGMXController {\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable ; \n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable ; \n    function liquidatePosition(bool isLong) external payable ; \n}\n\ninterface IGMXVault {\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\n    function getMaxPrice(address _token) external view returns (uint256);\n    function getMinPrice(address _token) external view returns (uint256);\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\n}\n\n/// @title Vault contract to receive funds and rebalance on GMX thanks to controller according to exposition strategy\n/// @author Victor Gillibert\n/// @notice It works as a fund manager, send token as shares of the vault according to the value in it, send back USDC when token are given back\n/// @dev Improvement to do :\n/// @dev Add fees to compensate for transaction fees paid when position need to be modified\n/// @dev Allow other token to be added\n/// @custom:experimental This is an experimental contract.\ncontract MyVault is Ownable, ERC20, ReentrancyGuard {\n    // ::::::::::::: VARIABLE AND EVENT ::::::::::::: //\n    address public GMX_controller;\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\n    address public gmxVault = 0x489ee077994B6658eAfA855C308275EAd8097C4A;\n    uint256 public netAssetValue;\n    uint8 public exposition; //0 neutral - 1 Long ETH - 2 short ETH\n\n    mapping(address => bool) public tokenAccepted;\n    event NewTokenAdded(address tokenAddress);\n    event TokenRemoved(address tokenAddress);\n    event expoEvent(uint256 when, uint8 oldexpo, uint8 newexpo);\n    event depositEvent(\n        address indexed account,\n        uint256 when,\n        address token_deposited,\n        uint256 amount,\n        uint256 PLPissued\n    );\n    event withdrawEvent(\n        address indexed account,\n        uint256 when,\n        uint256 amount,\n        uint256 nav,\n        uint256 preop_supply\n    );\n    event navEvent(\n        uint256 when,\n        uint8 exposition,\n        uint256 oldNAV,\n        uint256 NAV,\n        uint256 usdcNAV,\n        uint256 longNAV,\n        uint256 shortNAV,\n        uint256 totalsupply\n    );\n\n    // ::::::::::::: CONSTRUCTOR ::::::::::::: //\n\n    constructor() ERC20(\"Polyplus\", \"PLP\") {\n        exposition = 0;\n        netAssetValue = 1;\n    }\n\n    // ::::::::::::: HANDLING TOKEN LISTS ACCEPTED ::::::::::::: //\n\n    //Gestion des tokens acceptés [until now stable only with USDC]\n    /// @notice whitelist the token accepted in the vault, allow a better control\n    /// @dev until now, only USDC deposit are handled\n    /// @param tokenAddress arbitrum address of the ERC20 token\n    function acceptToken(address tokenAddress) external onlyOwner {\n        require(!tokenAccepted[tokenAddress], \"Token already added\");\n        tokenAccepted[tokenAddress] = true;\n        emit NewTokenAdded(tokenAddress);\n    }\n    function removeToken(address tokenAddress) external onlyOwner {\n        require(tokenAccepted[tokenAddress], \"Token not yet added\");\n        tokenAccepted[tokenAddress] = false;\n        emit TokenRemoved(tokenAddress);\n    }\n    function isAccepted(address tokenAddress) external view returns (bool) {\n        return tokenAccepted[tokenAddress];\n    }\n\n    // ::::::::::::: GMX CONTROLLER AND FEES::::::::::::: //\n\n    /// @notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\n    /// @dev only the owner can call this function\n    /// @param _addr address of the controller to add\n    function setGMX_controller(address _addr) external onlyOwner {\n        GMX_controller = _addr;\n    }\n    function getGMX_controller() public view returns (address) {\n        return GMX_controller;\n    }\n\n    // ::::::::::::: STRATEGY EXPOSITION AND GLOBAL TX ::::::::::::: //\n\n    /// @notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\n    /// @dev only the owner can call this function\n    /// @param _exposition 0 for neutral | 1 Long | 2 Short\n    function setExposition(uint8 _exposition) external onlyOwner {\n        require(\n            _exposition == 0 || _exposition == 1 || _exposition == 2,\n            \"Value must be 0 for neutral, 1 for Long or 2 for Short\"\n        );\n        require(\n            exposition != _exposition,\n            \"Reverted because exposition has not changed\"\n        );\n        uint8 oldexposition = exposition;\n        exposition = _exposition;\n        emit expoEvent(block.timestamp, oldexposition, exposition);\n    }\n    function getExposition() external view returns (uint8) {\n        return exposition;\n    }\n    function openPosition() external payable onlyOwner {\n        bool isLong = (exposition == 1 ? true : false);\n        IERC20(USDC).approve(\n            GMX_controller,\n            IERC20(USDC).balanceOf(address(this))\n        );\n        IGMXController(GMX_controller).increasePosition{value: msg.value}(\n            IERC20(USDC).balanceOf(address(this)),\n            isLong\n        );\n    }\n    function liquidateLongPositions() external payable onlyOwner {\n        IGMXController(GMX_controller).liquidatePosition{value: msg.value}(\n            true\n        );\n    }\n    function liquidateShortPositions() external payable onlyOwner {\n        IGMXController(GMX_controller).liquidatePosition{value: msg.value}(\n            false\n        );\n    }\n\n    // ::::::::::::: NET ASSET VALUE OF THE FUNDS ::::::::::::: //\n   \n    function updateNetAssetValue() external onlyOwner {\n        _updateNAV();\n    }\n    //decimals 10**30\n    function _updateNAV() private {\n        uint256 oldNAV = netAssetValue;\n        uint256 _deltavalueLong = 0;\n        uint256 _deltavalueShort = 0;\n        uint256 usdcBal = ERC20(USDC).balanceOf(address(this)) * 10**24; ///10**18 met USDC 6 decimals donc 10**12\n        (, uint256 _collateralLong, , , , , , ) = IGMXVault(gmxVault)\n            .getPosition(GMX_controller, WETH, WETH, true);\n        if (_collateralLong > 0) {\n            (, _deltavalueLong) = IGMXVault(gmxVault).getPositionDelta(\n                GMX_controller,\n                WETH,\n                WETH,\n                true\n            );\n        }\n        uint256 posLong = (_collateralLong + _deltavalueLong);\n        (, uint256 _collateralShort, , , , , , ) = IGMXVault(gmxVault)\n            .getPosition(GMX_controller, USDC, WETH, false);\n        if (_collateralShort > 0) {\n            (, _deltavalueShort) = IGMXVault(gmxVault).getPositionDelta(\n                GMX_controller,\n                USDC,\n                WETH,\n                false\n            );\n        }\n        uint256 posShort = (_collateralShort - _deltavalueShort);\n        netAssetValue = usdcBal + posLong + posShort;\n        emit navEvent(\n            block.timestamp,\n            exposition,\n            oldNAV,\n            netAssetValue,\n            usdcBal,\n            posLong,\n            posShort,\n            this.totalSupply()\n        );\n    }\n    function getNetAssetValue() external view returns (uint256) {\n        return netAssetValue;\n    }\n\n    // ::::::::::::: USER INTERFACE ::::::::::::: //\n\n    /// @notice Function that handles the deposit of fund in USDC and sent back PLP token \n    /// @dev take USDC and send back PLP according to current vault value and price per share;\n    /// @param tokenAddress USDC address only for the moment, but keeping the possibility to add other token\n    /// @param _amount amount of USDC decimals 10**6\n    function deposit(address tokenAddress, uint256 _amount) external payable nonReentrant {\n        require(tokenAccepted[tokenAddress], \"Token not yet supported\");\n        require(_amount > 0, \"Amount to deposit is mandatory\");\n        uint256 amountToken = _amount - _amount / 100; //1% entry fees paid to GMX [0.1% entry fees + 0.8% swap fees]\n        uint256 amountPLPToken;\n        if (this.totalSupply() == 0) {\n            amountPLPToken = _amount * (10**12); //10**18 / 10**6 decimals PLP / decimals USDC\n        } else {\n            _updateNAV();\n            if (exposition == 0) {\n                amountPLPToken = (((10**24) * _amount * this.totalSupply()) /\n                    netAssetValue);\n            } else {\n                amountPLPToken = (((10**24) *\n                    amountToken *\n                    this.totalSupply()) / netAssetValue); //10**30 decimals net asset value / 10**6 USDC\n            }\n        }\n        _mint(msg.sender, amountPLPToken);\n        IERC20(tokenAddress).transferFrom(msg.sender, address(this), _amount);\n        IERC20(tokenAddress).approve(GMX_controller, _amount);\n        if (exposition == 1) {\n            IGMXController(GMX_controller).increasePosition{value: msg.value}(\n                _amount,\n                true\n            );\n        } else if (exposition == 2) {\n            IGMXController(GMX_controller).increasePosition{value: msg.value}(\n                _amount,\n                false\n            );\n        }\n        emit depositEvent(\n            msg.sender,\n            block.timestamp,\n            tokenAddress,\n            _amount,\n            amountPLPToken\n        );\n    }\n\n    /// @notice Function to withdraw funds from the vault\n    /// @notice Function that handles the withdraw of fund\n    /// @dev take PLP and send back USDC according to current price per share;\n    /// @param _amount amount of PLP decimals 10**18\n    function withdraw(uint256 _amount) external payable nonReentrant {\n        require(_amount > 0);\n        require(\n            this.balanceOf(msg.sender) >= _amount,\n            \"Surprisingly you cannot withdraw token you have not bought\"\n        );\n        bool isLong = (exposition == 1 ? true : false);\n        _updateNAV();\n        uint256 preop_supply = this.totalSupply();\n        _burn(msg.sender, _amount);\n        \n        if (exposition == 0) {\n            IERC20(USDC).transfer(msg.sender,(10**6*_amount *netAssetValue)/(preop_supply*10**30));\n        } else {\n            IGMXController(GMX_controller).decreasePosition{value: msg.value}(\n                msg.sender,\n                (99*10**4*_amount *netAssetValue)/(preop_supply*10**30), // [decimals USDC] * (#PLP / [decimals PLP]) * (NAV / [decimals NAV]) * ([decimals TS] / TS)) | 99% pour prendre en compte l'effet dillutif des frais GMX à la sortie\n                isLong\n            );\n        } \n        emit withdrawEvent(msg.sender, block.timestamp, _amount, netAssetValue, preop_supply);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":100},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[878],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":879,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":878,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,878],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1875:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2141:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[166]},"id":167,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"137:750:1","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":166,"linearizedBaseContracts":[166],"name":"ReentrancyGuard","nameLocation":"906:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":118,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:1","nodeType":"VariableDeclaration","scope":166,"src":"1676:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":121,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:1","nodeType":"VariableDeclaration","scope":166,"src":"1723:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":123,"mutability":"mutable","name":"_status","nameLocation":"1783:7:1","nodeType":"VariableDeclaration","scope":166,"src":"1767:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":130,"nodeType":"Block","src":"1811:39:1","statements":[{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":126,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":127,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1831:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"nodeType":"ExpressionStatement","src":"1821:22:1"}]},"id":131,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"1808:2:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"1811:0:1"},"scope":166,"src":"1797:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":141,"nodeType":"Block","src":"2251:79:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":134,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2261:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"2261:21:1"},{"id":137,"nodeType":"PlaceholderStatement","src":"2292:1:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":138,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2303:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":140,"nodeType":"ExpressionStatement","src":"2303:20:1"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"1856:366:1","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":142,"name":"nonReentrant","nameLocation":"2236:12:1","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"2248:2:1"},"src":"2227:103:1","virtual":false,"visibility":"internal"},{"body":{"id":156,"nodeType":"Block","src":"2375:248:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":147,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2479:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2460:63:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2608:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":155,"nodeType":"ExpressionStatement","src":"2598:18:1"}]},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"2364:2:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"2375:0:1"},"scope":166,"src":"2336:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":164,"nodeType":"Block","src":"2667:171:1","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":160,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":161,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2819:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"nodeType":"ExpressionStatement","src":"2809:22:1"}]},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":166,"src":"2629:209:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":167,"src":"888:1952:1","usedErrors":[]}],"src":"112:2729:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[878],"ERC20":[753],"IERC20":[831],"IERC20Metadata":[856]},"id":754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":168,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":754,"sourceUnit":832,"src":"130:22:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":754,"sourceUnit":857,"src":"153:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":754,"sourceUnit":879,"src":"195:33:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":173,"name":"Context","nameLocations":["1419:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":878,"src":"1419:7:2"},"id":174,"nodeType":"InheritanceSpecifier","src":"1419:7:2"},{"baseName":{"id":175,"name":"IERC20","nameLocations":["1428:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"1428:6:2"},"id":176,"nodeType":"InheritanceSpecifier","src":"1428:6:2"},{"baseName":{"id":177,"name":"IERC20Metadata","nameLocations":["1436:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":856,"src":"1436:14:2"},"id":178,"nodeType":"InheritanceSpecifier","src":"1436:14:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"230:1170:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":753,"linearizedBaseContracts":[753,856,831,878],"name":"ERC20","nameLocation":"1410:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":182,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:2","nodeType":"VariableDeclaration","scope":753,"src":"1457:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":181,"keyType":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":188,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:2","nodeType":"VariableDeclaration","scope":753,"src":"1509:67:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":187,"keyType":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":186,"keyType":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":190,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:2","nodeType":"VariableDeclaration","scope":753,"src":"1583:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":192,"mutability":"mutable","name":"_name","nameLocation":"1633:5:2","nodeType":"VariableDeclaration","scope":753,"src":"1618:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":194,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:2","nodeType":"VariableDeclaration","scope":753,"src":"1644:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":193,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":210,"nodeType":"Block","src":"2032:57:2","statements":[{"expression":{"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":202,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2042:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":203,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"2050:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":205,"nodeType":"ExpressionStatement","src":"2042:13:2"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":206,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"2065:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"2075:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":209,"nodeType":"ExpressionStatement","src":"2065:17:2"}]},"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1673:298:2","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":211,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"name_","nameLocation":"2002:5:2","nodeType":"VariableDeclaration","scope":211,"src":"1988:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":196,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:2","nodeType":"VariableDeclaration","scope":211,"src":"2009:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":198,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:2"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"2032:0:2"},"scope":753,"src":"1976:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[843],"body":{"id":220,"nodeType":"Block","src":"2223:29:2","statements":[{"expression":{"id":218,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2240:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":217,"id":219,"nodeType":"Return","src":"2233:12:2"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"2095:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":221,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:2","nodeType":"FunctionDefinition","overrides":{"id":214,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:2"},"parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"2167:2:2"},"returnParameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":221,"src":"2208:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":215,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:2"},"scope":753,"src":"2154:98:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[849],"body":{"id":230,"nodeType":"Block","src":"2436:31:2","statements":[{"expression":{"id":228,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"2453:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":227,"id":229,"nodeType":"Return","src":"2446:14:2"}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"2258:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":231,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:2","nodeType":"FunctionDefinition","overrides":{"id":224,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:2"},"parameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"2380:2:2"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":231,"src":"2421:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":225,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:2"},"scope":753,"src":"2365:102:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[855],"body":{"id":240,"nodeType":"Block","src":"3156:26:2","statements":[{"expression":{"hexValue":"3138","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":237,"id":239,"nodeType":"Return","src":"3166:9:2"}]},"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"2473:613:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":241,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:2","nodeType":"FunctionDefinition","overrides":{"id":234,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:2"},"parameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"3108:2:2"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":241,"src":"3149:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":235,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:2"},"scope":753,"src":"3091:91:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[780],"body":{"id":250,"nodeType":"Block","src":"3312:36:2","statements":[{"expression":{"id":248,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"3329:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":247,"id":249,"nodeType":"Return","src":"3322:19:2"}]},"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"3188:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":251,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:2","nodeType":"FunctionDefinition","overrides":{"id":244,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:2"},"parameters":{"id":243,"nodeType":"ParameterList","parameters":[],"src":"3262:2:2"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":251,"src":"3303:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:2"},"scope":753,"src":"3242:106:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[788],"body":{"id":264,"nodeType":"Block","src":"3489:42:2","statements":[{"expression":{"baseExpression":{"id":260,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"3506:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":262,"indexExpression":{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"3516:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":259,"id":263,"nodeType":"Return","src":"3499:25:2"}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3354:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":265,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:2","nodeType":"FunctionDefinition","overrides":{"id":256,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:2"},"parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"account","nameLocation":"3433:7:2","nodeType":"VariableDeclaration","scope":265,"src":"3425:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:2"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":265,"src":"3480:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:2"},"scope":753,"src":"3406:125:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[798],"body":{"id":289,"nodeType":"Block","src":"3812:104:2","statements":[{"assignments":[277],"declarations":[{"constant":false,"id":277,"mutability":"mutable","name":"owner","nameLocation":"3830:5:2","nodeType":"VariableDeclaration","scope":289,"src":"3822:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":280,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":278,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"3838:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3838:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:2"},{"expression":{"arguments":[{"id":282,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3870:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":283,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"3877:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":284,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"3881:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":281,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3860:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"ExpressionStatement","src":"3860:28:2"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":275,"id":288,"nodeType":"Return","src":"3898:11:2"}]},"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"3537:185:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":290,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:2","nodeType":"FunctionDefinition","overrides":{"id":272,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:2"},"parameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"to","nameLocation":"3753:2:2","nodeType":"VariableDeclaration","scope":290,"src":"3745:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"amount","nameLocation":"3765:6:2","nodeType":"VariableDeclaration","scope":290,"src":"3757:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:2"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":290,"src":"3806:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":273,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:2"},"scope":753,"src":"3727:189:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[808],"body":{"id":307,"nodeType":"Block","src":"4072:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":301,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"4089:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":303,"indexExpression":{"id":302,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"4101:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":305,"indexExpression":{"id":304,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4108:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":300,"id":306,"nodeType":"Return","src":"4082:34:2"}]},"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"3922:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":308,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:2","nodeType":"FunctionDefinition","overrides":{"id":297,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:2"},"parameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"owner","nameLocation":"4001:5:2","nodeType":"VariableDeclaration","scope":308,"src":"3993:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"spender","nameLocation":"4016:7:2","nodeType":"VariableDeclaration","scope":308,"src":"4008:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:2"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":308,"src":"4063:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:2"},"scope":753,"src":"3974:149:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[818],"body":{"id":332,"nodeType":"Block","src":"4520:108:2","statements":[{"assignments":[320],"declarations":[{"constant":false,"id":320,"mutability":"mutable","name":"owner","nameLocation":"4538:5:2","nodeType":"VariableDeclaration","scope":332,"src":"4530:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":323,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":321,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"4546:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:2"},{"expression":{"arguments":[{"id":325,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"4577:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":326,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"4584:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"4593:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":324,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"4568:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4568:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"4568:32:2"},{"expression":{"hexValue":"74727565","id":330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":318,"id":331,"nodeType":"Return","src":"4610:11:2"}]},"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"4129:297:2","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":333,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:2","nodeType":"FunctionDefinition","overrides":{"id":315,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:2"},"parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"spender","nameLocation":"4456:7:2","nodeType":"VariableDeclaration","scope":333,"src":"4448:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"amount","nameLocation":"4473:6:2","nodeType":"VariableDeclaration","scope":333,"src":"4465:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:2"},"returnParameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":333,"src":"4514:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":316,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:2"},"scope":753,"src":"4431:197:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[830],"body":{"id":365,"nodeType":"Block","src":"5323:153:2","statements":[{"assignments":[347],"declarations":[{"constant":false,"id":347,"mutability":"mutable","name":"spender","nameLocation":"5341:7:2","nodeType":"VariableDeclaration","scope":365,"src":"5333:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":350,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":348,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5351:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5351:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:2"},{"expression":{"arguments":[{"id":352,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5389:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":353,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"5395:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":354,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"5404:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":351,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"5373:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"5373:38:2"},{"expression":{"arguments":[{"id":358,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"5431:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"5437:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":360,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"5441:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":357,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5421:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"5421:27:2"},{"expression":{"hexValue":"74727565","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":345,"id":364,"nodeType":"Return","src":"5458:11:2"}]},"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"4634:551:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":366,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:2","nodeType":"FunctionDefinition","overrides":{"id":342,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:2"},"parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"from","nameLocation":"5229:4:2","nodeType":"VariableDeclaration","scope":366,"src":"5221:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"to","nameLocation":"5251:2:2","nodeType":"VariableDeclaration","scope":366,"src":"5243:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"amount","nameLocation":"5271:6:2","nodeType":"VariableDeclaration","scope":366,"src":"5263:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:2"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":366,"src":"5317:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:2"},"scope":753,"src":"5190:286:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":394,"nodeType":"Block","src":"5965:140:2","statements":[{"assignments":[377],"declarations":[{"constant":false,"id":377,"mutability":"mutable","name":"owner","nameLocation":"5983:5:2","nodeType":"VariableDeclaration","scope":394,"src":"5975:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":380,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":378,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5991:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5991:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:2"},{"expression":{"arguments":[{"id":382,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"6022:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":383,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"6029:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":385,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"6048:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":386,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"6055:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":384,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"6038:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":388,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"6066:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":381,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"6013:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"6013:64:2"},{"expression":{"hexValue":"74727565","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":375,"id":393,"nodeType":"Return","src":"6087:11:2"}]},"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"5482:384:2","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":395,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:2","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"spender","nameLocation":"5906:7:2","nodeType":"VariableDeclaration","scope":395,"src":"5898:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:2","nodeType":"VariableDeclaration","scope":395,"src":"5915:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:2"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"5959:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":373,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:2"},"scope":753,"src":"5871:234:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":435,"nodeType":"Block","src":"6691:328:2","statements":[{"assignments":[406],"declarations":[{"constant":false,"id":406,"mutability":"mutable","name":"owner","nameLocation":"6709:5:2","nodeType":"VariableDeclaration","scope":435,"src":"6701:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":409,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":407,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6717:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:2"},{"assignments":[411],"declarations":[{"constant":false,"id":411,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:2","nodeType":"VariableDeclaration","scope":435,"src":"6739:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":416,"initialValue":{"arguments":[{"id":413,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6776:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6783:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":412,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"6766:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":418,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"6809:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":419,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"6829:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":423,"nodeType":"ExpressionStatement","src":"6801:85:2"},{"id":432,"nodeType":"UncheckedBlock","src":"6896:95:2","statements":[{"expression":{"arguments":[{"id":425,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6929:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":426,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6936:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":427,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"6945:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":428,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"6964:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":424,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"6920:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6920:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"6920:60:2"}]},{"expression":{"hexValue":"74727565","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":404,"id":434,"nodeType":"Return","src":"7001:11:2"}]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"6111:476:2","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":436,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:2","nodeType":"FunctionDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"spender","nameLocation":"6627:7:2","nodeType":"VariableDeclaration","scope":436,"src":"6619:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:2","nodeType":"VariableDeclaration","scope":436,"src":"6636:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:2"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":436,"src":"6685:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":402,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:2"},"scope":753,"src":"6592:427:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":512,"nodeType":"Block","src":"7581:710:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"7599:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:2","typeDescriptions":{}}},"id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":446,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7591:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"7591:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":457,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"7677:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:2","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7669:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"7669:64:2"},{"expression":{"arguments":[{"id":467,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"7765:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"7771:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"7775:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":466,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"7744:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7744:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"7744:38:2"},{"assignments":[473],"declarations":[{"constant":false,"id":473,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:2","nodeType":"VariableDeclaration","scope":512,"src":"7793:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":477,"initialValue":{"baseExpression":{"id":474,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"7815:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":476,"indexExpression":{"id":475,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"7825:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"7848:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":480,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"7863:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7840:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":484,"nodeType":"ExpressionStatement","src":"7840:72:2"},{"id":499,"nodeType":"UncheckedBlock","src":"7922:273:2","statements":[{"expression":{"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":485,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"7946:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":487,"indexExpression":{"id":486,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"7956:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":488,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"7964:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":489,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"7978:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":492,"nodeType":"ExpressionStatement","src":"7946:38:2"},{"expression":{"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":493,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"8161:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":495,"indexExpression":{"id":494,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"8171:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":496,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"8178:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":498,"nodeType":"ExpressionStatement","src":"8161:23:2"}]},{"eventCall":{"arguments":[{"id":501,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"8219:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"8225:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"8229:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":500,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8210:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8210:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"EmitStatement","src":"8205:31:2"},{"expression":{"arguments":[{"id":507,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"8267:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":508,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"8273:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":509,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"8277:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8247:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8247:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"8247:37:2"}]},"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"7025:443:2","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":513,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:2","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"from","nameLocation":"7509:4:2","nodeType":"VariableDeclaration","scope":513,"src":"7501:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":441,"mutability":"mutable","name":"to","nameLocation":"7531:2:2","nodeType":"VariableDeclaration","scope":513,"src":"7523:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"amount","nameLocation":"7551:6:2","nodeType":"VariableDeclaration","scope":513,"src":"7543:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:2"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"7581:0:2"},"scope":753,"src":"7473:818:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":569,"nodeType":"Block","src":"8632:470:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":522,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"8650:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":523,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:2","typeDescriptions":{}}},"id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8642:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":530,"nodeType":"ExpressionStatement","src":"8642:65:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:2","typeDescriptions":{}}},"id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"8751:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"8760:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":531,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8718:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"ExpressionStatement","src":"8718:49:2"},{"expression":{"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":540,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"8778:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":541,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"8794:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":543,"nodeType":"ExpressionStatement","src":"8778:22:2"},{"id":550,"nodeType":"UncheckedBlock","src":"8810:175:2","statements":[{"expression":{"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":544,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"8946:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":546,"indexExpression":{"id":545,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"8956:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":547,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"8968:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":549,"nodeType":"ExpressionStatement","src":"8946:28:2"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:2","typeDescriptions":{}}},"id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":556,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"9020:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":557,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"9029:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":551,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8999:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"EmitStatement","src":"8994:42:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:2","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"9079:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"9088:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":560,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9047:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9047:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"ExpressionStatement","src":"9047:48:2"}]},"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"8297:265:2","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":570,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:2","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"account","nameLocation":"8590:7:2","nodeType":"VariableDeclaration","scope":570,"src":"8582:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"amount","nameLocation":"8607:6:2","nodeType":"VariableDeclaration","scope":570,"src":"8599:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"8632:0:2"},"scope":753,"src":"8567:535:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":641,"nodeType":"Block","src":"9487:594:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9505:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:2","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9516:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9497:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"9497:67:2"},{"expression":{"arguments":[{"id":589,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9596:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:2","typeDescriptions":{}}},"id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9605:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"9617:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":588,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"9575:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9575:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":596,"nodeType":"ExpressionStatement","src":"9575:49:2"},{"assignments":[598],"declarations":[{"constant":false,"id":598,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:2","nodeType":"VariableDeclaration","scope":641,"src":"9635:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":602,"initialValue":{"baseExpression":{"id":599,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"9660:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":601,"indexExpression":{"id":600,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9670:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":604,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9696:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":605,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"9714:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9688:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":609,"nodeType":"ExpressionStatement","src":"9688:71:2"},{"id":622,"nodeType":"UncheckedBlock","src":"9769:194:2","statements":[{"expression":{"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":610,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"9793:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":612,"indexExpression":{"id":611,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9803:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":613,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"9814:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":614,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"9831:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":617,"nodeType":"ExpressionStatement","src":"9793:44:2"},{"expression":{"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":618,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"9930:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":619,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"9946:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":621,"nodeType":"ExpressionStatement","src":"9930:22:2"}]},{"eventCall":{"arguments":[{"id":624,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"9987:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:2","typeDescriptions":{}}},"id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9996:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"10008:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":623,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"9978:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9978:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"EmitStatement","src":"9973:42:2"},{"expression":{"arguments":[{"id":633,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"10046:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:2","typeDescriptions":{}}},"id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10055:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"10067:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":632,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"10026:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10026:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":640,"nodeType":"ExpressionStatement","src":"10026:48:2"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"9108:309:2","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":642,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:2","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"account","nameLocation":"9445:7:2","nodeType":"VariableDeclaration","scope":642,"src":"9437:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"amount","nameLocation":"9462:6:2","nodeType":"VariableDeclaration","scope":642,"src":"9454:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:2"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"9487:0:2"},"scope":753,"src":"9422:659:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":686,"nodeType":"Block","src":"10617:257:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":653,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"10635:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":652,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10627:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"10627:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":663,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"10713:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10724:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":662,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10705:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"10705:68:2"},{"expression":{"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":672,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10784:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":675,"indexExpression":{"id":673,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"10796:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":676,"indexExpression":{"id":674,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"10803:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":677,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"10814:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":679,"nodeType":"ExpressionStatement","src":"10784:36:2"},{"eventCall":{"arguments":[{"id":681,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"10844:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":682,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"10851:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":683,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"10860:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":680,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"10835:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10835:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":685,"nodeType":"EmitStatement","src":"10830:37:2"}]},"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"10087:412:2","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":687,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:2","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"owner","nameLocation":"10539:5:2","nodeType":"VariableDeclaration","scope":687,"src":"10531:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"spender","nameLocation":"10562:7:2","nodeType":"VariableDeclaration","scope":687,"src":"10554:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"amount","nameLocation":"10587:6:2","nodeType":"VariableDeclaration","scope":687,"src":"10579:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:2"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[],"src":"10617:0:2"},"scope":753,"src":"10504:370:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":729,"nodeType":"Block","src":"11275:321:2","statements":[{"assignments":[698],"declarations":[{"constant":false,"id":698,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:2","nodeType":"VariableDeclaration","scope":729,"src":"11285:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":703,"initialValue":{"arguments":[{"id":700,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"11322:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"11329:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":699,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"11312:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11312:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"11351:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":705,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11371:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11385:3:2","memberName":"max","nodeType":"MemberAccess","src":"11371:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":728,"nodeType":"IfStatement","src":"11347:243:2","trueBody":{"id":727,"nodeType":"Block","src":"11390:200:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":712,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"11412:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"11432:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":711,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11404:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"11404:68:2"},{"id":726,"nodeType":"UncheckedBlock","src":"11486:94:2","statements":[{"expression":{"arguments":[{"id":719,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"11523:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"11530:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":721,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"11539:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":722,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"11558:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":718,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"11514:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11514:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"11514:51:2"}]}]}}]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"10880:270:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":730,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:2","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"owner","nameLocation":"11197:5:2","nodeType":"VariableDeclaration","scope":730,"src":"11189:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"spender","nameLocation":"11220:7:2","nodeType":"VariableDeclaration","scope":730,"src":"11212:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"amount","nameLocation":"11245:6:2","nodeType":"VariableDeclaration","scope":730,"src":"11237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:2"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"11275:0:2"},"scope":753,"src":"11155:441:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"12299:2:2","statements":[]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"11602:573:2","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":741,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:2","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"from","nameLocation":"12227:4:2","nodeType":"VariableDeclaration","scope":741,"src":"12219:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":735,"mutability":"mutable","name":"to","nameLocation":"12249:2:2","nodeType":"VariableDeclaration","scope":741,"src":"12241:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"amount","nameLocation":"12269:6:2","nodeType":"VariableDeclaration","scope":741,"src":"12261:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:2"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[],"src":"12299:0:2"},"scope":753,"src":"12180:121:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":751,"nodeType":"Block","src":"13007:2:2","statements":[]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"12307:577:2","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":752,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:2","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"from","nameLocation":"12935:4:2","nodeType":"VariableDeclaration","scope":752,"src":"12927:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"to","nameLocation":"12957:2:2","nodeType":"VariableDeclaration","scope":752,"src":"12949:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"amount","nameLocation":"12977:6:2","nodeType":"VariableDeclaration","scope":752,"src":"12969:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:2"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"13007:0:2"},"scope":753,"src":"12889:120:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":754,"src":"1401:11610:2","usedErrors":[]}],"src":"105:12907:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[831]},"id":832,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":755,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":756,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":831,"linearizedBaseContracts":[831],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":765,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":765,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":761,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":765,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":765,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":774,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":774,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":770,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":774,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":774,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":780,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":780,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":831,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":788,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":788,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":831,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":798,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":798,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":798,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":798,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":795,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":831,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":808,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":808,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":808,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":831,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":818,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":818,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":818,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":815,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":831,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":830,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":830,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"to","nameLocation":"2707:2:3","nodeType":"VariableDeclaration","scope":830,"src":"2699:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":830,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:3"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"2758:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":827,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:3"},"scope":831,"src":"2646:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":832,"src":"202:2564:3","usedErrors":[]}],"src":"106:2661:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[831],"IERC20Metadata":[856]},"id":857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":833,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":857,"sourceUnit":832,"src":"135:23:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":836,"name":"IERC20","nameLocations":["305:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"305:6:4"},"id":837,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"160:116:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":856,"linearizedBaseContracts":[856,831],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":843,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":843,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":840,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":856,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":849,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":846,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":856,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":855,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":855,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":852,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":856,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":857,"src":"277:405:4","usedErrors":[]}],"src":"110:573:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[878]},"id":879,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":858,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"111:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":878,"linearizedBaseContracts":[878],"name":"Context","nameLocation":"626:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":867,"nodeType":"Block","src":"702:34:5","statements":[{"expression":{"expression":{"id":864,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:5","memberName":"sender","nodeType":"MemberAccess","src":"719:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":863,"id":866,"nodeType":"Return","src":"712:17:5"}]},"id":868,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:5","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[],"src":"659:2:5"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"693:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:5"},"scope":878,"src":"640:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":876,"nodeType":"Block","src":"809:32:5","statements":[{"expression":{"expression":{"id":873,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:5","memberName":"data","nodeType":"MemberAccess","src":"826:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":872,"id":875,"nodeType":"Return","src":"819:15:5"}]},"id":877,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:5","nodeType":"FunctionDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"759:2:5"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":877,"src":"793:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":870,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:5"},"scope":878,"src":"742:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":879,"src":"608:235:5","usedErrors":[]}],"src":"86:758:5"},"id":5},"contracts/GMX_controller.sol":{"ast":{"absolutePath":"contracts/GMX_controller.sol","exportedSymbols":{"Context":[3293],"GMX_controller":[1602],"IERC20":[2630],"IGMXPositionRouter":[1031],"IGMXReader":[899],"IGMXRouter":[975],"IGMXVault":[956],"Ownable":[2552]},"id":1603,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":880,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:6"},{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1603,"sourceUnit":2631,"src":"56:74:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts/access/Ownable.sol","file":"./../node_modules/@openzeppelin/contracts/access/Ownable.sol","id":882,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1603,"sourceUnit":2553,"src":"131:70:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IGMXReader","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":899,"linearizedBaseContracts":[899],"name":"IGMXReader","nameLocation":"213:10:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dc383cab","id":898,"implemented":false,"kind":"function","modifiers":[],"name":"getPositions","nameLocation":"239:12:6","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"_vault","nameLocation":"260:6:6","nodeType":"VariableDeclaration","scope":898,"src":"252:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"252:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"_account","nameLocation":"276:8:6","nodeType":"VariableDeclaration","scope":898,"src":"268:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"_collateralTokens","nameLocation":"303:17:6","nodeType":"VariableDeclaration","scope":898,"src":"286:34:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"286:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":888,"nodeType":"ArrayTypeName","src":"286:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"_indexTokens","nameLocation":"339:12:6","nodeType":"VariableDeclaration","scope":898,"src":"322:29:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"322:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":891,"nodeType":"ArrayTypeName","src":"322:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"_isLong","nameLocation":"367:7:6","nodeType":"VariableDeclaration","scope":898,"src":"353:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":893,"name":"bool","nodeType":"ElementaryTypeName","src":"353:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":894,"nodeType":"ArrayTypeName","src":"353:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"251:124:6"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[],"src":"385:0:6"},"scope":899,"src":"230:156:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1603,"src":"203:185:6","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IGMXVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":956,"linearizedBaseContracts":[956],"name":"IGMXVault","nameLocation":"399:9:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"4a3f088d","id":926,"implemented":false,"kind":"function","modifiers":[],"name":"getPosition","nameLocation":"424:11:6","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"_account","nameLocation":"444:8:6","nodeType":"VariableDeclaration","scope":926,"src":"436:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"_collateralToken","nameLocation":"462:16:6","nodeType":"VariableDeclaration","scope":926,"src":"454:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"454:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"_indexToken","nameLocation":"488:11:6","nodeType":"VariableDeclaration","scope":926,"src":"480:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"480:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"_isLong","nameLocation":"506:7:6","nodeType":"VariableDeclaration","scope":926,"src":"501:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":906,"name":"bool","nodeType":"ElementaryTypeName","src":"501:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"435:79:6"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"size","nameLocation":"541:4:6","nodeType":"VariableDeclaration","scope":926,"src":"533:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"collateral","nameLocation":"555:10:6","nodeType":"VariableDeclaration","scope":926,"src":"547:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"averagePrice","nameLocation":"575:12:6","nodeType":"VariableDeclaration","scope":926,"src":"567:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"567:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"entryFundingRate","nameLocation":"597:16:6","nodeType":"VariableDeclaration","scope":926,"src":"589:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"589:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"reserveAmount","nameLocation":"623:13:6","nodeType":"VariableDeclaration","scope":926,"src":"615:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"615:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"realisedPnl","nameLocation":"646:11:6","nodeType":"VariableDeclaration","scope":926,"src":"638:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"realisedPnLPositive","nameLocation":"664:19:6","nodeType":"VariableDeclaration","scope":926,"src":"659:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":921,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"lastIncreasedTime","nameLocation":"693:17:6","nodeType":"VariableDeclaration","scope":926,"src":"685:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"532:179:6"},"scope":956,"src":"415:297:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e124e6d2","id":933,"implemented":false,"kind":"function","modifiers":[],"name":"getMaxPrice","nameLocation":"726:11:6","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"_token","nameLocation":"746:6:6","nodeType":"VariableDeclaration","scope":933,"src":"738:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:16:6"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":933,"src":"777:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":930,"name":"uint256","nodeType":"ElementaryTypeName","src":"777:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"776:9:6"},"scope":956,"src":"717:69:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"81a612d6","id":940,"implemented":false,"kind":"function","modifiers":[],"name":"getMinPrice","nameLocation":"800:11:6","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"_token","nameLocation":"820:6:6","nodeType":"VariableDeclaration","scope":940,"src":"812:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"811:16:6"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"851:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"850:9:6"},"scope":956,"src":"791:69:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"45a6f370","id":955,"implemented":false,"kind":"function","modifiers":[],"name":"getPositionDelta","nameLocation":"874:16:6","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"_account","nameLocation":"899:8:6","nodeType":"VariableDeclaration","scope":955,"src":"891:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"_collateralToken","nameLocation":"917:16:6","nodeType":"VariableDeclaration","scope":955,"src":"909:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"_indexToken","nameLocation":"943:11:6","nodeType":"VariableDeclaration","scope":955,"src":"935:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"_isLong","nameLocation":"961:7:6","nodeType":"VariableDeclaration","scope":955,"src":"956:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":947,"name":"bool","nodeType":"ElementaryTypeName","src":"956:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"890:79:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"hasprofit","nameLocation":"993:9:6","nodeType":"VariableDeclaration","scope":955,"src":"988:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":950,"name":"bool","nodeType":"ElementaryTypeName","src":"988:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"lastIncreasedTime","nameLocation":"1012:17:6","nodeType":"VariableDeclaration","scope":955,"src":"1004:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1004:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"987:43:6"},"scope":956,"src":"865:166:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1603,"src":"389:644:6","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IGMXRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":975,"linearizedBaseContracts":[975],"name":"IGMXRouter","nameLocation":"1044:10:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"38c74dd9","id":961,"implemented":false,"kind":"function","modifiers":[],"name":"approvePlugin","nameLocation":"1070:13:6","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"_plugin","nameLocation":"1092:7:6","nodeType":"VariableDeclaration","scope":961,"src":"1084:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"1084:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1083:17:6"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"1109:0:6"},"scope":975,"src":"1061:49:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"48d91abf","id":974,"implemented":false,"kind":"function","modifiers":[],"name":"increasePosition","nameLocation":"1124:16:6","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"_account","nameLocation":"1149:8:6","nodeType":"VariableDeclaration","scope":974,"src":"1141:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"1141:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"_collateralToken","nameLocation":"1167:16:6","nodeType":"VariableDeclaration","scope":974,"src":"1159:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"_indexToken","nameLocation":"1193:11:6","nodeType":"VariableDeclaration","scope":974,"src":"1185:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"1185:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"_sizeDelta","nameLocation":"1214:10:6","nodeType":"VariableDeclaration","scope":974,"src":"1206:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"1206:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"_isLong","nameLocation":"1231:7:6","nodeType":"VariableDeclaration","scope":974,"src":"1226:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":970,"name":"bool","nodeType":"ElementaryTypeName","src":"1226:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1140:99:6"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"1257:0:6"},"scope":975,"src":"1115:143:6","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1603,"src":"1034:226:6","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IGMXPositionRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1031,"linearizedBaseContracts":[1031],"name":"IGMXPositionRouter","nameLocation":"1271:18:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f2ae372f","id":999,"implemented":false,"kind":"function","modifiers":[],"name":"createIncreasePosition","nameLocation":"1305:22:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"_path","nameLocation":"1345:5:6","nodeType":"VariableDeclaration","scope":999,"src":"1328:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":977,"nodeType":"ArrayTypeName","src":"1328:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"_indexToken","nameLocation":"1360:11:6","nodeType":"VariableDeclaration","scope":999,"src":"1352:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"1352:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"_amountIn","nameLocation":"1381:9:6","nodeType":"VariableDeclaration","scope":999,"src":"1373:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"_minOut","nameLocation":"1400:7:6","nodeType":"VariableDeclaration","scope":999,"src":"1392:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"_sizeDelta","nameLocation":"1417:10:6","nodeType":"VariableDeclaration","scope":999,"src":"1409:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"1409:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"_isLong","nameLocation":"1434:7:6","nodeType":"VariableDeclaration","scope":999,"src":"1429:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":987,"name":"bool","nodeType":"ElementaryTypeName","src":"1429:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"_acceptablePrice","nameLocation":"1451:16:6","nodeType":"VariableDeclaration","scope":999,"src":"1443:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1443:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"_executionFee","nameLocation":"1477:13:6","nodeType":"VariableDeclaration","scope":999,"src":"1469:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1469:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"_referralCode","nameLocation":"1500:13:6","nodeType":"VariableDeclaration","scope":999,"src":"1492:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1492:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"_callbackTarget","nameLocation":"1523:15:6","nodeType":"VariableDeclaration","scope":999,"src":"1515:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"1515:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1327:212:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"1556:0:6"},"scope":1031,"src":"1296:261:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"7be7d141","id":1025,"implemented":false,"kind":"function","modifiers":[],"name":"createDecreasePosition","nameLocation":"1571:22:6","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"_path","nameLocation":"1611:5:6","nodeType":"VariableDeclaration","scope":1025,"src":"1594:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"1594:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1001,"nodeType":"ArrayTypeName","src":"1594:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"_indexToken","nameLocation":"1626:11:6","nodeType":"VariableDeclaration","scope":1025,"src":"1618:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"1618:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"_collateralDelta","nameLocation":"1647:16:6","nodeType":"VariableDeclaration","scope":1025,"src":"1639:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"1639:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"_sizeDelta","nameLocation":"1673:10:6","nodeType":"VariableDeclaration","scope":1025,"src":"1665:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1665:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"_isLong","nameLocation":"1690:7:6","nodeType":"VariableDeclaration","scope":1025,"src":"1685:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1009,"name":"bool","nodeType":"ElementaryTypeName","src":"1685:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"_receiver","nameLocation":"1707:9:6","nodeType":"VariableDeclaration","scope":1025,"src":"1699:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"_acceptablePrice","nameLocation":"1726:16:6","nodeType":"VariableDeclaration","scope":1025,"src":"1718:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1718:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"_minOut","nameLocation":"1752:7:6","nodeType":"VariableDeclaration","scope":1025,"src":"1744:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1744:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"_executionFee","nameLocation":"1769:13:6","nodeType":"VariableDeclaration","scope":1025,"src":"1761:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"1761:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"_withdrawETH","nameLocation":"1789:12:6","nodeType":"VariableDeclaration","scope":1025,"src":"1784:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1019,"name":"bool","nodeType":"ElementaryTypeName","src":"1784:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"_callbackTarget","nameLocation":"1811:15:6","nodeType":"VariableDeclaration","scope":1025,"src":"1803:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"1803:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1593:234:6"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"1844:0:6"},"scope":1031,"src":"1562:283:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"63ae2103","id":1030,"implemented":false,"kind":"function","modifiers":[],"name":"minExecutionFee","nameLocation":"1859:15:6","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[],"src":"1874:2:6"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1030,"src":"1900:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1899:9:6"},"scope":1031,"src":"1850:59:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1603,"src":"1261:650:6","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":1033,"name":"Ownable","nameLocations":["2406:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2552,"src":"2406:7:6"},"id":1034,"nodeType":"InheritanceSpecifier","src":"2406:7:6"}],"canonicalName":"GMX_controller","contractDependencies":[],"contractKind":"contract","documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"1914:465:6","text":"@title Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network \n @author Victor Gillibert\n @notice This contract should work with any vault on Arbitrum network\n @dev Improvement to do :\n @dev Allow not only USDC and create functions to handle tokens authorized \n @dev Allow to modify leverage \n @dev See if oracle price works better on mainnet\n @custom:experimental This is an experimental contract."},"fullyImplemented":true,"id":1602,"linearizedBaseContracts":[1602,2552,3293],"name":"GMX_controller","nameLocation":"2388:14:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b3b3453e","id":1037,"mutability":"mutable","name":"gmxVault","nameLocation":"2435:8:6","nodeType":"VariableDeclaration","scope":1602,"src":"2420:67:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"2420:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834383965653037373939344236363538654166413835354333303832373545416438303937433441","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2445:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x489ee077994B6658eAfA855C308275EAd8097C4A"},"visibility":"public"},{"constant":false,"functionSelector":"634e3180","id":1040,"mutability":"mutable","name":"gmxRouter","nameLocation":"2508:9:6","nodeType":"VariableDeclaration","scope":1602,"src":"2493:68:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"2493:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307861424263354639393633396339423662436235383534346464663034454641363830324634303634","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2519:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064"},"visibility":"public"},{"constant":false,"functionSelector":"c657e7c2","id":1043,"mutability":"mutable","name":"gmxPositionRouter","nameLocation":"2582:17:6","nodeType":"VariableDeclaration","scope":1602,"src":"2567:76:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307862383761343336423933664645394437356335634641376241634666663936343330623039383638","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2601:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868"},"visibility":"public"},{"constant":false,"functionSelector":"ad5c4648","id":1046,"mutability":"mutable","name":"WETH","nameLocation":"2664:4:6","nodeType":"VariableDeclaration","scope":1602,"src":"2649:64:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"2649:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307838326146343934343744386130376533626439354244306435366633353234313532336642616231","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2671:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"},"visibility":"public"},{"constant":false,"functionSelector":"89a30271","id":1049,"mutability":"mutable","name":"USDC","nameLocation":"2734:4:6","nodeType":"VariableDeclaration","scope":1602,"src":"2719:64:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"2719:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307846463937304136314130346231634131343833344134336635644534353333654244444235434338","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2741:42:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8"},"visibility":"public"},{"constant":false,"functionSelector":"434c0c75","id":1051,"mutability":"mutable","name":"GMXexecutionFee","nameLocation":"2804:15:6","nodeType":"VariableDeclaration","scope":1602,"src":"2789:30:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"2789:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"fbfa77cf","id":1053,"mutability":"mutable","name":"vault","nameLocation":"2841:5:6","nodeType":"VariableDeclaration","scope":1602,"src":"2826:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"2826:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":1077,"nodeType":"Block","src":"2881:178:6","statements":[{"expression":{"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1058,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"2891:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1059,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2899:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2891:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1061,"nodeType":"ExpressionStatement","src":"2891:14:6"},{"expression":{"arguments":[{"id":1066,"name":"gmxPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"2951:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1063,"name":"gmxRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"2926:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1062,"name":"IGMXRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"2915:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXRouter_$975_$","typeString":"type(contract IGMXRouter)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2915:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXRouter_$975","typeString":"contract IGMXRouter"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2937:13:6","memberName":"approvePlugin","nodeType":"MemberAccess","referencedDeclaration":961,"src":"2915:35:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2915:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1068,"nodeType":"ExpressionStatement","src":"2915:54:6"},{"expression":{"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1069,"name":"GMXexecutionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2979:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1071,"name":"gmxPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"3016:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1070,"name":"IGMXPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"2997:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXPositionRouter_$1031_$","typeString":"type(contract IGMXPositionRouter)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2997:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXPositionRouter_$1031","typeString":"contract IGMXPositionRouter"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3035:15:6","memberName":"minExecutionFee","nodeType":"MemberAccess","referencedDeclaration":1030,"src":"2997:53:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2997:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2979:73:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1076,"nodeType":"ExpressionStatement","src":"2979:73:6"}]},"id":1078,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"_vault","nameLocation":"2873:6:6","nodeType":"VariableDeclaration","scope":1078,"src":"2865:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"2865:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2864:16:6"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[],"src":"2881:0:6"},"scope":1602,"src":"2853:206:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1089,"nodeType":"Block","src":"3086:69:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1081,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3104:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3108:6:6","memberName":"sender","nodeType":"MemberAccess","src":"3104:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1083,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3118:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3104:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74207661756c74","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3125:11:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_421de824a9b16214caf7b7abaa5248fe905c9492a06bf5cfa92abc61291d0c70","typeString":"literal_string \"Not vault\""},"value":"Not vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_421de824a9b16214caf7b7abaa5248fe905c9492a06bf5cfa92abc61291d0c70","typeString":"literal_string \"Not vault\""}],"id":1080,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3096:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3096:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"ExpressionStatement","src":"3096:41:6"},{"id":1088,"nodeType":"PlaceholderStatement","src":"3147:1:6"}]},"id":1090,"name":"onlyMyVault","nameLocation":"3074:11:6","nodeType":"ModifierDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"3086:0:6"},"src":"3065:90:6","virtual":false,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"3217:28:6","statements":[{"expression":{"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1097,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3227:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1098,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"3233:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3227:11:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1100,"nodeType":"ExpressionStatement","src":"3227:11:6"}]},"functionSelector":"80b3631c","id":1102,"implemented":true,"kind":"function","modifiers":[{"id":1095,"kind":"modifierInvocation","modifierName":{"id":1094,"name":"onlyOwner","nameLocations":["3207:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"3207:9:6"},"nodeType":"ModifierInvocation","src":"3207:9:6"}],"name":"setVaultOwner","nameLocation":"3169:13:6","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"_addr","nameLocation":"3191:5:6","nodeType":"VariableDeclaration","scope":1102,"src":"3183:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"3183:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3182:15:6"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[],"src":"3217:0:6"},"scope":1602,"src":"3160:85:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1109,"nodeType":"Block","src":"3304:29:6","statements":[{"expression":{"id":1107,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3321:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1106,"id":1108,"nodeType":"Return","src":"3314:12:6"}]},"functionSelector":"a44ca346","id":1110,"implemented":true,"kind":"function","modifiers":[],"name":"getVaultOwner","nameLocation":"3259:13:6","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[],"src":"3272:2:6"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"3295:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"3295:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3294:9:6"},"scope":1602,"src":"3250:83:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1121,"nodeType":"Block","src":"3403:43:6","statements":[{"expression":{"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1117,"name":"GMXexecutionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"3413:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1118,"name":"_newFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"3431:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3413:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1120,"nodeType":"ExpressionStatement","src":"3413:26:6"}]},"functionSelector":"79db7ef1","id":1122,"implemented":true,"kind":"function","modifiers":[{"id":1115,"kind":"modifierInvocation","modifierName":{"id":1114,"name":"onlyOwner","nameLocations":["3394:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"3394:9:6"},"nodeType":"ModifierInvocation","src":"3394:9:6"}],"name":"setGMXexecutionFees","nameLocation":"3347:19:6","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"_newFees","nameLocation":"3375:8:6","nodeType":"VariableDeclaration","scope":1122,"src":"3367:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"3367:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3366:18:6"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"3403:0:6"},"scope":1602,"src":"3338:108:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1129,"nodeType":"Block","src":"3511:39:6","statements":[{"expression":{"id":1127,"name":"GMXexecutionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"3528:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1126,"id":1128,"nodeType":"Return","src":"3521:22:6"}]},"functionSelector":"2c908916","id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"getGMXexecutionFees","nameLocation":"3460:19:6","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[],"src":"3479:2:6"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1130,"src":"3502:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"3502:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3501:9:6"},"scope":1602,"src":"3451:99:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1290,"nodeType":"Block","src":"4018:1391:6","statements":[{"expression":{"arguments":[{"id":1144,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"4054:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1147,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4069:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_GMX_controller_$1602","typeString":"contract GMX_controller"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GMX_controller_$1602","typeString":"contract GMX_controller"}],"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4061:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"4061:7:6","typeDescriptions":{}}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1149,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"4076:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1141,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"4035:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1140,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"4028:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2630_$","typeString":"type(contract IERC20)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4028:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2630","typeString":"contract IERC20"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4041:12:6","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2629,"src":"4028:25:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4028:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1151,"nodeType":"ExpressionStatement","src":"4028:60:6"},{"expression":{"arguments":[{"id":1156,"name":"gmxRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"4119:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1157,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"4130:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1153,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"4105:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1152,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"4098:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2630_$","typeString":"type(contract IERC20)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2630","typeString":"contract IERC20"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4111:7:6","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"4098:20:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1159,"nodeType":"ExpressionStatement","src":"4098:44:6"},{"assignments":[1161],"declarations":[{"constant":false,"id":1161,"mutability":"mutable","name":"positionSize","nameLocation":"4160:12:6","nodeType":"VariableDeclaration","scope":1290,"src":"4152:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"4152:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1171,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1162,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"4177:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653234","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4191:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"value":"1e24"},"src":"4177:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313130","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4198:3:6","typeDescriptions":{"typeIdentifier":"t_rational_110_by_1","typeString":"int_const 110"},"value":"110"},"src":"4177:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4176:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4203:3:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4176:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4175:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4152:55:6"},{"assignments":[1173],"declarations":[{"constant":false,"id":1173,"mutability":"mutable","name":"acceptablePrice","nameLocation":"4243:15:6","nodeType":"VariableDeclaration","scope":1290,"src":"4235:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"4235:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1175,"initialValue":{"hexValue":"30","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4261:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4235:27:6"},{"condition":{"id":1176,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"4276:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1288,"nodeType":"Block","src":"5009:394:6","statements":[{"assignments":[1240],"declarations":[{"constant":false,"id":1240,"mutability":"mutable","name":"path","nameLocation":"5040:4:6","nodeType":"VariableDeclaration","scope":1288,"src":"5023:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"5023:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1239,"nodeType":"ArrayTypeName","src":"5023:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1246,"initialValue":{"arguments":[{"hexValue":"31","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5061:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5047:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"5051:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1242,"nodeType":"ArrayTypeName","src":"5051:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5047:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5023:40:6"},{"expression":{"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1247,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5077:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1249,"indexExpression":{"hexValue":"30","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5082:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5077:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1250,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"5087:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5077:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1252,"nodeType":"ExpressionStatement","src":"5077:14:6"},{"expression":{"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1253,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"5105:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1258,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5155:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1255,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"5133:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1254,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"5123:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$956_$","typeString":"type(contract IGMXVault)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5123:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$956","typeString":"contract IGMXVault"}},"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5143:11:6","memberName":"getMinPrice","nodeType":"MemberAccess","referencedDeclaration":940,"src":"5123:31:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5123:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"39393730","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5161:4:6","typeDescriptions":{"typeIdentifier":"t_rational_9970_by_1","typeString":"int_const 9970"},"value":"9970"},"src":"5123:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5166:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5123:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5105:66:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1265,"nodeType":"ExpressionStatement","src":"5105:66:6"},{"expression":{"arguments":[{"id":1273,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5292:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1274,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5298:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1275,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"5304:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5317:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1277,"name":"positionSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"5320:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1278,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"5334:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1279,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"5342:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1280,"name":"GMXexecutionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"5359:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"307830","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5376:3:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},{"arguments":[{"hexValue":"30","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5381:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1282,"name":"address","nodeType":"ElementaryTypeName","src":"5381:7:6","typeDescriptions":{}}},"id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5381:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1267,"name":"gmxPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"5232:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1266,"name":"IGMXPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"5213:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXPositionRouter_$1031_$","typeString":"type(contract IGMXPositionRouter)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXPositionRouter_$1031","typeString":"contract IGMXPositionRouter"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5251:22:6","memberName":"createIncreasePosition","nodeType":"MemberAccess","referencedDeclaration":999,"src":"5213:60:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address[] memory,address,uint256,uint256,uint256,bool,uint256,uint256,bytes32,address) payable external"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1270,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5281:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5285:5:6","memberName":"value","nodeType":"MemberAccess","src":"5281:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5213:78:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$__$value","typeString":"function (address[] memory,address,uint256,uint256,uint256,bool,uint256,uint256,bytes32,address) payable external"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:179:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"5213:179:6"}]},"id":1289,"nodeType":"IfStatement","src":"4272:1131:6","trueBody":{"id":1235,"nodeType":"Block","src":"4284:719:6","statements":[{"assignments":[1181],"declarations":[{"constant":false,"id":1181,"mutability":"mutable","name":"path","nameLocation":"4315:4:6","nodeType":"VariableDeclaration","scope":1235,"src":"4298:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"4298:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1180,"nodeType":"ArrayTypeName","src":"4298:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1187,"initialValue":{"arguments":[{"hexValue":"32","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4336:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4322:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"4326:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1183,"nodeType":"ArrayTypeName","src":"4326:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4298:40:6"},{"expression":{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1188,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"4397:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1190,"indexExpression":{"hexValue":"30","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4402:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4397:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1191,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"4407:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4397:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1193,"nodeType":"ExpressionStatement","src":"4397:14:6"},{"expression":{"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1194,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"4425:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1196,"indexExpression":{"hexValue":"31","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4425:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1197,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"4435:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4425:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1199,"nodeType":"ExpressionStatement","src":"4425:14:6"},{"expression":{"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1200,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"4453:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1205,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"4503:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1202,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"4481:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1201,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"4471:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$956_$","typeString":"type(contract IGMXVault)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4471:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$956","typeString":"contract IGMXVault"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4491:11:6","memberName":"getMaxPrice","nodeType":"MemberAccess","referencedDeclaration":933,"src":"4471:31:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4471:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303330","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4509:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10030_by_1","typeString":"int_const 10030"},"value":"10030"},"src":"4471:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4517:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4471:51:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:69:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1212,"nodeType":"ExpressionStatement","src":"4453:69:6"},{"expression":{"arguments":[{"id":1220,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"4660:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1221,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"4682:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1222,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"4704:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4733:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1224,"name":"positionSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"4752:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1225,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"4782:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1226,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"4806:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1227,"name":"GMXexecutionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"4839:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"307836643739373236353636363537323732363136633464363137363639366536393637363930303030303030303030303030303030303030303030303030303030","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4872:66:6","typeDescriptions":{"typeIdentifier":"t_rational_49516678523235954992238942512468835685745587608416838409204394698878406885376_by_1","typeString":"int_const 4951...(69 digits omitted)...5376"},"value":"0x6d79726566657272616c4d6176696e6967690000000000000000000000000000"},{"arguments":[{"hexValue":"30","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4964:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4956:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"4956:7:6","typeDescriptions":{}}},"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4956:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_49516678523235954992238942512468835685745587608416838409204394698878406885376_by_1","typeString":"int_const 4951...(69 digits omitted)...5376"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_49516678523235954992238942512468835685745587608416838409204394698878406885376_by_1","typeString":"int_const 4951...(69 digits omitted)...5376"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1214,"name":"gmxPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"4583:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1213,"name":"IGMXPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"4564:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXPositionRouter_$1031_$","typeString":"type(contract IGMXPositionRouter)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4564:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXPositionRouter_$1031","typeString":"contract IGMXPositionRouter"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4602:22:6","memberName":"createIncreasePosition","nodeType":"MemberAccess","referencedDeclaration":999,"src":"4564:60:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address[] memory,address,uint256,uint256,uint256,bool,uint256,uint256,bytes32,address) payable external"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1217,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4632:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4636:5:6","memberName":"value","nodeType":"MemberAccess","src":"4632:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4564:78:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_address_$returns$__$value","typeString":"function (address[] memory,address,uint256,uint256,uint256,bool,uint256,uint256,bytes32,address) payable external"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4564:416:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"ExpressionStatement","src":"4564:416:6"}]}}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"3556:369:6","text":"@notice Increase positions on GMX - only the vault can call this function\n @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\n @param tokenAmount amount to withdraw in USDC [10**6]\n @param isLong true for Long, False for Short"},"functionSelector":"1c5ecc06","id":1291,"implemented":true,"kind":"function","modifiers":[{"id":1138,"kind":"modifierInvocation","modifierName":{"id":1137,"name":"onlyMyVault","nameLocations":["4007:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1090,"src":"4007:11:6"},"nodeType":"ModifierInvocation","src":"4007:11:6"}],"name":"increasePosition","nameLocation":"3939:16:6","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"tokenAmount","nameLocation":"3964:11:6","nodeType":"VariableDeclaration","scope":1291,"src":"3956:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"isLong","nameLocation":"3982:6:6","nodeType":"VariableDeclaration","scope":1291,"src":"3977:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1134,"name":"bool","nodeType":"ElementaryTypeName","src":"3977:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3955:34:6"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[],"src":"4018:0:6"},"scope":1602,"src":"3930:1479:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1439,"nodeType":"Block","src":"5933:1155:6","statements":[{"assignments":[1304],"declarations":[{"constant":false,"id":1304,"mutability":"mutable","name":"acceptablePrice","nameLocation":"5951:15:6","nodeType":"VariableDeclaration","scope":1439,"src":"5943:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"5943:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1306,"initialValue":{"hexValue":"30","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5943:27:6"},{"assignments":[1308],"declarations":[{"constant":false,"id":1308,"mutability":"mutable","name":"collateralDelta","nameLocation":"5988:15:6","nodeType":"VariableDeclaration","scope":1439,"src":"5980:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"5980:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1318,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1309,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"6008:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653234","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6022:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"value":"1e24"},"src":"6008:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313130","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6029:3:6","typeDescriptions":{"typeIdentifier":"t_rational_110_by_1","typeString":"int_const 110"},"value":"110"},"src":"6008:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6007:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6036:3:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6007:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6006:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5980:60:6"},{"condition":{"id":1319,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6192:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1437,"nodeType":"Block","src":"6682:400:6","statements":[{"assignments":[1386],"declarations":[{"constant":false,"id":1386,"mutability":"mutable","name":"path","nameLocation":"6713:4:6","nodeType":"VariableDeclaration","scope":1437,"src":"6696:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"6696:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1385,"nodeType":"ArrayTypeName","src":"6696:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1392,"initialValue":{"arguments":[{"hexValue":"31","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6734:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6720:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"6724:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1388,"nodeType":"ArrayTypeName","src":"6724:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6720:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6696:40:6"},{"expression":{"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1393,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"6750:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1395,"indexExpression":{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6755:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6750:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1396,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"6760:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6750:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1398,"nodeType":"ExpressionStatement","src":"6750:14:6"},{"expression":{"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1399,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"6778:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1404,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"6828:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1401,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"6806:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1400,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6796:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$956_$","typeString":"type(contract IGMXVault)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6796:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$956","typeString":"contract IGMXVault"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6816:11:6","memberName":"getMaxPrice","nodeType":"MemberAccess","referencedDeclaration":933,"src":"6796:31:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6796:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303330","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6834:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10030_by_1","typeString":"int_const 10030"},"value":"10030"},"src":"6796:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6840:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"6796:49:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6778:67:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1411,"nodeType":"ExpressionStatement","src":"6778:67:6"},{"expression":{"arguments":[{"id":1419,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"6954:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1420,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"6960:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1421,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"6966:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653234","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6979:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"value":"1e24"},"src":"6966:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1424,"name":"collateralDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"6985:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1425,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"7002:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1426,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"7011:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1427,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"7016:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7033:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1429,"name":"GMXexecutionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"7036:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7053:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7068:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7060:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"7060:7:6","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1413,"name":"gmxPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"6894:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1412,"name":"IGMXPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"6875:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXPositionRouter_$1031_$","typeString":"type(contract IGMXPositionRouter)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6875:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXPositionRouter_$1031","typeString":"contract IGMXPositionRouter"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6913:22:6","memberName":"createDecreasePosition","nodeType":"MemberAccess","referencedDeclaration":1025,"src":"6875:60:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$","typeString":"function (address[] memory,address,uint256,uint256,bool,address,uint256,uint256,uint256,bool,address) payable external"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1416,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6943:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6947:5:6","memberName":"value","nodeType":"MemberAccess","src":"6943:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6875:78:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$value","typeString":"function (address[] memory,address,uint256,uint256,bool,address,uint256,uint256,uint256,bool,address) payable external"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6875:196:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1436,"nodeType":"ExpressionStatement","src":"6875:196:6"}]},"id":1438,"nodeType":"IfStatement","src":"6188:894:6","trueBody":{"id":1381,"nodeType":"Block","src":"6200:476:6","statements":[{"assignments":[1324],"declarations":[{"constant":false,"id":1324,"mutability":"mutable","name":"path","nameLocation":"6231:4:6","nodeType":"VariableDeclaration","scope":1381,"src":"6214:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"6214:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1323,"nodeType":"ArrayTypeName","src":"6214:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1330,"initialValue":{"arguments":[{"hexValue":"32","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6252:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6238:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"6242:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1326,"nodeType":"ArrayTypeName","src":"6242:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6238:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6214:40:6"},{"expression":{"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1331,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"6318:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1333,"indexExpression":{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6323:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6318:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1334,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"6328:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6318:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1336,"nodeType":"ExpressionStatement","src":"6318:14:6"},{"expression":{"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1337,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"6346:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1339,"indexExpression":{"hexValue":"31","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6351:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6346:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1340,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"6356:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6346:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1342,"nodeType":"ExpressionStatement","src":"6346:14:6"},{"expression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1343,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"6374:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1348,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"6424:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1345,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"6402:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1344,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6392:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$956_$","typeString":"type(contract IGMXVault)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6392:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$956","typeString":"contract IGMXVault"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6412:11:6","memberName":"getMinPrice","nodeType":"MemberAccess","referencedDeclaration":940,"src":"6392:31:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6392:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"39393730","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:4:6","typeDescriptions":{"typeIdentifier":"t_rational_9970_by_1","typeString":"int_const 9970"},"value":"9970"},"src":"6392:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6435:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"6392:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6374:66:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1355,"nodeType":"ExpressionStatement","src":"6374:66:6"},{"expression":{"arguments":[{"id":1363,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"6549:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1364,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"6555:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1365,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"6561:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653234","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6574:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"value":"1e24"},"src":"6561:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1368,"name":"collateralDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"6580:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1369,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6597:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1370,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6605:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1371,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"6610:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6627:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1373,"name":"GMXexecutionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"6630:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6647:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6662:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"6654:7:6","typeDescriptions":{}}},"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1357,"name":"gmxPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"6489:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1356,"name":"IGMXPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"6470:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXPositionRouter_$1031_$","typeString":"type(contract IGMXPositionRouter)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6470:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXPositionRouter_$1031","typeString":"contract IGMXPositionRouter"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6508:22:6","memberName":"createDecreasePosition","nodeType":"MemberAccess","referencedDeclaration":1025,"src":"6470:60:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$","typeString":"function (address[] memory,address,uint256,uint256,bool,address,uint256,uint256,uint256,bool,address) payable external"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6538:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6542:5:6","memberName":"value","nodeType":"MemberAccess","src":"6538:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6470:78:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$value","typeString":"function (address[] memory,address,uint256,uint256,bool,address,uint256,uint256,uint256,bool,address) payable external"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6470:195:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"ExpressionStatement","src":"6470:195:6"}]}}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"5415:411:6","text":"@notice Decrease positions on GMX - only the vault can call this function\n @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\n @param _to receiver of the funds \n @param tokenAmount amount to withdraw in USDC [10**6]\n @param isLong true for Long, False for Short"},"functionSelector":"c5dac33b","id":1440,"implemented":true,"kind":"function","modifiers":[{"id":1301,"kind":"modifierInvocation","modifierName":{"id":1300,"name":"onlyMyVault","nameLocations":["5921:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1090,"src":"5921:11:6"},"nodeType":"ModifierInvocation","src":"5921:11:6"}],"name":"decreasePosition","nameLocation":"5840:16:6","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"_to","nameLocation":"5865:3:6","nodeType":"VariableDeclaration","scope":1440,"src":"5857:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"5857:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"tokenAmount","nameLocation":"5878:11:6","nodeType":"VariableDeclaration","scope":1440,"src":"5870:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"5870:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"isLong","nameLocation":"5896:6:6","nodeType":"VariableDeclaration","scope":1440,"src":"5891:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1297,"name":"bool","nodeType":"ElementaryTypeName","src":"5891:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5856:47:6"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"5933:0:6"},"scope":1602,"src":"5831:1257:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1600,"nodeType":"Block","src":"7477:1135:6","statements":[{"assignments":[1449],"declarations":[{"constant":false,"id":1449,"mutability":"mutable","name":"acceptablePrice","nameLocation":"7495:15:6","nodeType":"VariableDeclaration","scope":1600,"src":"7487:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"7487:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1451,"initialValue":{"hexValue":"30","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7513:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7487:27:6"},{"condition":{"id":1452,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"7528:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1598,"nodeType":"Block","src":"8113:493:6","statements":[{"assignments":[1533],"declarations":[{"constant":false,"id":1533,"mutability":"mutable","name":"path","nameLocation":"8144:4:6","nodeType":"VariableDeclaration","scope":1598,"src":"8127:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1531,"name":"address","nodeType":"ElementaryTypeName","src":"8127:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1532,"nodeType":"ArrayTypeName","src":"8127:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1539,"initialValue":{"arguments":[{"hexValue":"31","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8165:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8151:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"8155:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1535,"nodeType":"ArrayTypeName","src":"8155:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8151:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8127:40:6"},{"expression":{"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1540,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"8181:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1542,"indexExpression":{"hexValue":"30","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8186:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8181:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1543,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"8191:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1545,"nodeType":"ExpressionStatement","src":"8181:14:6"},{"assignments":[1547,null,null,null,null,null,null,null],"declarations":[{"constant":false,"id":1547,"mutability":"mutable","name":"sizeDelta","nameLocation":"8218:9:6","nodeType":"VariableDeclaration","scope":1598,"src":"8210:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"8210:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,null,null,null,null,null],"id":1560,"initialValue":{"arguments":[{"arguments":[{"id":1554,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8278:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_GMX_controller_$1602","typeString":"contract GMX_controller"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GMX_controller_$1602","typeString":"contract GMX_controller"}],"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8270:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"8270:7:6","typeDescriptions":{}}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8270:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1556,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"8285:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1557,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8291:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1558,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"8297:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":1549,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"8248:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1548,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"8238:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$956_$","typeString":"type(contract IGMXVault)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8238:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$956","typeString":"contract IGMXVault"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8258:11:6","memberName":"getPosition","nodeType":"MemberAccess","referencedDeclaration":926,"src":"8238:31:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"function (address,address,address,bool) external returns (uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8238:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8209:95:6"},{"expression":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1561,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"8318:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1566,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8368:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1563,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"8346:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1562,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"8336:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$956_$","typeString":"type(contract IGMXVault)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8336:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$956","typeString":"contract IGMXVault"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8356:11:6","memberName":"getMaxPrice","nodeType":"MemberAccess","referencedDeclaration":933,"src":"8336:31:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8336:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303330","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8374:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10030_by_1","typeString":"int_const 10030"},"value":"10030"},"src":"8336:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8380:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8336:49:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8318:67:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"8318:67:6"},{"expression":{"arguments":[{"id":1581,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"8494:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1582,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8500:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8506:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1584,"name":"sizeDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"8509:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1585,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"8520:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8528:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8532:6:6","memberName":"sender","nodeType":"MemberAccess","src":"8528:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1588,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"8540:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8557:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1590,"name":"GMXexecutionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"8560:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8577:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8592:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8584:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"8584:7:6","typeDescriptions":{}}},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8584:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1575,"name":"gmxPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"8434:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1574,"name":"IGMXPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"8415:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXPositionRouter_$1031_$","typeString":"type(contract IGMXPositionRouter)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXPositionRouter_$1031","typeString":"contract IGMXPositionRouter"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8453:22:6","memberName":"createDecreasePosition","nodeType":"MemberAccess","referencedDeclaration":1025,"src":"8415:60:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$","typeString":"function (address[] memory,address,uint256,uint256,bool,address,uint256,uint256,uint256,bool,address) payable external"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8483:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8487:5:6","memberName":"value","nodeType":"MemberAccess","src":"8483:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8415:78:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$value","typeString":"function (address[] memory,address,uint256,uint256,bool,address,uint256,uint256,uint256,bool,address) payable external"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:180:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1597,"nodeType":"ExpressionStatement","src":"8415:180:6"}]},"id":1599,"nodeType":"IfStatement","src":"7524:1082:6","trueBody":{"id":1528,"nodeType":"Block","src":"7536:571:6","statements":[{"assignments":[1457],"declarations":[{"constant":false,"id":1457,"mutability":"mutable","name":"path","nameLocation":"7567:4:6","nodeType":"VariableDeclaration","scope":1528,"src":"7550:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"7550:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1456,"nodeType":"ArrayTypeName","src":"7550:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1463,"initialValue":{"arguments":[{"hexValue":"32","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7588:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7574:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"7578:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1459,"nodeType":"ArrayTypeName","src":"7578:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7550:40:6"},{"expression":{"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1464,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"7655:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1466,"indexExpression":{"hexValue":"30","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7660:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7655:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1467,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"7665:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7655:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1469,"nodeType":"ExpressionStatement","src":"7655:14:6"},{"expression":{"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1470,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"7683:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1472,"indexExpression":{"hexValue":"31","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7688:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7683:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1473,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"7693:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7683:14:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1475,"nodeType":"ExpressionStatement","src":"7683:14:6"},{"assignments":[1477,null,null,null,null,null,null,null],"declarations":[{"constant":false,"id":1477,"mutability":"mutable","name":"sizeDelta","nameLocation":"7720:9:6","nodeType":"VariableDeclaration","scope":1528,"src":"7712:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"7712:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,null,null,null,null,null],"id":1490,"initialValue":{"arguments":[{"arguments":[{"id":1484,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7780:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_GMX_controller_$1602","typeString":"contract GMX_controller"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_GMX_controller_$1602","typeString":"contract GMX_controller"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7772:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"7772:7:6","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7772:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"7787:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"7793:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1488,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"7799:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":1479,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"7750:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1478,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"7740:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$956_$","typeString":"type(contract IGMXVault)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7740:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$956","typeString":"contract IGMXVault"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7760:11:6","memberName":"getPosition","nodeType":"MemberAccess","referencedDeclaration":926,"src":"7740:31:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"function (address,address,address,bool) external returns (uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7740:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7711:95:6"},{"expression":{"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1491,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"7820:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1496,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"7870:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1493,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"7848:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1492,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"7838:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$956_$","typeString":"type(contract IGMXVault)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7838:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$956","typeString":"contract IGMXVault"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7858:11:6","memberName":"getMinPrice","nodeType":"MemberAccess","referencedDeclaration":940,"src":"7838:31:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7838:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"39393730","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:4:6","typeDescriptions":{"typeIdentifier":"t_rational_9970_by_1","typeString":"int_const 9970"},"value":"9970"},"src":"7838:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7881:5:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7838:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7820:66:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1503,"nodeType":"ExpressionStatement","src":"7820:66:6"},{"expression":{"arguments":[{"id":1511,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"7995:4:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":1512,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"8001:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8007:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1514,"name":"sizeDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"8010:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1515,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"8021:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1516,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8029:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8033:6:6","memberName":"sender","nodeType":"MemberAccess","src":"8029:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1518,"name":"acceptablePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"8041:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8058:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1520,"name":"GMXexecutionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"8061:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8078:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8093:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8085:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"8085:7:6","typeDescriptions":{}}},"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1505,"name":"gmxPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"7935:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1504,"name":"IGMXPositionRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"7916:18:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXPositionRouter_$1031_$","typeString":"type(contract IGMXPositionRouter)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXPositionRouter_$1031","typeString":"contract IGMXPositionRouter"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7954:22:6","memberName":"createDecreasePosition","nodeType":"MemberAccess","referencedDeclaration":1025,"src":"7916:60:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$","typeString":"function (address[] memory,address,uint256,uint256,bool,address,uint256,uint256,uint256,bool,address) payable external"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1508,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7984:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7988:5:6","memberName":"value","nodeType":"MemberAccess","src":"7984:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7916:78:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$__$value","typeString":"function (address[] memory,address,uint256,uint256,bool,address,uint256,uint256,uint256,bool,address) payable external"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:180:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1527,"nodeType":"ExpressionStatement","src":"7916:180:6"}]}}]},"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"7094:309:6","text":"@notice Liquidates positions on GMX - only the vault can call this function\n @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\n @param isLong true for Long, False for Short"},"functionSelector":"7cb17597","id":1601,"implemented":true,"kind":"function","modifiers":[{"id":1446,"kind":"modifierInvocation","modifierName":{"id":1445,"name":"onlyMyVault","nameLocations":["7465:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1090,"src":"7465:11:6"},"nodeType":"ModifierInvocation","src":"7465:11:6"}],"name":"liquidatePosition","nameLocation":"7417:17:6","nodeType":"FunctionDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"isLong","nameLocation":"7440:6:6","nodeType":"VariableDeclaration","scope":1601,"src":"7435:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1442,"name":"bool","nodeType":"ElementaryTypeName","src":"7435:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7434:13:6"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"7477:0:6"},"scope":1602,"src":"7408:1204:6","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1603,"src":"2379:6236:6","usedErrors":[]}],"src":"32:8584:6"},"id":6},"contracts/MyVault.sol":{"ast":{"absolutePath":"contracts/MyVault.sol","exportedSymbols":{"Context":[3293],"ERC20":[3271],"IERC20":[2630],"IERC20Metadata":[3318],"IGMXController":[1630],"IGMXVault":[1687],"MyVault":[2439],"Ownable":[2552],"ReentrancyGuard":[2684]},"id":2440,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1604,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"31:23:7"},{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1605,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2440,"sourceUnit":2631,"src":"55:74:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts/access/Ownable.sol","file":"./../node_modules/@openzeppelin/contracts/access/Ownable.sol","id":1606,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2440,"sourceUnit":2553,"src":"130:70:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"./../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1607,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2440,"sourceUnit":3272,"src":"201:73:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"./../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol","id":1608,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2440,"sourceUnit":2685,"src":"275:80:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IGMXController","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1630,"linearizedBaseContracts":[1630],"name":"IGMXController","nameLocation":"368:14:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"1c5ecc06","id":1615,"implemented":false,"kind":"function","modifiers":[],"name":"increasePosition","nameLocation":"398:16:7","nodeType":"FunctionDefinition","parameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"tokenAmount","nameLocation":"423:11:7","nodeType":"VariableDeclaration","scope":1615,"src":"415:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"415:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1612,"mutability":"mutable","name":"isLong","nameLocation":"441:6:7","nodeType":"VariableDeclaration","scope":1615,"src":"436:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1611,"name":"bool","nodeType":"ElementaryTypeName","src":"436:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"414:34:7"},"returnParameters":{"id":1614,"nodeType":"ParameterList","parameters":[],"src":"466:0:7"},"scope":1630,"src":"389:78:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"c5dac33b","id":1624,"implemented":false,"kind":"function","modifiers":[],"name":"decreasePosition","nameLocation":"482:16:7","nodeType":"FunctionDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"_to","nameLocation":"507:3:7","nodeType":"VariableDeclaration","scope":1624,"src":"499:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"tokenAmount","nameLocation":"520:11:7","nodeType":"VariableDeclaration","scope":1624,"src":"512:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"512:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"isLong","nameLocation":"538:6:7","nodeType":"VariableDeclaration","scope":1624,"src":"533:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1620,"name":"bool","nodeType":"ElementaryTypeName","src":"533:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:47:7"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[],"src":"563:0:7"},"scope":1630,"src":"473:91:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"7cb17597","id":1629,"implemented":false,"kind":"function","modifiers":[],"name":"liquidatePosition","nameLocation":"579:17:7","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"isLong","nameLocation":"602:6:7","nodeType":"VariableDeclaration","scope":1629,"src":"597:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1625,"name":"bool","nodeType":"ElementaryTypeName","src":"597:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"596:13:7"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"627:0:7"},"scope":1630,"src":"570:58:7","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2440,"src":"358:273:7","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IGMXVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1687,"linearizedBaseContracts":[1687],"name":"IGMXVault","nameLocation":"643:9:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"4a3f088d","id":1657,"implemented":false,"kind":"function","modifiers":[],"name":"getPosition","nameLocation":"668:11:7","nodeType":"FunctionDefinition","parameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"_account","nameLocation":"688:8:7","nodeType":"VariableDeclaration","scope":1657,"src":"680:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"_collateralToken","nameLocation":"706:16:7","nodeType":"VariableDeclaration","scope":1657,"src":"698:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"698:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"_indexToken","nameLocation":"732:11:7","nodeType":"VariableDeclaration","scope":1657,"src":"724:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"_isLong","nameLocation":"750:7:7","nodeType":"VariableDeclaration","scope":1657,"src":"745:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1637,"name":"bool","nodeType":"ElementaryTypeName","src":"745:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"679:79:7"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"size","nameLocation":"785:4:7","nodeType":"VariableDeclaration","scope":1657,"src":"777:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"777:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"collateral","nameLocation":"799:10:7","nodeType":"VariableDeclaration","scope":1657,"src":"791:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"averagePrice","nameLocation":"819:12:7","nodeType":"VariableDeclaration","scope":1657,"src":"811:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"811:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"entryFundingRate","nameLocation":"841:16:7","nodeType":"VariableDeclaration","scope":1657,"src":"833:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1649,"mutability":"mutable","name":"reserveAmount","nameLocation":"867:13:7","nodeType":"VariableDeclaration","scope":1657,"src":"859:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"realisedPnl","nameLocation":"890:11:7","nodeType":"VariableDeclaration","scope":1657,"src":"882:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"882:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"realisedPnLPositive","nameLocation":"908:19:7","nodeType":"VariableDeclaration","scope":1657,"src":"903:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1652,"name":"bool","nodeType":"ElementaryTypeName","src":"903:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"lastIncreasedTime","nameLocation":"937:17:7","nodeType":"VariableDeclaration","scope":1657,"src":"929:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"776:179:7"},"scope":1687,"src":"659:297:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e124e6d2","id":1664,"implemented":false,"kind":"function","modifiers":[],"name":"getMaxPrice","nameLocation":"970:11:7","nodeType":"FunctionDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"_token","nameLocation":"990:6:7","nodeType":"VariableDeclaration","scope":1664,"src":"982:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"981:16:7"},"returnParameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1664,"src":"1021:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1021:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1020:9:7"},"scope":1687,"src":"961:69:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"81a612d6","id":1671,"implemented":false,"kind":"function","modifiers":[],"name":"getMinPrice","nameLocation":"1044:11:7","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"_token","nameLocation":"1064:6:7","nodeType":"VariableDeclaration","scope":1671,"src":"1056:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1055:16:7"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"1095:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1095:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1094:9:7"},"scope":1687,"src":"1035:69:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"45a6f370","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"getPositionDelta","nameLocation":"1118:16:7","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"_account","nameLocation":"1143:8:7","nodeType":"VariableDeclaration","scope":1686,"src":"1135:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"_collateralToken","nameLocation":"1161:16:7","nodeType":"VariableDeclaration","scope":1686,"src":"1153:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"1153:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1677,"mutability":"mutable","name":"_indexToken","nameLocation":"1187:11:7","nodeType":"VariableDeclaration","scope":1686,"src":"1179:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1676,"name":"address","nodeType":"ElementaryTypeName","src":"1179:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"_isLong","nameLocation":"1205:7:7","nodeType":"VariableDeclaration","scope":1686,"src":"1200:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1678,"name":"bool","nodeType":"ElementaryTypeName","src":"1200:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1134:79:7"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"hasprofit","nameLocation":"1237:9:7","nodeType":"VariableDeclaration","scope":1686,"src":"1232:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1681,"name":"bool","nodeType":"ElementaryTypeName","src":"1232:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"lastIncreasedTime","nameLocation":"1256:17:7","nodeType":"VariableDeclaration","scope":1686,"src":"1248:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1248:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1231:43:7"},"scope":1687,"src":"1109:166:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2440,"src":"633:644:7","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":1689,"name":"Ownable","nameLocations":["1810:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2552,"src":"1810:7:7"},"id":1690,"nodeType":"InheritanceSpecifier","src":"1810:7:7"},{"baseName":{"id":1691,"name":"ERC20","nameLocations":["1819:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":3271,"src":"1819:5:7"},"id":1692,"nodeType":"InheritanceSpecifier","src":"1819:5:7"},{"baseName":{"id":1693,"name":"ReentrancyGuard","nameLocations":["1826:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":2684,"src":"1826:15:7"},"id":1694,"nodeType":"InheritanceSpecifier","src":"1826:15:7"}],"canonicalName":"MyVault","contractDependencies":[],"contractKind":"contract","documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"1279:511:7","text":"@title Vault contract to receive funds and rebalance on GMX thanks to controller according to exposition strategy\n @author Victor Gillibert\n @notice It works as a fund manager, send token as shares of the vault according to the value in it, send back USDC when token are given back\n @dev Improvement to do :\n @dev Add fees to compensate for transaction fees paid when position need to be modified\n @dev Allow other token to be added\n @custom:experimental This is an experimental contract."},"fullyImplemented":true,"id":2439,"linearizedBaseContracts":[2439,2684,3271,3318,2630,2552,3293],"name":"MyVault","nameLocation":"1799:7:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"9ecbfa42","id":1696,"mutability":"mutable","name":"GMX_controller","nameLocation":"1920:14:7","nodeType":"VariableDeclaration","scope":2439,"src":"1905:29:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"1905:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ad5c4648","id":1699,"mutability":"mutable","name":"WETH","nameLocation":"1955:4:7","nodeType":"VariableDeclaration","scope":2439,"src":"1940:64:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"1940:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307838326146343934343744386130376533626439354244306435366633353234313532336642616231","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1962:42:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"},"visibility":"public"},{"constant":false,"functionSelector":"89a30271","id":1702,"mutability":"mutable","name":"USDC","nameLocation":"2025:4:7","nodeType":"VariableDeclaration","scope":2439,"src":"2010:64:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"2010:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307846463937304136314130346231634131343833344134336635644534353333654244444235434338","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2032:42:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8"},"visibility":"public"},{"constant":false,"functionSelector":"b3b3453e","id":1705,"mutability":"mutable","name":"gmxVault","nameLocation":"2095:8:7","nodeType":"VariableDeclaration","scope":2439,"src":"2080:68:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"2080:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834383965653037373939344236363538654166413835354333303832373545416438303937433441","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2106:42:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x489ee077994B6658eAfA855C308275EAd8097C4A"},"visibility":"public"},{"constant":false,"functionSelector":"a3673b38","id":1707,"mutability":"mutable","name":"netAssetValue","nameLocation":"2169:13:7","nodeType":"VariableDeclaration","scope":2439,"src":"2154:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2154:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1cd2f7c8","id":1709,"mutability":"mutable","name":"exposition","nameLocation":"2201:10:7","nodeType":"VariableDeclaration","scope":2439,"src":"2188:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1708,"name":"uint8","nodeType":"ElementaryTypeName","src":"2188:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"aedf795e","id":1713,"mutability":"mutable","name":"tokenAccepted","nameLocation":"2289:13:7","nodeType":"VariableDeclaration","scope":2439,"src":"2257:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1712,"keyType":{"id":1710,"name":"address","nodeType":"ElementaryTypeName","src":"2265:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2257:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1711,"name":"bool","nodeType":"ElementaryTypeName","src":"2276:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"ae340411f33c346ae24187433a8df6e508be40cf0deb3949d51cea12df7fa021","id":1717,"name":"NewTokenAdded","nameLocation":"2314:13:7","nodeType":"EventDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"indexed":false,"mutability":"mutable","name":"tokenAddress","nameLocation":"2336:12:7","nodeType":"VariableDeclaration","scope":1717,"src":"2328:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"2328:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2327:22:7"},"src":"2308:42:7"},{"anonymous":false,"eventSelector":"4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3","id":1721,"name":"TokenRemoved","nameLocation":"2361:12:7","nodeType":"EventDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"indexed":false,"mutability":"mutable","name":"tokenAddress","nameLocation":"2382:12:7","nodeType":"VariableDeclaration","scope":1721,"src":"2374:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"2374:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2373:22:7"},"src":"2355:41:7"},{"anonymous":false,"eventSelector":"fa0731d6f72a8f51cd2381cdd6778ccea1323c89d9b49a780eb07d809e4ce169","id":1729,"name":"expoEvent","nameLocation":"2407:9:7","nodeType":"EventDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"indexed":false,"mutability":"mutable","name":"when","nameLocation":"2425:4:7","nodeType":"VariableDeclaration","scope":1729,"src":"2417:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2417:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1725,"indexed":false,"mutability":"mutable","name":"oldexpo","nameLocation":"2437:7:7","nodeType":"VariableDeclaration","scope":1729,"src":"2431:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1724,"name":"uint8","nodeType":"ElementaryTypeName","src":"2431:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1727,"indexed":false,"mutability":"mutable","name":"newexpo","nameLocation":"2452:7:7","nodeType":"VariableDeclaration","scope":1729,"src":"2446:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1726,"name":"uint8","nodeType":"ElementaryTypeName","src":"2446:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2416:44:7"},"src":"2401:60:7"},{"anonymous":false,"eventSelector":"c43285a6e98e6524bf49b1c1bdda72f38b968b31d2861d4422c0716e89b13181","id":1741,"name":"depositEvent","nameLocation":"2472:12:7","nodeType":"EventDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2510:7:7","nodeType":"VariableDeclaration","scope":1741,"src":"2494:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1730,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1733,"indexed":false,"mutability":"mutable","name":"when","nameLocation":"2535:4:7","nodeType":"VariableDeclaration","scope":1741,"src":"2527:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2527:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1735,"indexed":false,"mutability":"mutable","name":"token_deposited","nameLocation":"2557:15:7","nodeType":"VariableDeclaration","scope":1741,"src":"2549:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1734,"name":"address","nodeType":"ElementaryTypeName","src":"2549:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1737,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2590:6:7","nodeType":"VariableDeclaration","scope":1741,"src":"2582:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2582:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1739,"indexed":false,"mutability":"mutable","name":"PLPissued","nameLocation":"2614:9:7","nodeType":"VariableDeclaration","scope":1741,"src":"2606:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"2606:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2484:145:7"},"src":"2466:164:7"},{"anonymous":false,"eventSelector":"7d655f729e74749ef66079e8380b356147309a7161212c83e699b8e7fb78781c","id":1753,"name":"withdrawEvent","nameLocation":"2641:13:7","nodeType":"EventDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"2680:7:7","nodeType":"VariableDeclaration","scope":1753,"src":"2664:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"2664:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1745,"indexed":false,"mutability":"mutable","name":"when","nameLocation":"2705:4:7","nodeType":"VariableDeclaration","scope":1753,"src":"2697:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"2697:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1747,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2727:6:7","nodeType":"VariableDeclaration","scope":1753,"src":"2719:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1749,"indexed":false,"mutability":"mutable","name":"nav","nameLocation":"2751:3:7","nodeType":"VariableDeclaration","scope":1753,"src":"2743:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1751,"indexed":false,"mutability":"mutable","name":"preop_supply","nameLocation":"2772:12:7","nodeType":"VariableDeclaration","scope":1753,"src":"2764:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2764:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2654:136:7"},"src":"2635:156:7"},{"anonymous":false,"eventSelector":"059d0701380a5813cc605b68bc8aae0c943d3aecbfa3d35e11f8396e056eb6cc","id":1771,"name":"navEvent","nameLocation":"2802:8:7","nodeType":"EventDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"indexed":false,"mutability":"mutable","name":"when","nameLocation":"2828:4:7","nodeType":"VariableDeclaration","scope":1771,"src":"2820:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1757,"indexed":false,"mutability":"mutable","name":"exposition","nameLocation":"2848:10:7","nodeType":"VariableDeclaration","scope":1771,"src":"2842:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1756,"name":"uint8","nodeType":"ElementaryTypeName","src":"2842:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1759,"indexed":false,"mutability":"mutable","name":"oldNAV","nameLocation":"2876:6:7","nodeType":"VariableDeclaration","scope":1771,"src":"2868:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1761,"indexed":false,"mutability":"mutable","name":"NAV","nameLocation":"2900:3:7","nodeType":"VariableDeclaration","scope":1771,"src":"2892:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2892:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1763,"indexed":false,"mutability":"mutable","name":"usdcNAV","nameLocation":"2921:7:7","nodeType":"VariableDeclaration","scope":1771,"src":"2913:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2913:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1765,"indexed":false,"mutability":"mutable","name":"longNAV","nameLocation":"2946:7:7","nodeType":"VariableDeclaration","scope":1771,"src":"2938:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"2938:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1767,"indexed":false,"mutability":"mutable","name":"shortNAV","nameLocation":"2971:8:7","nodeType":"VariableDeclaration","scope":1771,"src":"2963:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2963:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1769,"indexed":false,"mutability":"mutable","name":"totalsupply","nameLocation":"2997:11:7","nodeType":"VariableDeclaration","scope":1771,"src":"2989:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2989:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2810:204:7"},"src":"2796:219:7"},{"body":{"id":1786,"nodeType":"Block","src":"3111:58:7","statements":[{"expression":{"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1778,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"3121:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3134:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3121:14:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1781,"nodeType":"ExpressionStatement","src":"3121:14:7"},{"expression":{"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1782,"name":"netAssetValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"3145:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3161:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3145:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1785,"nodeType":"ExpressionStatement","src":"3145:17:7"}]},"id":1787,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"506f6c79706c7573","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3092:10:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7295041879ec99e126bfb7089bac5df3e2290d67c6c68ca877c851607625023f","typeString":"literal_string \"Polyplus\""},"value":"Polyplus"},{"hexValue":"504c50","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3104:5:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f42e68239cc3b88f618b47f3b0ddfb50aa17d6dceb76fe0e397910d3f10a191","typeString":"literal_string \"PLP\""},"value":"PLP"}],"id":1776,"kind":"baseConstructorSpecifier","modifierName":{"id":1773,"name":"ERC20","nameLocations":["3086:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":3271,"src":"3086:5:7"},"nodeType":"ModifierInvocation","src":"3086:24:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[],"src":"3083:2:7"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[],"src":"3111:0:7"},"scope":2439,"src":"3072:97:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1813,"nodeType":"Block","src":"3575:163:7","statements":[{"expression":{"arguments":[{"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3593:28:7","subExpression":{"baseExpression":{"id":1796,"name":"tokenAccepted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"3594:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1798,"indexExpression":{"id":1797,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"3608:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3594:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c7265616479206164646564","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3623:21:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309","typeString":"literal_string \"Token already added\""},"value":"Token already added"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309","typeString":"literal_string \"Token already added\""}],"id":1795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3585:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1802,"nodeType":"ExpressionStatement","src":"3585:60:7"},{"expression":{"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1803,"name":"tokenAccepted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"3655:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1805,"indexExpression":{"id":1804,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"3669:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3655:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3685:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3655:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1808,"nodeType":"ExpressionStatement","src":"3655:34:7"},{"eventCall":{"arguments":[{"id":1810,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"3718:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1809,"name":"NewTokenAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"3704:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3704:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"EmitStatement","src":"3699:32:7"}]},"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"3313:195:7","text":"@notice whitelist the token accepted in the vault, allow a better control\n @dev until now, only USDC deposit are handled\n @param tokenAddress arbitrum address of the ERC20 token"},"functionSelector":"8cd3f064","id":1814,"implemented":true,"kind":"function","modifiers":[{"id":1793,"kind":"modifierInvocation","modifierName":{"id":1792,"name":"onlyOwner","nameLocations":["3565:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"3565:9:7"},"nodeType":"ModifierInvocation","src":"3565:9:7"}],"name":"acceptToken","nameLocation":"3522:11:7","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"tokenAddress","nameLocation":"3542:12:7","nodeType":"VariableDeclaration","scope":1814,"src":"3534:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"3534:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3533:22:7"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[],"src":"3575:0:7"},"scope":2439,"src":"3513:225:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1838,"nodeType":"Block","src":"3805:162:7","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1822,"name":"tokenAccepted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"3823:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1824,"indexExpression":{"id":1823,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"3837:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3823:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420796574206164646564","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3852:21:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_723d2dc24cdf3c05f0d5e97afb39e416e5e033aeca8107200eff0271fb221805","typeString":"literal_string \"Token not yet added\""},"value":"Token not yet added"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_723d2dc24cdf3c05f0d5e97afb39e416e5e033aeca8107200eff0271fb221805","typeString":"literal_string \"Token not yet added\""}],"id":1821,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3815:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3815:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1827,"nodeType":"ExpressionStatement","src":"3815:59:7"},{"expression":{"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1828,"name":"tokenAccepted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"3884:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1830,"indexExpression":{"id":1829,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"3898:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3884:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3914:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3884:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1833,"nodeType":"ExpressionStatement","src":"3884:35:7"},{"eventCall":{"arguments":[{"id":1835,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"3947:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1834,"name":"TokenRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"3934:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3934:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1837,"nodeType":"EmitStatement","src":"3929:31:7"}]},"functionSelector":"5fa7b584","id":1839,"implemented":true,"kind":"function","modifiers":[{"id":1819,"kind":"modifierInvocation","modifierName":{"id":1818,"name":"onlyOwner","nameLocations":["3795:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"3795:9:7"},"nodeType":"ModifierInvocation","src":"3795:9:7"}],"name":"removeToken","nameLocation":"3752:11:7","nodeType":"FunctionDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"tokenAddress","nameLocation":"3772:12:7","nodeType":"VariableDeclaration","scope":1839,"src":"3764:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"3764:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3763:22:7"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[],"src":"3805:0:7"},"scope":2439,"src":"3743:224:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1850,"nodeType":"Block","src":"4043:51:7","statements":[{"expression":{"baseExpression":{"id":1846,"name":"tokenAccepted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"4060:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1848,"indexExpression":{"id":1847,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"4074:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4060:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1845,"id":1849,"nodeType":"Return","src":"4053:34:7"}]},"functionSelector":"e6f091f9","id":1851,"implemented":true,"kind":"function","modifiers":[],"name":"isAccepted","nameLocation":"3981:10:7","nodeType":"FunctionDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"tokenAddress","nameLocation":"4000:12:7","nodeType":"VariableDeclaration","scope":1851,"src":"3992:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"3992:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3991:22:7"},"returnParameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1851,"src":"4037:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1843,"name":"bool","nodeType":"ElementaryTypeName","src":"4037:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4036:6:7"},"scope":2439,"src":"3972:122:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1863,"nodeType":"Block","src":"4451:39:7","statements":[{"expression":{"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1859,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"4461:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1860,"name":"_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"4478:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4461:22:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1862,"nodeType":"ExpressionStatement","src":"4461:22:7"}]},"documentation":{"id":1852,"nodeType":"StructuredDocumentation","src":"4162:223:7","text":"@notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\n @dev only the owner can call this function\n @param _addr address of the controller to add"},"functionSelector":"11af7d95","id":1864,"implemented":true,"kind":"function","modifiers":[{"id":1857,"kind":"modifierInvocation","modifierName":{"id":1856,"name":"onlyOwner","nameLocations":["4441:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"4441:9:7"},"nodeType":"ModifierInvocation","src":"4441:9:7"}],"name":"setGMX_controller","nameLocation":"4399:17:7","nodeType":"FunctionDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"_addr","nameLocation":"4425:5:7","nodeType":"VariableDeclaration","scope":1864,"src":"4417:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"4417:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4416:15:7"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"4451:0:7"},"scope":2439,"src":"4390:100:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1871,"nodeType":"Block","src":"4554:38:7","statements":[{"expression":{"id":1869,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"4571:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1868,"id":1870,"nodeType":"Return","src":"4564:21:7"}]},"functionSelector":"0677a2a5","id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"getGMX_controller","nameLocation":"4504:17:7","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[],"src":"4521:2:7"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"4545:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1866,"name":"address","nodeType":"ElementaryTypeName","src":"4545:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4544:9:7"},"scope":2439,"src":"4495:97:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1917,"nodeType":"Block","src":"4966:443:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"_exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"4997:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5012:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4997:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1884,"name":"_exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5017:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5032:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5017:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4997:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"_exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5037:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5052:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5037:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4997:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c7565206d757374206265203020666f72206e65757472616c2c203120666f72204c6f6e67206f72203220666f722053686f7274","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5067:56:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faa7cc3f5a0b3b09fdfe3c4762b2201fc2409af009c169306b02a5773520d47","typeString":"literal_string \"Value must be 0 for neutral, 1 for Long or 2 for Short\""},"value":"Value must be 0 for neutral, 1 for Long or 2 for Short"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faa7cc3f5a0b3b09fdfe3c4762b2201fc2409af009c169306b02a5773520d47","typeString":"literal_string \"Value must be 0 for neutral, 1 for Long or 2 for Short\""}],"id":1880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4976:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4976:157:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1894,"nodeType":"ExpressionStatement","src":"4976:157:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1896,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5164:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1897,"name":"_exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5178:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5164:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657665727465642062656361757365206578706f736974696f6e20686173206e6f74206368616e676564","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5203:45:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_696c342f151b66dcdb26f32ec1a6f12351d8d6902ae815ec1ce92b973d52a75e","typeString":"literal_string \"Reverted because exposition has not changed\""},"value":"Reverted because exposition has not changed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_696c342f151b66dcdb26f32ec1a6f12351d8d6902ae815ec1ce92b973d52a75e","typeString":"literal_string \"Reverted because exposition has not changed\""}],"id":1895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5143:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5143:115:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1901,"nodeType":"ExpressionStatement","src":"5143:115:7"},{"assignments":[1903],"declarations":[{"constant":false,"id":1903,"mutability":"mutable","name":"oldexposition","nameLocation":"5274:13:7","nodeType":"VariableDeclaration","scope":1917,"src":"5268:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1902,"name":"uint8","nodeType":"ElementaryTypeName","src":"5268:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1905,"initialValue":{"id":1904,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5290:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5268:32:7"},{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1906,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5310:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1907,"name":"_exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5323:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5310:24:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1909,"nodeType":"ExpressionStatement","src":"5310:24:7"},{"eventCall":{"arguments":[{"expression":{"id":1911,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5359:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5365:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"5359:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1913,"name":"oldexposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"5376:13:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1914,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5391:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1910,"name":"expoEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"5349:9:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$","typeString":"function (uint256,uint8,uint8)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1916,"nodeType":"EmitStatement","src":"5344:58:7"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"4671:229:7","text":"@notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\n @dev only the owner can call this function\n @param _exposition 0 for neutral | 1 Long | 2 Short"},"functionSelector":"481d6ee9","id":1918,"implemented":true,"kind":"function","modifiers":[{"id":1878,"kind":"modifierInvocation","modifierName":{"id":1877,"name":"onlyOwner","nameLocations":["4956:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"4956:9:7"},"nodeType":"ModifierInvocation","src":"4956:9:7"}],"name":"setExposition","nameLocation":"4914:13:7","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"_exposition","nameLocation":"4934:11:7","nodeType":"VariableDeclaration","scope":1918,"src":"4928:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1874,"name":"uint8","nodeType":"ElementaryTypeName","src":"4928:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4927:19:7"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[],"src":"4966:0:7"},"scope":2439,"src":"4905:504:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1925,"nodeType":"Block","src":"5469:34:7","statements":[{"expression":{"id":1923,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5486:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1922,"id":1924,"nodeType":"Return","src":"5479:17:7"}]},"functionSelector":"de9257cd","id":1926,"implemented":true,"kind":"function","modifiers":[],"name":"getExposition","nameLocation":"5423:13:7","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[],"src":"5436:2:7"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1926,"src":"5462:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1920,"name":"uint8","nodeType":"ElementaryTypeName","src":"5462:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5461:7:7"},"scope":2439,"src":"5414:89:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1976,"nodeType":"Block","src":"5559:338:7","statements":[{"assignments":[1932],"declarations":[{"constant":false,"id":1932,"mutability":"mutable","name":"isLong","nameLocation":"5574:6:7","nodeType":"VariableDeclaration","scope":1976,"src":"5569:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"5569:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1940,"initialValue":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1933,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5584:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5598:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5584:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"66616c7365","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5609:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5584:30:7","trueExpression":{"hexValue":"74727565","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5602:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5583:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5569:46:7"},{"expression":{"arguments":[{"id":1945,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"5659:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":1952,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5718:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}],"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5710:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"5710:7:7","typeDescriptions":{}}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5710:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1947,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5694:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1946,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"5687:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2630_$","typeString":"type(contract IERC20)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5687:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2630","typeString":"contract IERC20"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5700:9:7","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2587,"src":"5687:22:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5687:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1942,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5632:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1941,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"5625:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2630_$","typeString":"type(contract IERC20)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5625:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2630","typeString":"contract IERC20"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5638:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"5625:20:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5625:109:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1956,"nodeType":"ExpressionStatement","src":"5625:109:7"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1970,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5854:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}],"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5846:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"5846:7:7","typeDescriptions":{}}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":1965,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5830:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1964,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"5823:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2630_$","typeString":"type(contract IERC20)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5823:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2630","typeString":"contract IERC20"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5836:9:7","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2587,"src":"5823:22:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5823:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1973,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"5874:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":1958,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"5759:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1957,"name":"IGMXController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"5744:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXController_$1630_$","typeString":"type(contract IGMXController)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5744:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXController_$1630","typeString":"contract IGMXController"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5775:16:7","memberName":"increasePosition","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"5744:47:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool) payable external"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1961,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5799:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5803:5:7","memberName":"value","nodeType":"MemberAccess","src":"5799:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5744:65:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_bool_$returns$__$value","typeString":"function (uint256,bool) payable external"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5744:146:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1975,"nodeType":"ExpressionStatement","src":"5744:146:7"}]},"functionSelector":"350245c2","id":1977,"implemented":true,"kind":"function","modifiers":[{"id":1929,"kind":"modifierInvocation","modifierName":{"id":1928,"name":"onlyOwner","nameLocations":["5549:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"5549:9:7"},"nodeType":"ModifierInvocation","src":"5549:9:7"}],"name":"openPosition","nameLocation":"5517:12:7","nodeType":"FunctionDefinition","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[],"src":"5529:2:7"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[],"src":"5559:0:7"},"scope":2439,"src":"5508:389:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1992,"nodeType":"Block","src":"5963:111:7","statements":[{"expression":{"arguments":[{"hexValue":"74727565","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6053:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":1983,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"5988:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1982,"name":"IGMXController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"5973:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXController_$1630_$","typeString":"type(contract IGMXController)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5973:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXController_$1630","typeString":"contract IGMXController"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6004:17:7","memberName":"liquidatePosition","nodeType":"MemberAccess","referencedDeclaration":1629,"src":"5973:48:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bool_$returns$__$","typeString":"function (bool) payable external"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1986,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6029:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6033:5:7","memberName":"value","nodeType":"MemberAccess","src":"6029:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5973:66:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bool_$returns$__$value","typeString":"function (bool) payable external"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5973:94:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1991,"nodeType":"ExpressionStatement","src":"5973:94:7"}]},"functionSelector":"28250e0d","id":1993,"implemented":true,"kind":"function","modifiers":[{"id":1980,"kind":"modifierInvocation","modifierName":{"id":1979,"name":"onlyOwner","nameLocations":["5953:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"5953:9:7"},"nodeType":"ModifierInvocation","src":"5953:9:7"}],"name":"liquidateLongPositions","nameLocation":"5911:22:7","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"5933:2:7"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[],"src":"5963:0:7"},"scope":2439,"src":"5902:172:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2008,"nodeType":"Block","src":"6141:112:7","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6231:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":1999,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"6166:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1998,"name":"IGMXController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"6151:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXController_$1630_$","typeString":"type(contract IGMXController)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXController_$1630","typeString":"contract IGMXController"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6182:17:7","memberName":"liquidatePosition","nodeType":"MemberAccess","referencedDeclaration":1629,"src":"6151:48:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bool_$returns$__$","typeString":"function (bool) payable external"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6207:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6211:5:7","memberName":"value","nodeType":"MemberAccess","src":"6207:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6151:66:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bool_$returns$__$value","typeString":"function (bool) payable external"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2007,"nodeType":"ExpressionStatement","src":"6151:95:7"}]},"functionSelector":"3027ac22","id":2009,"implemented":true,"kind":"function","modifiers":[{"id":1996,"kind":"modifierInvocation","modifierName":{"id":1995,"name":"onlyOwner","nameLocations":["6131:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"6131:9:7"},"nodeType":"ModifierInvocation","src":"6131:9:7"}],"name":"liquidateShortPositions","nameLocation":"6088:23:7","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"6111:2:7"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[],"src":"6141:0:7"},"scope":2439,"src":"6079:174:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2017,"nodeType":"Block","src":"6380:29:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2014,"name":"_updateNAV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"6390:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2016,"nodeType":"ExpressionStatement","src":"6390:12:7"}]},"functionSelector":"ed61f4a1","id":2018,"implemented":true,"kind":"function","modifiers":[{"id":2012,"kind":"modifierInvocation","modifierName":{"id":2011,"name":"onlyOwner","nameLocations":["6370:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"6370:9:7"},"nodeType":"ModifierInvocation","src":"6370:9:7"}],"name":"updateNetAssetValue","nameLocation":"6339:19:7","nodeType":"FunctionDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[],"src":"6358:2:7"},"returnParameters":{"id":2013,"nodeType":"ParameterList","parameters":[],"src":"6380:0:7"},"scope":2439,"src":"6330:79:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2145,"nodeType":"Block","src":"6466:1372:7","statements":[{"assignments":[2022],"declarations":[{"constant":false,"id":2022,"mutability":"mutable","name":"oldNAV","nameLocation":"6484:6:7","nodeType":"VariableDeclaration","scope":2145,"src":"6476:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"6476:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2024,"initialValue":{"id":2023,"name":"netAssetValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"6493:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6476:30:7"},{"assignments":[2026],"declarations":[{"constant":false,"id":2026,"mutability":"mutable","name":"_deltavalueLong","nameLocation":"6524:15:7","nodeType":"VariableDeclaration","scope":2145,"src":"6516:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"6516:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2028,"initialValue":{"hexValue":"30","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6542:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6516:27:7"},{"assignments":[2030],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"_deltavalueShort","nameLocation":"6561:16:7","nodeType":"VariableDeclaration","scope":2145,"src":"6553:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"6553:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2032,"initialValue":{"hexValue":"30","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6580:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6553:28:7"},{"assignments":[2034],"declarations":[{"constant":false,"id":2034,"mutability":"mutable","name":"usdcBal","nameLocation":"6599:7:7","nodeType":"VariableDeclaration","scope":2145,"src":"6591:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2048,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2041,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6639:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}],"id":2040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6631:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2039,"name":"address","nodeType":"ElementaryTypeName","src":"6631:7:7","typeDescriptions":{}}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6631:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2036,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"6615:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2035,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"6609:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$3271_$","typeString":"type(contract ERC20)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6609:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$3271","typeString":"contract ERC20"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6621:9:7","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2783,"src":"6609:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6609:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6648:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3234","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6652:2:7","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"6648:6:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}},"src":"6609:45:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6591:63:7"},{"assignments":[null,2050,null,null,null,null,null,null],"declarations":[null,{"constant":false,"id":2050,"mutability":"mutable","name":"_collateralLong","nameLocation":"6717:15:7","nodeType":"VariableDeclaration","scope":2145,"src":"6709:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2049,"name":"uint256","nodeType":"ElementaryTypeName","src":"6709:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,null,null,null,null],"documentation":"10**18 met USDC 6 decimals donc 10**12","id":2060,"initialValue":{"arguments":[{"id":2055,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"6793:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2056,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6809:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2057,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6815:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6821:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":2052,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"6758:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2051,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"6748:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$1687_$","typeString":"type(contract IGMXVault)"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6748:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$1687","typeString":"contract IGMXVault"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6781:11:7","memberName":"getPosition","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"6748:44:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"function (address,address,address,bool) external returns (uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6748:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6706:120:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"_collateralLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"6840:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6858:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6840:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2078,"nodeType":"IfStatement","src":"6836:220:7","trueBody":{"id":2077,"nodeType":"Block","src":"6861:195:7","statements":[{"expression":{"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[null,{"id":2064,"name":"_deltavalueLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"6878:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2065,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"6875:19:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$_t_uint256_$","typeString":"tuple(,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2070,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"6951:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2071,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6983:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2072,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7005:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7027:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":2067,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"6907:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2066,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"6897:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$1687_$","typeString":"type(contract IGMXVault)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6897:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$1687","typeString":"contract IGMXVault"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6917:16:7","memberName":"getPositionDelta","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"6897:36:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_bool_$returns$_t_bool_$_t_uint256_$","typeString":"function (address,address,address,bool) external returns (bool,uint256)"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6897:148:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"6875:170:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2076,"nodeType":"ExpressionStatement","src":"6875:170:7"}]}},{"assignments":[2080],"declarations":[{"constant":false,"id":2080,"mutability":"mutable","name":"posLong","nameLocation":"7073:7:7","nodeType":"VariableDeclaration","scope":2145,"src":"7065:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2079,"name":"uint256","nodeType":"ElementaryTypeName","src":"7065:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2085,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2081,"name":"_collateralLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"7084:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2082,"name":"_deltavalueLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"7102:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7084:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7083:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7065:53:7"},{"assignments":[null,2087,null,null,null,null,null,null],"declarations":[null,{"constant":false,"id":2087,"mutability":"mutable","name":"_collateralShort","nameLocation":"7139:16:7","nodeType":"VariableDeclaration","scope":2145,"src":"7131:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"7131:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,null,null,null,null],"id":2097,"initialValue":{"arguments":[{"id":2092,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"7216:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2093,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"7232:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2094,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7238:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7244:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":2089,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"7181:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2088,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"7171:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$1687_$","typeString":"type(contract IGMXVault)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7171:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$1687","typeString":"contract IGMXVault"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7204:11:7","memberName":"getPosition","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"7171:44:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"function (address,address,address,bool) external returns (uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7171:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,uint256,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7128:122:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2098,"name":"_collateralShort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"7264:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7283:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7264:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2115,"nodeType":"IfStatement","src":"7260:223:7","trueBody":{"id":2114,"nodeType":"Block","src":"7286:197:7","statements":[{"expression":{"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[null,{"id":2101,"name":"_deltavalueShort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7303:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2102,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"7300:20:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$_t_uint256_$","typeString":"tuple(,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2107,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"7377:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2108,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"7409:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2109,"name":"WETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7431:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7453:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":2104,"name":"gmxVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"7333:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2103,"name":"IGMXVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"7323:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXVault_$1687_$","typeString":"type(contract IGMXVault)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7323:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXVault_$1687","typeString":"contract IGMXVault"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7343:16:7","memberName":"getPositionDelta","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"7323:36:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_bool_$returns$_t_bool_$_t_uint256_$","typeString":"function (address,address,address,bool) external returns (bool,uint256)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7323:149:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"src":"7300:172:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2113,"nodeType":"ExpressionStatement","src":"7300:172:7"}]}},{"assignments":[2117],"declarations":[{"constant":false,"id":2117,"mutability":"mutable","name":"posShort","nameLocation":"7500:8:7","nodeType":"VariableDeclaration","scope":2145,"src":"7492:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"7492:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2122,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2118,"name":"_collateralShort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"7512:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2119,"name":"_deltavalueShort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7531:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7512:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7511:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7492:56:7"},{"expression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2123,"name":"netAssetValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"7558:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"usdcBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"7574:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2125,"name":"posLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"7584:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7574:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2127,"name":"posShort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"7594:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7574:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7558:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2130,"nodeType":"ExpressionStatement","src":"7558:44:7"},{"eventCall":{"arguments":[{"expression":{"id":2132,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7639:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7645:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"7639:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2134,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"7668:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2135,"name":"oldNAV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"7692:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2136,"name":"netAssetValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"7712:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2137,"name":"usdcBal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"7739:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2138,"name":"posLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"7760:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2139,"name":"posShort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"7781:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2140,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7803:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7808:11:7","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"7803:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7803:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2131,"name":"navEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"7617:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint8,uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7617:214:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2144,"nodeType":"EmitStatement","src":"7612:219:7"}]},"id":2146,"implemented":true,"kind":"function","modifiers":[],"name":"_updateNAV","nameLocation":"6445:10:7","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[],"src":"6455:2:7"},"returnParameters":{"id":2020,"nodeType":"ParameterList","parameters":[],"src":"6466:0:7"},"scope":2439,"src":"6436:1402:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2153,"nodeType":"Block","src":"7903:37:7","statements":[{"expression":{"id":2151,"name":"netAssetValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"7920:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2150,"id":2152,"nodeType":"Return","src":"7913:20:7"}]},"functionSelector":"6639a81d","id":2154,"implemented":true,"kind":"function","modifiers":[],"name":"getNetAssetValue","nameLocation":"7852:16:7","nodeType":"FunctionDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[],"src":"7868:2:7"},"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2154,"src":"7894:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"7894:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7893:9:7"},"scope":2439,"src":"7843:97:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2318,"nodeType":"Block","src":"8434:1560:7","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2165,"name":"tokenAccepted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"8452:13:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2167,"indexExpression":{"id":2166,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"8466:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8452:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f742079657420737570706f72746564","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8481:25:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5afa3c68da99f9c706d4cfbb3e913b69eb39756da071000ff92271256228d823","typeString":"literal_string \"Token not yet supported\""},"value":"Token not yet supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5afa3c68da99f9c706d4cfbb3e913b69eb39756da071000ff92271256228d823","typeString":"literal_string \"Token not yet supported\""}],"id":2164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8444:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8444:63:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2170,"nodeType":"ExpressionStatement","src":"8444:63:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2172,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8525:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8535:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8525:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e7420746f206465706f736974206973206d616e6461746f7279","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8538:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_52d90a938daabda05345b9aef9e7779cbd5d6bc0180cee74cefd48169a1ef171","typeString":"literal_string \"Amount to deposit is mandatory\""},"value":"Amount to deposit is mandatory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52d90a938daabda05345b9aef9e7779cbd5d6bc0180cee74cefd48169a1ef171","typeString":"literal_string \"Amount to deposit is mandatory\""}],"id":2171,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8517:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8517:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2177,"nodeType":"ExpressionStatement","src":"8517:54:7"},{"assignments":[2179],"declarations":[{"constant":false,"id":2179,"mutability":"mutable","name":"amountToken","nameLocation":"8589:11:7","nodeType":"VariableDeclaration","scope":2318,"src":"8581:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"8581:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2185,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2180,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8603:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8613:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8623:3:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8613:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8603:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8581:45:7"},{"assignments":[2187],"declarations":[{"constant":false,"id":2187,"mutability":"mutable","name":"amountPLPToken","nameLocation":"8707:14:7","nodeType":"VariableDeclaration","scope":2318,"src":"8699:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"8699:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2188,"nodeType":"VariableDeclarationStatement","src":"8699:22:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2189,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8735:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8740:11:7","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"8735:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8735:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8757:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8735:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2247,"nodeType":"Block","src":"8872:406:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2204,"name":"_updateNAV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"8886:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8886:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2206,"nodeType":"ExpressionStatement","src":"8886:12:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2207,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"8916:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8930:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8916:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2245,"nodeType":"Block","src":"9068:200:7","statements":[{"expression":{"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2228,"name":"amountPLPToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"9086:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9106:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3234","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:2:7","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"9106:6:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}}],"id":2232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9105:8:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2233,"name":"amountToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"9136:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9105:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2235,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9170:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9175:11:7","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"9170:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9170:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9105:83:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9104:85:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2240,"name":"netAssetValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"9192:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9104:101:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9103:103:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9086:120:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2244,"nodeType":"ExpressionStatement","src":"9086:120:7"}]},"id":2246,"nodeType":"IfStatement","src":"8912:356:7","trueBody":{"id":2227,"nodeType":"Block","src":"8933:129:7","statements":[{"expression":{"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2210,"name":"amountPLPToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"8951:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":2213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8971:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3234","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8975:2:7","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"8971:6:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}}],"id":2214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8970:8:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2215,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8981:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8970:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2217,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8991:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8996:11:7","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"8991:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8991:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8970:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8969:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2222,"name":"netAssetValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"9033:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8969:77:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8968:79:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8951:96:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2226,"nodeType":"ExpressionStatement","src":"8951:96:7"}]}}]},"id":2248,"nodeType":"IfStatement","src":"8731:547:7","trueBody":{"id":2203,"nodeType":"Block","src":"8760:106:7","statements":[{"expression":{"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2194,"name":"amountPLPToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"8774:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8802:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3132","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:7","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"8802:6:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"}}],"id":2199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8801:8:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"}},"src":"8791:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8774:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2202,"nodeType":"ExpressionStatement","src":"8774:35:7"}]}},{"expression":{"arguments":[{"expression":{"id":2250,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9293:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9297:6:7","memberName":"sender","nodeType":"MemberAccess","src":"9293:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2252,"name":"amountPLPToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"9305:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2249,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"9287:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9287:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2254,"nodeType":"ExpressionStatement","src":"9287:33:7"},{"expression":{"arguments":[{"expression":{"id":2259,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9364:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9368:6:7","memberName":"sender","nodeType":"MemberAccess","src":"9364:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2263,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9384:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}],"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9376:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2261,"name":"address","nodeType":"ElementaryTypeName","src":"9376:7:7","typeDescriptions":{}}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9376:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2265,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"9391:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2256,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"9337:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2255,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"9330:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2630_$","typeString":"type(contract IERC20)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2630","typeString":"contract IERC20"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9351:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2629,"src":"9330:33:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2267,"nodeType":"ExpressionStatement","src":"9330:69:7"},{"expression":{"arguments":[{"id":2272,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9438:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2273,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"9454:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2269,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"9416:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2268,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"9409:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2630_$","typeString":"type(contract IERC20)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9409:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2630","typeString":"contract IERC20"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9430:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"9409:28:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9409:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2275,"nodeType":"ExpressionStatement","src":"9409:53:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2276,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"9476:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9476:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2291,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"9654:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9668:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9654:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2306,"nodeType":"IfStatement","src":"9650:173:7","trueBody":{"id":2305,"nodeType":"Block","src":"9671:152:7","statements":[{"expression":{"arguments":[{"id":2301,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"9768:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9793:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":2295,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9700:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2294,"name":"IGMXController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"9685:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXController_$1630_$","typeString":"type(contract IGMXController)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXController_$1630","typeString":"contract IGMXController"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9716:16:7","memberName":"increasePosition","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"9685:47:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool) payable external"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9740:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9744:5:7","memberName":"value","nodeType":"MemberAccess","src":"9740:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9685:65:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_bool_$returns$__$value","typeString":"function (uint256,bool) payable external"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:127:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2304,"nodeType":"ExpressionStatement","src":"9685:127:7"}]}},"id":2307,"nodeType":"IfStatement","src":"9472:351:7","trueBody":{"id":2290,"nodeType":"Block","src":"9493:151:7","statements":[{"expression":{"arguments":[{"id":2286,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"9590:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9615:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":2280,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9522:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2279,"name":"IGMXController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"9507:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXController_$1630_$","typeString":"type(contract IGMXController)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9507:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXController_$1630","typeString":"contract IGMXController"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9538:16:7","memberName":"increasePosition","nodeType":"MemberAccess","referencedDeclaration":1615,"src":"9507:47:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool) payable external"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2283,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9562:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9566:5:7","memberName":"value","nodeType":"MemberAccess","src":"9562:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9507:65:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_bool_$returns$__$value","typeString":"function (uint256,bool) payable external"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9507:126:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2289,"nodeType":"ExpressionStatement","src":"9507:126:7"}]}},{"eventCall":{"arguments":[{"expression":{"id":2309,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9863:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9867:6:7","memberName":"sender","nodeType":"MemberAccess","src":"9863:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2311,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9887:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9893:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"9887:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2313,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"9916:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2314,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"9942:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2315,"name":"amountPLPToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"9963:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2308,"name":"depositEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"9837:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,address,uint256,uint256)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9837:150:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"EmitStatement","src":"9832:155:7"}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"8000:343:7","text":"@notice Function that handles the deposit of fund in USDC and sent back PLP token \n @dev take USDC and send back PLP according to current vault value and price per share;\n @param tokenAddress USDC address only for the moment, but keeping the possibility to add other token\n @param _amount amount of USDC decimals 10**6"},"functionSelector":"47e7ef24","id":2319,"implemented":true,"kind":"function","modifiers":[{"id":2162,"kind":"modifierInvocation","modifierName":{"id":2161,"name":"nonReentrant","nameLocations":["8421:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":2660,"src":"8421:12:7"},"nodeType":"ModifierInvocation","src":"8421:12:7"}],"name":"deposit","nameLocation":"8357:7:7","nodeType":"FunctionDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"tokenAddress","nameLocation":"8373:12:7","nodeType":"VariableDeclaration","scope":2319,"src":"8365:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2156,"name":"address","nodeType":"ElementaryTypeName","src":"8365:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"_amount","nameLocation":"8395:7:7","nodeType":"VariableDeclaration","scope":2319,"src":"8387:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"8387:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8364:39:7"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[],"src":"8434:0:7"},"scope":2439,"src":"8348:1646:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2437,"nodeType":"Block","src":"10314:1002:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2328,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"10332:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10342:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10332:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2327,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10324:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10324:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2332,"nodeType":"ExpressionStatement","src":"10324:20:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2336,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10390:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10394:6:7","memberName":"sender","nodeType":"MemberAccess","src":"10390:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2334,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10375:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10380:9:7","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2783,"src":"10375:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2339,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"10405:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10375:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53757270726973696e676c7920796f752063616e6e6f7420776974686472617720746f6b656e20796f752068617665206e6f7420626f75676874","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10426:60:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_827abac9121d6a19f7fbad0bf16d0482f475e2c96ee41db78cf0eda460234622","typeString":"literal_string \"Surprisingly you cannot withdraw token you have not bought\""},"value":"Surprisingly you cannot withdraw token you have not bought"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_827abac9121d6a19f7fbad0bf16d0482f475e2c96ee41db78cf0eda460234622","typeString":"literal_string \"Surprisingly you cannot withdraw token you have not bought\""}],"id":2333,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10354:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10354:142:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2343,"nodeType":"ExpressionStatement","src":"10354:142:7"},{"assignments":[2345],"declarations":[{"constant":false,"id":2345,"mutability":"mutable","name":"isLong","nameLocation":"10511:6:7","nodeType":"VariableDeclaration","scope":2437,"src":"10506:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2344,"name":"bool","nodeType":"ElementaryTypeName","src":"10506:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2353,"initialValue":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2346,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"10521:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10535:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10521:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"66616c7365","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10546:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10521:30:7","trueExpression":{"hexValue":"74727565","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10539:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10520:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10506:46:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2354,"name":"_updateNAV","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"10562:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10562:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2356,"nodeType":"ExpressionStatement","src":"10562:12:7"},{"assignments":[2358],"declarations":[{"constant":false,"id":2358,"mutability":"mutable","name":"preop_supply","nameLocation":"10592:12:7","nodeType":"VariableDeclaration","scope":2437,"src":"10584:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"10584:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2362,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2359,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10607:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_MyVault_$2439","typeString":"contract MyVault"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10612:11:7","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"10607:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10607:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10584:41:7"},{"expression":{"arguments":[{"expression":{"id":2364,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10641:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10645:6:7","memberName":"sender","nodeType":"MemberAccess","src":"10641:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2366,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"10653:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2363,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"10635:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10635:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2368,"nodeType":"ExpressionStatement","src":"10635:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2369,"name":"exposition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"10684:10:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10698:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10684:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2425,"nodeType":"Block","src":"10818:396:7","statements":[{"expression":{"arguments":[{"expression":{"id":2403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10915:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10919:6:7","memberName":"sender","nodeType":"MemberAccess","src":"10915:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_990000_by_1","typeString":"int_const 990000"},"id":2409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3939","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10944:2:7","typeDescriptions":{"typeIdentifier":"t_rational_99_by_1","typeString":"int_const 99"},"value":"99"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10951:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10947:5:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10944:8:7","typeDescriptions":{"typeIdentifier":"t_rational_990000_by_1","typeString":"int_const 990000"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2410,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"10953:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10944:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2412,"name":"netAssetValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"10962:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10944:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10943:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2415,"name":"preop_supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"10978:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"},"id":2418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10991:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3330","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10995:2:7","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"10991:6:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"}},"src":"10978:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10977:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10943:55:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2422,"name":"isLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"11183:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":2397,"name":"GMX_controller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"10847:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2396,"name":"IGMXController","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"10832:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGMXController_$1630_$","typeString":"type(contract IGMXController)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10832:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGMXController_$1630","typeString":"contract IGMXController"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10863:16:7","memberName":"decreasePosition","nodeType":"MemberAccess","referencedDeclaration":1624,"src":"10832:47:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool) payable external"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":2400,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10887:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10891:5:7","memberName":"value","nodeType":"MemberAccess","src":"10887:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10832:65:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_uint256_$_t_bool_$returns$__$value","typeString":"function (address,uint256,bool) payable external"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10832:371:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2424,"nodeType":"ExpressionStatement","src":"10832:371:7"}]},"id":2426,"nodeType":"IfStatement","src":"10680:534:7","trueBody":{"id":2395,"nodeType":"Block","src":"10701:111:7","statements":[{"expression":{"arguments":[{"expression":{"id":2376,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10737:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10741:6:7","memberName":"sender","nodeType":"MemberAccess","src":"10737:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10749:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10753:1:7","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"10749:5:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2381,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"10755:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10749:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2383,"name":"netAssetValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"10764:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10749:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10748:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"preop_supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"10780:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"},"id":2389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10793:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3330","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10797:2:7","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"10793:6:7","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000000"}},"src":"10780:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10779:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10748:52:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2373,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"10722:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2372,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"10715:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2630_$","typeString":"type(contract IERC20)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10715:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2630","typeString":"contract IERC20"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10728:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2597,"src":"10715:21:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10715:86:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2394,"nodeType":"ExpressionStatement","src":"10715:86:7"}]}},{"eventCall":{"arguments":[{"expression":{"id":2428,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11243:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11247:6:7","memberName":"sender","nodeType":"MemberAccess","src":"11243:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2430,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11255:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11261:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"11255:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2432,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"11272:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2433,"name":"netAssetValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"11281:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2434,"name":"preop_supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"11296:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2427,"name":"withdrawEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"11229:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11229:80:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2436,"nodeType":"EmitStatement","src":"11224:85:7"}]},"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"10000:244:7","text":"@notice Function to withdraw funds from the vault\n @notice Function that handles the withdraw of fund\n @dev take PLP and send back USDC according to current price per share;\n @param _amount amount of PLP decimals 10**18"},"functionSelector":"2e1a7d4d","id":2438,"implemented":true,"kind":"function","modifiers":[{"id":2325,"kind":"modifierInvocation","modifierName":{"id":2324,"name":"nonReentrant","nameLocations":["10301:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":2660,"src":"10301:12:7"},"nodeType":"ModifierInvocation","src":"10301:12:7"}],"name":"withdraw","nameLocation":"10258:8:7","nodeType":"FunctionDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"_amount","nameLocation":"10275:7:7","nodeType":"VariableDeclaration","scope":2438,"src":"10267:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"10267:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10266:17:7"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[],"src":"10314:0:7"},"scope":2439,"src":"10249:1067:7","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2440,"src":"1790:9528:7","usedErrors":[]}],"src":"31:11288:7"},"id":7},"node_modules/@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3293],"Ownable":[2552]},"id":2553,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2441,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:8"},{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2553,"sourceUnit":3294,"src":"127:30:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2444,"name":"Context","nameLocations":["683:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3293,"src":"683:7:8"},"id":2445,"nodeType":"InheritanceSpecifier","src":"683:7:8"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"159:494:8","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2552,"linearizedBaseContracts":[2552,3293],"name":"Ownable","nameLocation":"672:7:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2447,"mutability":"mutable","name":"_owner","nameLocation":"713:6:8","nodeType":"VariableDeclaration","scope":2552,"src":"697:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2446,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2453,"name":"OwnershipTransferred","nameLocation":"732:20:8","nodeType":"EventDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:8","nodeType":"VariableDeclaration","scope":2453,"src":"753:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2448,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2451,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:8","nodeType":"VariableDeclaration","scope":2453,"src":"784:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2450,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:8"},"src":"726:84:8"},{"body":{"id":2462,"nodeType":"Block","src":"926:49:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2458,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"955:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2457,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"936:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2461,"nodeType":"ExpressionStatement","src":"936:32:8"}]},"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"816:91:8","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":2463,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[],"src":"923:2:8"},"returnParameters":{"id":2456,"nodeType":"ParameterList","parameters":[],"src":"926:0:8"},"scope":2552,"src":"912:63:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2470,"nodeType":"Block","src":"1084:41:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2466,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"1094:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2468,"nodeType":"ExpressionStatement","src":"1094:13:8"},{"id":2469,"nodeType":"PlaceholderStatement","src":"1117:1:8"}]},"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"981:77:8","text":" @dev Throws if called by any account other than the owner."},"id":2471,"name":"onlyOwner","nameLocation":"1072:9:8","nodeType":"ModifierDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[],"src":"1081:2:8"},"src":"1063:62:8","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"1256:30:8","statements":[{"expression":{"id":2477,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"1273:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2476,"id":2478,"nodeType":"Return","src":"1266:13:8"}]},"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"1131:65:8","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:8","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[],"src":"1215:2:8"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2480,"src":"1247:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:8"},"scope":2552,"src":"1201:85:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2493,"nodeType":"Block","src":"1404:85:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2485,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"1422:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2487,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"1433:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":2484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"ExpressionStatement","src":"1414:68:8"}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"1292:62:8","text":" @dev Throws if the sender is not the owner."},"id":2494,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:8","nodeType":"FunctionDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[],"src":"1379:2:8"},"returnParameters":{"id":2483,"nodeType":"ParameterList","parameters":[],"src":"1404:0:8"},"scope":2552,"src":"1359:130:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2507,"nodeType":"Block","src":"1885:47:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2501,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:8","typeDescriptions":{}}},"id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"1895:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2506,"nodeType":"ExpressionStatement","src":"1895:30:8"}]},"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"1495:331:8","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2508,"implemented":true,"kind":"function","modifiers":[{"id":2498,"kind":"modifierInvocation","modifierName":{"id":2497,"name":"onlyOwner","nameLocations":["1875:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"1875:9:8"},"nodeType":"ModifierInvocation","src":"1875:9:8"}],"name":"renounceOwnership","nameLocation":"1840:17:8","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[],"src":"1857:2:8"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[],"src":"1885:0:8"},"scope":2552,"src":"1831:101:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2530,"nodeType":"Block","src":"2151:128:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"2169:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2518,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:8","typeDescriptions":{}}},"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":2516,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2525,"nodeType":"ExpressionStatement","src":"2161:73:8"},{"expression":{"arguments":[{"id":2527,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"2263:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2526,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"2244:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2529,"nodeType":"ExpressionStatement","src":"2244:28:8"}]},"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"1938:138:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2531,"implemented":true,"kind":"function","modifiers":[{"id":2514,"kind":"modifierInvocation","modifierName":{"id":2513,"name":"onlyOwner","nameLocations":["2141:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"2141:9:8"},"nodeType":"ModifierInvocation","src":"2141:9:8"}],"name":"transferOwnership","nameLocation":"2090:17:8","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:8","nodeType":"VariableDeclaration","scope":2531,"src":"2108:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2510,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:8"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[],"src":"2151:0:8"},"scope":2552,"src":"2081:198:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2550,"nodeType":"Block","src":"2496:124:8","statements":[{"assignments":[2538],"declarations":[{"constant":false,"id":2538,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:8","nodeType":"VariableDeclaration","scope":2550,"src":"2506:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2537,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2540,"initialValue":{"id":2539,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"2525:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:8"},{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2541,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"2541:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2542,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"2550:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2544,"nodeType":"ExpressionStatement","src":"2541:17:8"},{"eventCall":{"arguments":[{"id":2546,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"2594:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2547,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"2604:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2545,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"2573:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2549,"nodeType":"EmitStatement","src":"2568:45:8"}]},"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"2285:143:8","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2551,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:8","nodeType":"FunctionDefinition","parameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:8","nodeType":"VariableDeclaration","scope":2551,"src":"2461:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:8"},"returnParameters":{"id":2536,"nodeType":"ParameterList","parameters":[],"src":"2496:0:8"},"scope":2552,"src":"2433:187:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2553,"src":"654:1968:8","usedErrors":[]}],"src":"102:2521:8"},"id":8},"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2684]},"id":2685,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2632,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"137:750:9","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2684,"linearizedBaseContracts":[2684],"name":"ReentrancyGuard","nameLocation":"906:15:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2636,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:9","nodeType":"VariableDeclaration","scope":2684,"src":"1676:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2639,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:9","nodeType":"VariableDeclaration","scope":2684,"src":"1723:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2641,"mutability":"mutable","name":"_status","nameLocation":"1783:7:9","nodeType":"VariableDeclaration","scope":2684,"src":"1767:23:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":2648,"nodeType":"Block","src":"1811:39:9","statements":[{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2644,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"1821:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2645,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"1831:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2647,"nodeType":"ExpressionStatement","src":"1821:22:9"}]},"id":2649,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[],"src":"1808:2:9"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[],"src":"1811:0:9"},"scope":2684,"src":"1797:53:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2659,"nodeType":"Block","src":"2251:79:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2652,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"2261:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2654,"nodeType":"ExpressionStatement","src":"2261:21:9"},{"id":2655,"nodeType":"PlaceholderStatement","src":"2292:1:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2656,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"2303:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2658,"nodeType":"ExpressionStatement","src":"2303:20:9"}]},"documentation":{"id":2650,"nodeType":"StructuredDocumentation","src":"1856:366:9","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2660,"name":"nonReentrant","nameLocation":"2236:12:9","nodeType":"ModifierDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[],"src":"2248:2:9"},"src":"2227:103:9","virtual":false,"visibility":"internal"},{"body":{"id":2674,"nodeType":"Block","src":"2375:248:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"2468:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2665,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2479:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":2663,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2669,"nodeType":"ExpressionStatement","src":"2460:63:9"},{"expression":{"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2670,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"2598:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2671,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2608:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2673,"nodeType":"ExpressionStatement","src":"2598:18:9"}]},"id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:9","nodeType":"FunctionDefinition","parameters":{"id":2661,"nodeType":"ParameterList","parameters":[],"src":"2364:2:9"},"returnParameters":{"id":2662,"nodeType":"ParameterList","parameters":[],"src":"2375:0:9"},"scope":2684,"src":"2336:287:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2682,"nodeType":"Block","src":"2667:171:9","statements":[{"expression":{"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2678,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"2809:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2679,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"2819:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2681,"nodeType":"ExpressionStatement","src":"2809:22:9"}]},"id":2683,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:9","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[],"src":"2656:2:9"},"returnParameters":{"id":2677,"nodeType":"ParameterList","parameters":[],"src":"2667:0:9"},"scope":2684,"src":"2629:209:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2685,"src":"888:1952:9","usedErrors":[]}],"src":"112:2729:9"},"id":9},"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3293],"ERC20":[3271],"IERC20":[2630],"IERC20Metadata":[3318]},"id":3272,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2686,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:10"},{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":2687,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3272,"sourceUnit":2631,"src":"130:22:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":2688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3272,"sourceUnit":3319,"src":"153:41:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":2689,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3272,"sourceUnit":3294,"src":"195:33:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2691,"name":"Context","nameLocations":["1419:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3293,"src":"1419:7:10"},"id":2692,"nodeType":"InheritanceSpecifier","src":"1419:7:10"},{"baseName":{"id":2693,"name":"IERC20","nameLocations":["1428:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":2630,"src":"1428:6:10"},"id":2694,"nodeType":"InheritanceSpecifier","src":"1428:6:10"},{"baseName":{"id":2695,"name":"IERC20Metadata","nameLocations":["1436:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":3318,"src":"1436:14:10"},"id":2696,"nodeType":"InheritanceSpecifier","src":"1436:14:10"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":2690,"nodeType":"StructuredDocumentation","src":"230:1170:10","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":3271,"linearizedBaseContracts":[3271,3318,2630,3293],"name":"ERC20","nameLocation":"1410:5:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2700,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:10","nodeType":"VariableDeclaration","scope":3271,"src":"1457:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2699,"keyType":{"id":2697,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2706,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:10","nodeType":"VariableDeclaration","scope":3271,"src":"1509:67:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2705,"keyType":{"id":2701,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":2704,"keyType":{"id":2702,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":2708,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:10","nodeType":"VariableDeclaration","scope":3271,"src":"1583:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2710,"mutability":"mutable","name":"_name","nameLocation":"1633:5:10","nodeType":"VariableDeclaration","scope":3271,"src":"1618:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2709,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2712,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:10","nodeType":"VariableDeclaration","scope":3271,"src":"1644:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2711,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2728,"nodeType":"Block","src":"2032:57:10","statements":[{"expression":{"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2720,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"2042:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2721,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"2050:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2723,"nodeType":"ExpressionStatement","src":"2042:13:10"},{"expression":{"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2724,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"2065:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2725,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"2075:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2727,"nodeType":"ExpressionStatement","src":"2065:17:10"}]},"documentation":{"id":2713,"nodeType":"StructuredDocumentation","src":"1673:298:10","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":2729,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"name_","nameLocation":"2002:5:10","nodeType":"VariableDeclaration","scope":2729,"src":"1988:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2714,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:10","nodeType":"VariableDeclaration","scope":2729,"src":"2009:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2716,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:10"},"returnParameters":{"id":2719,"nodeType":"ParameterList","parameters":[],"src":"2032:0:10"},"scope":3271,"src":"1976:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3305],"body":{"id":2738,"nodeType":"Block","src":"2223:29:10","statements":[{"expression":{"id":2736,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"2240:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2735,"id":2737,"nodeType":"Return","src":"2233:12:10"}]},"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"2095:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2739,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:10","nodeType":"FunctionDefinition","overrides":{"id":2732,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:10"},"parameters":{"id":2731,"nodeType":"ParameterList","parameters":[],"src":"2167:2:10"},"returnParameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2739,"src":"2208:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2733,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:10"},"scope":3271,"src":"2154:98:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3311],"body":{"id":2748,"nodeType":"Block","src":"2436:31:10","statements":[{"expression":{"id":2746,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"2453:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2745,"id":2747,"nodeType":"Return","src":"2446:14:10"}]},"documentation":{"id":2740,"nodeType":"StructuredDocumentation","src":"2258:102:10","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":2749,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:10","nodeType":"FunctionDefinition","overrides":{"id":2742,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:10"},"parameters":{"id":2741,"nodeType":"ParameterList","parameters":[],"src":"2380:2:10"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2749,"src":"2421:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2743,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:10"},"scope":3271,"src":"2365:102:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3317],"body":{"id":2758,"nodeType":"Block","src":"3156:26:10","statements":[{"expression":{"hexValue":"3138","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":2755,"id":2757,"nodeType":"Return","src":"3166:9:10"}]},"documentation":{"id":2750,"nodeType":"StructuredDocumentation","src":"2473:613:10","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:10","nodeType":"FunctionDefinition","overrides":{"id":2752,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:10"},"parameters":{"id":2751,"nodeType":"ParameterList","parameters":[],"src":"3108:2:10"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2759,"src":"3149:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2753,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:10"},"scope":3271,"src":"3091:91:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2579],"body":{"id":2768,"nodeType":"Block","src":"3312:36:10","statements":[{"expression":{"id":2766,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"3329:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2765,"id":2767,"nodeType":"Return","src":"3322:19:10"}]},"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"3188:49:10","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:10","nodeType":"FunctionDefinition","overrides":{"id":2762,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:10"},"parameters":{"id":2761,"nodeType":"ParameterList","parameters":[],"src":"3262:2:10"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2769,"src":"3303:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:10"},"scope":3271,"src":"3242:106:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2587],"body":{"id":2782,"nodeType":"Block","src":"3489:42:10","statements":[{"expression":{"baseExpression":{"id":2778,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"3506:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2780,"indexExpression":{"id":2779,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"3516:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2777,"id":2781,"nodeType":"Return","src":"3499:25:10"}]},"documentation":{"id":2770,"nodeType":"StructuredDocumentation","src":"3354:47:10","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":2783,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:10","nodeType":"FunctionDefinition","overrides":{"id":2774,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:10"},"parameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"account","nameLocation":"3433:7:10","nodeType":"VariableDeclaration","scope":2783,"src":"3425:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2771,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:10"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2783,"src":"3480:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:10"},"scope":3271,"src":"3406:125:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2597],"body":{"id":2807,"nodeType":"Block","src":"3812:104:10","statements":[{"assignments":[2795],"declarations":[{"constant":false,"id":2795,"mutability":"mutable","name":"owner","nameLocation":"3830:5:10","nodeType":"VariableDeclaration","scope":2807,"src":"3822:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2798,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2796,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"3838:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3838:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:10"},{"expression":{"arguments":[{"id":2800,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"3870:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2801,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"3877:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2802,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"3881:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2799,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3860:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2804,"nodeType":"ExpressionStatement","src":"3860:28:10"},{"expression":{"hexValue":"74727565","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2793,"id":2806,"nodeType":"Return","src":"3898:11:10"}]},"documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"3537:185:10","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:10","nodeType":"FunctionDefinition","overrides":{"id":2790,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:10"},"parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"to","nameLocation":"3753:2:10","nodeType":"VariableDeclaration","scope":2808,"src":"3745:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2788,"mutability":"mutable","name":"amount","nameLocation":"3765:6:10","nodeType":"VariableDeclaration","scope":2808,"src":"3757:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:10"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2808,"src":"3806:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2791,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:10"},"scope":3271,"src":"3727:189:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2607],"body":{"id":2825,"nodeType":"Block","src":"4072:51:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2819,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"4089:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2821,"indexExpression":{"id":2820,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"4101:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2823,"indexExpression":{"id":2822,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"4108:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2818,"id":2824,"nodeType":"Return","src":"4082:34:10"}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"3922:47:10","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":2826,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:10","nodeType":"FunctionDefinition","overrides":{"id":2815,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:10"},"parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"owner","nameLocation":"4001:5:10","nodeType":"VariableDeclaration","scope":2826,"src":"3993:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"spender","nameLocation":"4016:7:10","nodeType":"VariableDeclaration","scope":2826,"src":"4008:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:10"},"returnParameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2826,"src":"4063:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:10"},"scope":3271,"src":"3974:149:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2617],"body":{"id":2850,"nodeType":"Block","src":"4520:108:10","statements":[{"assignments":[2838],"declarations":[{"constant":false,"id":2838,"mutability":"mutable","name":"owner","nameLocation":"4538:5:10","nodeType":"VariableDeclaration","scope":2850,"src":"4530:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2837,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2841,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2839,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"4546:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:10"},{"expression":{"arguments":[{"id":2843,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"4577:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2844,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"4584:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2845,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"4593:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2842,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"4568:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4568:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2847,"nodeType":"ExpressionStatement","src":"4568:32:10"},{"expression":{"hexValue":"74727565","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2836,"id":2849,"nodeType":"Return","src":"4610:11:10"}]},"documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"4129:297:10","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":2851,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:10","nodeType":"FunctionDefinition","overrides":{"id":2833,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:10"},"parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"spender","nameLocation":"4456:7:10","nodeType":"VariableDeclaration","scope":2851,"src":"4448:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2828,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"amount","nameLocation":"4473:6:10","nodeType":"VariableDeclaration","scope":2851,"src":"4465:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:10"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2851,"src":"4514:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2834,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:10"},"scope":3271,"src":"4431:197:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2629],"body":{"id":2883,"nodeType":"Block","src":"5323:153:10","statements":[{"assignments":[2865],"declarations":[{"constant":false,"id":2865,"mutability":"mutable","name":"spender","nameLocation":"5341:7:10","nodeType":"VariableDeclaration","scope":2883,"src":"5333:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2864,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2868,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2866,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"5351:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5351:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:10"},{"expression":{"arguments":[{"id":2870,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"5389:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2871,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"5395:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2872,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"5404:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2869,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"5373:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2874,"nodeType":"ExpressionStatement","src":"5373:38:10"},{"expression":{"arguments":[{"id":2876,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"5431:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2877,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"5437:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2878,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"5441:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2875,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"5421:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2880,"nodeType":"ExpressionStatement","src":"5421:27:10"},{"expression":{"hexValue":"74727565","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2863,"id":2882,"nodeType":"Return","src":"5458:11:10"}]},"documentation":{"id":2852,"nodeType":"StructuredDocumentation","src":"4634:551:10","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":2884,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:10","nodeType":"FunctionDefinition","overrides":{"id":2860,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:10"},"parameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"from","nameLocation":"5229:4:10","nodeType":"VariableDeclaration","scope":2884,"src":"5221:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"to","nameLocation":"5251:2:10","nodeType":"VariableDeclaration","scope":2884,"src":"5243:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"amount","nameLocation":"5271:6:10","nodeType":"VariableDeclaration","scope":2884,"src":"5263:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:10"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2884,"src":"5317:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2861,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:10"},"scope":3271,"src":"5190:286:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2912,"nodeType":"Block","src":"5965:140:10","statements":[{"assignments":[2895],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"owner","nameLocation":"5983:5:10","nodeType":"VariableDeclaration","scope":2912,"src":"5975:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2894,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2898,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2896,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"5991:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5991:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:10"},{"expression":{"arguments":[{"id":2900,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"6022:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2901,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"6029:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2903,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"6048:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2904,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"6055:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2902,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"6038:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2906,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"6066:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2899,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"6013:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2909,"nodeType":"ExpressionStatement","src":"6013:64:10"},{"expression":{"hexValue":"74727565","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2893,"id":2911,"nodeType":"Return","src":"6087:11:10"}]},"documentation":{"id":2885,"nodeType":"StructuredDocumentation","src":"5482:384:10","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:10","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"spender","nameLocation":"5906:7:10","nodeType":"VariableDeclaration","scope":2913,"src":"5898:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2886,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:10","nodeType":"VariableDeclaration","scope":2913,"src":"5915:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:10"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2913,"src":"5959:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2891,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:10"},"scope":3271,"src":"5871:234:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2953,"nodeType":"Block","src":"6691:328:10","statements":[{"assignments":[2924],"declarations":[{"constant":false,"id":2924,"mutability":"mutable","name":"owner","nameLocation":"6709:5:10","nodeType":"VariableDeclaration","scope":2953,"src":"6701:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2923,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2927,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2925,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"6717:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:10"},{"assignments":[2929],"declarations":[{"constant":false,"id":2929,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:10","nodeType":"VariableDeclaration","scope":2953,"src":"6739:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2934,"initialValue":{"arguments":[{"id":2931,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"6776:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2932,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"6783:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2930,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"6766:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2936,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"6809:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2937,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"6829:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":2935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:85:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2941,"nodeType":"ExpressionStatement","src":"6801:85:10"},{"id":2950,"nodeType":"UncheckedBlock","src":"6896:95:10","statements":[{"expression":{"arguments":[{"id":2943,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"6929:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2944,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"6936:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"6945:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2946,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"6964:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2942,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"6920:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6920:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2949,"nodeType":"ExpressionStatement","src":"6920:60:10"}]},{"expression":{"hexValue":"74727565","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2922,"id":2952,"nodeType":"Return","src":"7001:11:10"}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"6111:476:10","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":2954,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:10","nodeType":"FunctionDefinition","parameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"spender","nameLocation":"6627:7:10","nodeType":"VariableDeclaration","scope":2954,"src":"6619:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:10","nodeType":"VariableDeclaration","scope":2954,"src":"6636:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:10"},"returnParameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2954,"src":"6685:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2920,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:10"},"scope":3271,"src":"6592:427:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3030,"nodeType":"Block","src":"7581:710:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"7599:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2966,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:10","typeDescriptions":{}}},"id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":2964,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7591:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2973,"nodeType":"ExpressionStatement","src":"7591:68:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"7677:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2976,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:10","typeDescriptions":{}}},"id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":2974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7669:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2983,"nodeType":"ExpressionStatement","src":"7669:64:10"},{"expression":{"arguments":[{"id":2985,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"7765:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2986,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"7771:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2987,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"7775:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2984,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"7744:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7744:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2989,"nodeType":"ExpressionStatement","src":"7744:38:10"},{"assignments":[2991],"declarations":[{"constant":false,"id":2991,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:10","nodeType":"VariableDeclaration","scope":3030,"src":"7793:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2990,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2995,"initialValue":{"baseExpression":{"id":2992,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"7815:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2994,"indexExpression":{"id":2993,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"7825:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2997,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"7848:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2998,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"7863:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":2996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7840:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3002,"nodeType":"ExpressionStatement","src":"7840:72:10"},{"id":3017,"nodeType":"UncheckedBlock","src":"7922:273:10","statements":[{"expression":{"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3003,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"7946:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3005,"indexExpression":{"id":3004,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"7956:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3006,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"7964:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3007,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"7978:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3010,"nodeType":"ExpressionStatement","src":"7946:38:10"},{"expression":{"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3011,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"8161:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3013,"indexExpression":{"id":3012,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"8171:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3014,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"8178:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3016,"nodeType":"ExpressionStatement","src":"8161:23:10"}]},{"eventCall":{"arguments":[{"id":3019,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8219:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3020,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"8225:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3021,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"8229:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3018,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"8210:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8210:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3023,"nodeType":"EmitStatement","src":"8205:31:10"},{"expression":{"arguments":[{"id":3025,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8267:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3026,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"8273:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3027,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"8277:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3024,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"8247:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8247:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3029,"nodeType":"ExpressionStatement","src":"8247:37:10"}]},"documentation":{"id":2955,"nodeType":"StructuredDocumentation","src":"7025:443:10","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":3031,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:10","nodeType":"FunctionDefinition","parameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"from","nameLocation":"7509:4:10","nodeType":"VariableDeclaration","scope":3031,"src":"7501:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2956,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2959,"mutability":"mutable","name":"to","nameLocation":"7531:2:10","nodeType":"VariableDeclaration","scope":3031,"src":"7523:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2958,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2961,"mutability":"mutable","name":"amount","nameLocation":"7551:6:10","nodeType":"VariableDeclaration","scope":3031,"src":"7543:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:10"},"returnParameters":{"id":2963,"nodeType":"ParameterList","parameters":[],"src":"7581:0:10"},"scope":3271,"src":"7473:818:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3087,"nodeType":"Block","src":"8632:470:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8650:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3041,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:10","typeDescriptions":{}}},"id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":3039,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8642:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3048,"nodeType":"ExpressionStatement","src":"8642:65:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:10","typeDescriptions":{}}},"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3054,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8751:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3055,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"8760:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3049,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"8718:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3057,"nodeType":"ExpressionStatement","src":"8718:49:10"},{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3058,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"8778:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3059,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"8794:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ExpressionStatement","src":"8778:22:10"},{"id":3068,"nodeType":"UncheckedBlock","src":"8810:175:10","statements":[{"expression":{"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3062,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"8946:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3064,"indexExpression":{"id":3063,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8956:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3065,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"8968:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3067,"nodeType":"ExpressionStatement","src":"8946:28:10"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3070,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:10","typeDescriptions":{}}},"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3074,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"9020:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3075,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"9029:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3069,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"8999:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3077,"nodeType":"EmitStatement","src":"8994:42:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3079,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:10","typeDescriptions":{}}},"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3083,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"9079:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3084,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"9088:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3078,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"9047:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9047:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3086,"nodeType":"ExpressionStatement","src":"9047:48:10"}]},"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"8297:265:10","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":3088,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:10","nodeType":"FunctionDefinition","parameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"account","nameLocation":"8590:7:10","nodeType":"VariableDeclaration","scope":3088,"src":"8582:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"amount","nameLocation":"8607:6:10","nodeType":"VariableDeclaration","scope":3088,"src":"8599:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:10"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[],"src":"8632:0:10"},"scope":3271,"src":"8567:535:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"9487:594:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"9505:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3098,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:10","typeDescriptions":{}}},"id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9516:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":3096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9497:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3105,"nodeType":"ExpressionStatement","src":"9497:67:10"},{"expression":{"arguments":[{"id":3107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"9596:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3108,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:10","typeDescriptions":{}}},"id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9605:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3112,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"9617:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3106,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"9575:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9575:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3114,"nodeType":"ExpressionStatement","src":"9575:49:10"},{"assignments":[3116],"declarations":[{"constant":false,"id":3116,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:10","nodeType":"VariableDeclaration","scope":3159,"src":"9635:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3115,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3120,"initialValue":{"baseExpression":{"id":3117,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"9660:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3119,"indexExpression":{"id":3118,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"9670:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3122,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"9696:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3123,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"9714:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":3121,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9688:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3127,"nodeType":"ExpressionStatement","src":"9688:71:10"},{"id":3140,"nodeType":"UncheckedBlock","src":"9769:194:10","statements":[{"expression":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3128,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"9793:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3130,"indexExpression":{"id":3129,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"9803:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3131,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"9814:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3132,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"9831:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3135,"nodeType":"ExpressionStatement","src":"9793:44:10"},{"expression":{"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3136,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"9930:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3137,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"9946:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3139,"nodeType":"ExpressionStatement","src":"9930:22:10"}]},{"eventCall":{"arguments":[{"id":3142,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"9987:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3143,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:10","typeDescriptions":{}}},"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9996:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3147,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"10008:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3141,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"9978:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9978:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3149,"nodeType":"EmitStatement","src":"9973:42:10"},{"expression":{"arguments":[{"id":3151,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"10046:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3152,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:10","typeDescriptions":{}}},"id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10055:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3156,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"10067:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3150,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"10026:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10026:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3158,"nodeType":"ExpressionStatement","src":"10026:48:10"}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"9108:309:10","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:10","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"account","nameLocation":"9445:7:10","nodeType":"VariableDeclaration","scope":3160,"src":"9437:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"amount","nameLocation":"9462:6:10","nodeType":"VariableDeclaration","scope":3160,"src":"9454:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:10"},"returnParameters":{"id":3095,"nodeType":"ParameterList","parameters":[],"src":"9487:0:10"},"scope":3271,"src":"9422:659:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3204,"nodeType":"Block","src":"10617:257:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3171,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"10635:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3172,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:10","typeDescriptions":{}}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":3170,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10627:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3179,"nodeType":"ExpressionStatement","src":"10627:68:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"10713:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3182,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:10","typeDescriptions":{}}},"id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10724:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":3180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10705:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3189,"nodeType":"ExpressionStatement","src":"10705:68:10"},{"expression":{"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3190,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"10784:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3193,"indexExpression":{"id":3191,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"10796:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3194,"indexExpression":{"id":3192,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"10803:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3195,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"10814:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3197,"nodeType":"ExpressionStatement","src":"10784:36:10"},{"eventCall":{"arguments":[{"id":3199,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"10844:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3200,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"10851:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3201,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"10860:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3198,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"10835:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10835:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3203,"nodeType":"EmitStatement","src":"10830:37:10"}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"10087:412:10","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":3205,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:10","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"owner","nameLocation":"10539:5:10","nodeType":"VariableDeclaration","scope":3205,"src":"10531:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3162,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3165,"mutability":"mutable","name":"spender","nameLocation":"10562:7:10","nodeType":"VariableDeclaration","scope":3205,"src":"10554:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3164,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"amount","nameLocation":"10587:6:10","nodeType":"VariableDeclaration","scope":3205,"src":"10579:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:10"},"returnParameters":{"id":3169,"nodeType":"ParameterList","parameters":[],"src":"10617:0:10"},"scope":3271,"src":"10504:370:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3247,"nodeType":"Block","src":"11275:321:10","statements":[{"assignments":[3216],"declarations":[{"constant":false,"id":3216,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:10","nodeType":"VariableDeclaration","scope":3247,"src":"11285:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3221,"initialValue":{"arguments":[{"id":3218,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"11322:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3219,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"11329:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3217,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"11312:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11312:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"11351:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":3225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3224,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3223,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11371:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11385:3:10","memberName":"max","nodeType":"MemberAccess","src":"11371:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3246,"nodeType":"IfStatement","src":"11347:243:10","trueBody":{"id":3245,"nodeType":"Block","src":"11390:200:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3230,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"11412:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3231,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"11432:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":3229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11404:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3235,"nodeType":"ExpressionStatement","src":"11404:68:10"},{"id":3244,"nodeType":"UncheckedBlock","src":"11486:94:10","statements":[{"expression":{"arguments":[{"id":3237,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"11523:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3238,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"11530:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"11539:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3240,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"11558:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3236,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"11514:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11514:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3243,"nodeType":"ExpressionStatement","src":"11514:51:10"}]}]}}]},"documentation":{"id":3206,"nodeType":"StructuredDocumentation","src":"10880:270:10","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":3248,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:10","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"owner","nameLocation":"11197:5:10","nodeType":"VariableDeclaration","scope":3248,"src":"11189:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3210,"mutability":"mutable","name":"spender","nameLocation":"11220:7:10","nodeType":"VariableDeclaration","scope":3248,"src":"11212:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3209,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3212,"mutability":"mutable","name":"amount","nameLocation":"11245:6:10","nodeType":"VariableDeclaration","scope":3248,"src":"11237:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:10"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[],"src":"11275:0:10"},"scope":3271,"src":"11155:441:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3258,"nodeType":"Block","src":"12299:2:10","statements":[]},"documentation":{"id":3249,"nodeType":"StructuredDocumentation","src":"11602:573:10","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":3259,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:10","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"from","nameLocation":"12227:4:10","nodeType":"VariableDeclaration","scope":3259,"src":"12219:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3250,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3253,"mutability":"mutable","name":"to","nameLocation":"12249:2:10","nodeType":"VariableDeclaration","scope":3259,"src":"12241:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3252,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"amount","nameLocation":"12269:6:10","nodeType":"VariableDeclaration","scope":3259,"src":"12261:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:10"},"returnParameters":{"id":3257,"nodeType":"ParameterList","parameters":[],"src":"12299:0:10"},"scope":3271,"src":"12180:121:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3269,"nodeType":"Block","src":"13007:2:10","statements":[]},"documentation":{"id":3260,"nodeType":"StructuredDocumentation","src":"12307:577:10","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":3270,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:10","nodeType":"FunctionDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"from","nameLocation":"12935:4:10","nodeType":"VariableDeclaration","scope":3270,"src":"12927:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3261,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"to","nameLocation":"12957:2:10","nodeType":"VariableDeclaration","scope":3270,"src":"12949:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"amount","nameLocation":"12977:6:10","nodeType":"VariableDeclaration","scope":3270,"src":"12969:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:10"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[],"src":"13007:0:10"},"scope":3271,"src":"12889:120:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3272,"src":"1401:11610:10","usedErrors":[]}],"src":"105:12907:10"},"id":10},"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2630]},"id":2631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2554,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2555,"nodeType":"StructuredDocumentation","src":"131:70:11","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2630,"linearizedBaseContracts":[2630],"name":"IERC20","nameLocation":"212:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"225:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2564,"name":"Transfer","nameLocation":"394:8:11","nodeType":"EventDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:11","nodeType":"VariableDeclaration","scope":2564,"src":"403:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2557,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2560,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:11","nodeType":"VariableDeclaration","scope":2564,"src":"425:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2562,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:11","nodeType":"VariableDeclaration","scope":2564,"src":"445:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:11"},"src":"388:72:11"},{"anonymous":false,"documentation":{"id":2565,"nodeType":"StructuredDocumentation","src":"466:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2573,"name":"Approval","nameLocation":"625:8:11","nodeType":"EventDefinition","parameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:11","nodeType":"VariableDeclaration","scope":2573,"src":"634:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2566,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2569,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:11","nodeType":"VariableDeclaration","scope":2573,"src":"657:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2568,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2571,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:11","nodeType":"VariableDeclaration","scope":2573,"src":"682:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:11"},"src":"619:78:11"},{"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"703:66:11","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":2579,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:11","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[],"src":"794:2:11"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2579,"src":"820:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:11"},"scope":2630,"src":"774:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"835:72:11","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":2587,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:11","nodeType":"FunctionDefinition","parameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"account","nameLocation":"939:7:11","nodeType":"VariableDeclaration","scope":2587,"src":"931:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2581,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:11"},"returnParameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2587,"src":"971:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:11"},"scope":2630,"src":"912:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2588,"nodeType":"StructuredDocumentation","src":"986:202:11","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2597,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:11","nodeType":"FunctionDefinition","parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"to","nameLocation":"1219:2:11","nodeType":"VariableDeclaration","scope":2597,"src":"1211:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"amount","nameLocation":"1231:6:11","nodeType":"VariableDeclaration","scope":2597,"src":"1223:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:11"},"returnParameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2597,"src":"1257:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2594,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:11"},"scope":2630,"src":"1193:70:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"1269:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2607,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:11","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"owner","nameLocation":"1565:5:11","nodeType":"VariableDeclaration","scope":2607,"src":"1557:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"spender","nameLocation":"1580:7:11","nodeType":"VariableDeclaration","scope":2607,"src":"1572:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2601,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:11"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2607,"src":"1612:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:11"},"scope":2630,"src":"1538:83:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"1627:642:11","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2617,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:11","nodeType":"FunctionDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"spender","nameLocation":"2299:7:11","nodeType":"VariableDeclaration","scope":2617,"src":"2291:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"amount","nameLocation":"2316:6:11","nodeType":"VariableDeclaration","scope":2617,"src":"2308:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:11"},"returnParameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2617,"src":"2342:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2614,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:11"},"scope":2630,"src":"2274:74:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"2354:287:11","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2629,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:11","nodeType":"FunctionDefinition","parameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"from","nameLocation":"2685:4:11","nodeType":"VariableDeclaration","scope":2629,"src":"2677:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"to","nameLocation":"2707:2:11","nodeType":"VariableDeclaration","scope":2629,"src":"2699:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"amount","nameLocation":"2727:6:11","nodeType":"VariableDeclaration","scope":2629,"src":"2719:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:11"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"2758:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2626,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:11"},"scope":2630,"src":"2646:118:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2631,"src":"202:2564:11","usedErrors":[]}],"src":"106:2661:11"},"id":11},"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2630],"IERC20Metadata":[3318]},"id":3319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3295,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:12"},{"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":3296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3319,"sourceUnit":2631,"src":"135:23:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3298,"name":"IERC20","nameLocations":["305:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2630,"src":"305:6:12"},"id":3299,"nodeType":"InheritanceSpecifier","src":"305:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3297,"nodeType":"StructuredDocumentation","src":"160:116:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":3318,"linearizedBaseContracts":[3318,2630],"name":"IERC20Metadata","nameLocation":"287:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3300,"nodeType":"StructuredDocumentation","src":"318:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":3305,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:12","nodeType":"FunctionDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[],"src":"390:2:12"},"returnParameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3305,"src":"416:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3302,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:12"},"scope":3318,"src":"377:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3306,"nodeType":"StructuredDocumentation","src":"437:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":3311,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:12","nodeType":"FunctionDefinition","parameters":{"id":3307,"nodeType":"ParameterList","parameters":[],"src":"513:2:12"},"returnParameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3311,"src":"539:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3308,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:12"},"scope":3318,"src":"498:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3312,"nodeType":"StructuredDocumentation","src":"560:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":3317,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:12","nodeType":"FunctionDefinition","parameters":{"id":3313,"nodeType":"ParameterList","parameters":[],"src":"647:2:12"},"returnParameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"673:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3314,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:12"},"scope":3318,"src":"630:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3319,"src":"277:405:12","usedErrors":[]}],"src":"110:573:12"},"id":12},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3293]},"id":3294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3273,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"111:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3293,"linearizedBaseContracts":[3293],"name":"Context","nameLocation":"626:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3282,"nodeType":"Block","src":"702:34:13","statements":[{"expression":{"expression":{"id":3279,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:13","memberName":"sender","nodeType":"MemberAccess","src":"719:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3278,"id":3281,"nodeType":"Return","src":"712:17:13"}]},"id":3283,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:13","nodeType":"FunctionDefinition","parameters":{"id":3275,"nodeType":"ParameterList","parameters":[],"src":"659:2:13"},"returnParameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3283,"src":"693:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3276,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:13"},"scope":3293,"src":"640:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3291,"nodeType":"Block","src":"809:32:13","statements":[{"expression":{"expression":{"id":3288,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:13","memberName":"data","nodeType":"MemberAccess","src":"826:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3287,"id":3290,"nodeType":"Return","src":"819:15:13"}]},"id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:13","nodeType":"FunctionDefinition","parameters":{"id":3284,"nodeType":"ParameterList","parameters":[],"src":"759:2:13"},"returnParameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3292,"src":"793:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3285,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:13"},"scope":3293,"src":"742:99:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3294,"src":"608:235:13","usedErrors":[]}],"src":"86:758:13"},"id":13}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":123,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_211":{"entryPoint":null,"id":211,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:14"},"nodeType":"YulFunctionCall","src":"66:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:14"},"nodeType":"YulFunctionCall","src":"56:31:14"},"nodeType":"YulExpressionStatement","src":"56:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:14"},"nodeType":"YulFunctionCall","src":"96:15:14"},"nodeType":"YulExpressionStatement","src":"96:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:14"},"nodeType":"YulFunctionCall","src":"120:15:14"},"nodeType":"YulExpressionStatement","src":"120:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:14"},{"body":{"nodeType":"YulBlock","src":"210:776:14","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:14"},"nodeType":"YulFunctionCall","src":"261:12:14"},"nodeType":"YulExpressionStatement","src":"261:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:14"},"nodeType":"YulFunctionCall","src":"234:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:14"},"nodeType":"YulFunctionCall","src":"230:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:14"},"nodeType":"YulFunctionCall","src":"223:35:14"},"nodeType":"YulIf","src":"220:55:14"},{"nodeType":"YulVariableDeclaration","src":"284:23:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:14"},"nodeType":"YulFunctionCall","src":"294:13:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:14","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:14"},"nodeType":"YulFunctionCall","src":"330:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:14"},"nodeType":"YulFunctionCall","src":"326:18:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:14"},"nodeType":"YulFunctionCall","src":"369:18:14"},"nodeType":"YulExpressionStatement","src":"369:18:14"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:14"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:14"},"nodeType":"YulFunctionCall","src":"356:10:14"},"nodeType":"YulIf","src":"353:36:14"},{"nodeType":"YulVariableDeclaration","src":"398:17:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:14"},"nodeType":"YulFunctionCall","src":"408:7:14"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:14"},"nodeType":"YulFunctionCall","src":"438:9:14"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:14"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:14"},"nodeType":"YulFunctionCall","src":"498:13:14"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:14"},"nodeType":"YulFunctionCall","src":"494:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:14","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:14"},"nodeType":"YulFunctionCall","src":"490:31:14"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:14"},"nodeType":"YulFunctionCall","src":"486:40:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:14"},"nodeType":"YulFunctionCall","src":"474:53:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:14"},"nodeType":"YulFunctionCall","src":"588:18:14"},"nodeType":"YulExpressionStatement","src":"588:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:14"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:14"},"nodeType":"YulFunctionCall","src":"542:18:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:14"},"nodeType":"YulFunctionCall","src":"562:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:14"},"nodeType":"YulFunctionCall","src":"539:46:14"},"nodeType":"YulIf","src":"536:72:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:14"},"nodeType":"YulFunctionCall","src":"617:22:14"},"nodeType":"YulExpressionStatement","src":"617:22:14"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:14"},"nodeType":"YulFunctionCall","src":"648:18:14"},"nodeType":"YulExpressionStatement","src":"648:18:14"},{"nodeType":"YulVariableDeclaration","src":"675:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:14","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:14"},"nodeType":"YulFunctionCall","src":"737:12:14"},"nodeType":"YulExpressionStatement","src":"737:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:14"},"nodeType":"YulFunctionCall","src":"708:15:14"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:14"},"nodeType":"YulFunctionCall","src":"704:24:14"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:14"},"nodeType":"YulFunctionCall","src":"701:33:14"},"nodeType":"YulIf","src":"698:53:14"},{"nodeType":"YulVariableDeclaration","src":"760:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:14"},"nodeType":"YulFunctionCall","src":"850:14:14"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:14"},"nodeType":"YulFunctionCall","src":"846:23:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:14"},"nodeType":"YulFunctionCall","src":"881:14:14"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:14"},"nodeType":"YulFunctionCall","src":"877:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:14"},"nodeType":"YulFunctionCall","src":"871:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:14"},"nodeType":"YulFunctionCall","src":"839:63:14"},"nodeType":"YulExpressionStatement","src":"839:63:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:14"},"nodeType":"YulFunctionCall","src":"787:9:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:14","statements":[{"nodeType":"YulAssignment","src":"799:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:14"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:14"},"nodeType":"YulFunctionCall","src":"804:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:14","statements":[]},"src":"779:133:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:14"},"nodeType":"YulFunctionCall","src":"932:15:14"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:14"},"nodeType":"YulFunctionCall","src":"928:24:14"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:14"},"nodeType":"YulFunctionCall","src":"921:35:14"},"nodeType":"YulExpressionStatement","src":"921:35:14"},{"nodeType":"YulAssignment","src":"965:15:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:14"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:14","type":""}],"src":"146:840:14"},{"body":{"nodeType":"YulBlock","src":"1109:444:14","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:14"},"nodeType":"YulFunctionCall","src":"1157:12:14"},"nodeType":"YulExpressionStatement","src":"1157:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:14"},"nodeType":"YulFunctionCall","src":"1126:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:14"},"nodeType":"YulFunctionCall","src":"1122:32:14"},"nodeType":"YulIf","src":"1119:52:14"},{"nodeType":"YulVariableDeclaration","src":"1180:30:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:14"},"nodeType":"YulFunctionCall","src":"1194:16:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:14","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:14"},"nodeType":"YulFunctionCall","src":"1233:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:14"},"nodeType":"YulFunctionCall","src":"1229:18:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:14"},"nodeType":"YulFunctionCall","src":"1276:12:14"},"nodeType":"YulExpressionStatement","src":"1276:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:14"},"nodeType":"YulFunctionCall","src":"1259:14:14"},"nodeType":"YulIf","src":"1256:34:14"},{"nodeType":"YulAssignment","src":"1299:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:14"},"nodeType":"YulFunctionCall","src":"1338:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:14"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:14"},"nodeType":"YulFunctionCall","src":"1309:61:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:14"},"nodeType":"YulFunctionCall","src":"1401:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:14"},"nodeType":"YulFunctionCall","src":"1395:25:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:14"},"nodeType":"YulFunctionCall","src":"1451:12:14"},"nodeType":"YulExpressionStatement","src":"1451:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:14"},"nodeType":"YulFunctionCall","src":"1432:16:14"},"nodeType":"YulIf","src":"1429:36:14"},{"nodeType":"YulAssignment","src":"1474:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:14"},"nodeType":"YulFunctionCall","src":"1513:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:14"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:14"},"nodeType":"YulFunctionCall","src":"1484:63:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:14"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:14","type":""}],"src":"991:562:14"},{"body":{"nodeType":"YulBlock","src":"1613:325:14","statements":[{"nodeType":"YulAssignment","src":"1623:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:14"},"nodeType":"YulFunctionCall","src":"1633:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:14"},"nodeType":"YulFunctionCall","src":"1680:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:14","statements":[{"nodeType":"YulAssignment","src":"1733:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:14"},"nodeType":"YulFunctionCall","src":"1743:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:14"},"nodeType":"YulFunctionCall","src":"1704:26:14"},"nodeType":"YulIf","src":"1701:61:14"},{"body":{"nodeType":"YulBlock","src":"1821:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:14"},"nodeType":"YulFunctionCall","src":"1845:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:14"},"nodeType":"YulFunctionCall","src":"1835:31:14"},"nodeType":"YulExpressionStatement","src":"1835:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:14"},"nodeType":"YulFunctionCall","src":"1879:15:14"},"nodeType":"YulExpressionStatement","src":"1879:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:14"},"nodeType":"YulFunctionCall","src":"1907:15:14"},"nodeType":"YulExpressionStatement","src":"1907:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:14"},"nodeType":"YulFunctionCall","src":"1797:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:14"},"nodeType":"YulFunctionCall","src":"1774:38:14"},"nodeType":"YulIf","src":"1771:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:14","type":""}],"src":"1558:380:14"},{"body":{"nodeType":"YulBlock","src":"1999:65:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:14","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:14"},"nodeType":"YulFunctionCall","src":"2009:14:14"},"nodeType":"YulExpressionStatement","src":"2009:14:14"},{"nodeType":"YulAssignment","src":"2032:26:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:14"},"nodeType":"YulFunctionCall","src":"2040:18:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:14"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:14","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:14","type":""}],"src":"1943:121:14"},{"body":{"nodeType":"YulBlock","src":"2150:464:14","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:14","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:14","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:14"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:14"},"nodeType":"YulFunctionCall","src":"2221:17:14"},"nodeType":"YulExpressionStatement","src":"2221:17:14"},{"nodeType":"YulVariableDeclaration","src":"2251:31:14","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:14"},"nodeType":"YulFunctionCall","src":"2263:19:14"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:14","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:14"},"nodeType":"YulFunctionCall","src":"2331:19:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:14"},"nodeType":"YulFunctionCall","src":"2324:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:14"},"nodeType":"YulFunctionCall","src":"2314:38:14"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:14","statements":[{"nodeType":"YulAssignment","src":"2391:19:14","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:14"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:14","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:14"},"nodeType":"YulFunctionCall","src":"2368:20:14"},"nodeType":"YulIf","src":"2365:47:14"},{"nodeType":"YulVariableDeclaration","src":"2425:41:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:14","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:14"},"nodeType":"YulFunctionCall","src":"2452:12:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:14"},"nodeType":"YulFunctionCall","src":"2445:20:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:14"},"nodeType":"YulFunctionCall","src":"2435:31:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:14","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:14"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:14","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:14"},"nodeType":"YulFunctionCall","src":"2579:17:14"},"nodeType":"YulExpressionStatement","src":"2579:17:14"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:14"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:14"},"nodeType":"YulFunctionCall","src":"2524:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:14","statements":[{"nodeType":"YulAssignment","src":"2540:22:14","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:14"},"nodeType":"YulFunctionCall","src":"2549:13:14"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:14"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:14","statements":[]},"src":"2516:82:14"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:14"},"nodeType":"YulFunctionCall","src":"2163:11:14"},"nodeType":"YulIf","src":"2160:448:14"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:14","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:14","type":""}],"src":"2069:545:14"},{"body":{"nodeType":"YulBlock","src":"2704:81:14","statements":[{"nodeType":"YulAssignment","src":"2714:65:14","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:14"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:14","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:14"},"nodeType":"YulFunctionCall","src":"2743:11:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:14"},"nodeType":"YulFunctionCall","src":"2756:6:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:14"},"nodeType":"YulFunctionCall","src":"2739:24:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:14"},"nodeType":"YulFunctionCall","src":"2735:29:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:14"},"nodeType":"YulFunctionCall","src":"2725:40:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:14","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:14"},"nodeType":"YulFunctionCall","src":"2767:11:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:14"},"nodeType":"YulFunctionCall","src":"2722:57:14"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:14","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:14","type":""}],"src":"2619:166:14"},{"body":{"nodeType":"YulBlock","src":"2886:1256:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:14"},"nodeType":"YulFunctionCall","src":"2910:10:14"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:14"},"nodeType":"YulFunctionCall","src":"2965:18:14"},"nodeType":"YulExpressionStatement","src":"2965:18:14"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:14","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:14"},"nodeType":"YulFunctionCall","src":"2947:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:14"},"nodeType":"YulFunctionCall","src":"2943:18:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:14"},"nodeType":"YulFunctionCall","src":"2932:30:14"},"nodeType":"YulIf","src":"2929:56:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:14"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:14"},"nodeType":"YulFunctionCall","src":"3070:11:14"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:14"},"nodeType":"YulFunctionCall","src":"3044:38:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:14"},"nodeType":"YulFunctionCall","src":"2994:97:14"},"nodeType":"YulExpressionStatement","src":"2994:97:14"},{"nodeType":"YulVariableDeclaration","src":"3100:18:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:14","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:14","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:14","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:14"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:14","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:14"},"nodeType":"YulFunctionCall","src":"3270:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:14"},"nodeType":"YulFunctionCall","src":"3258:20:14"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:14","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:14"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:14"},"nodeType":"YulFunctionCall","src":"3305:35:14"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:14"},"nodeType":"YulFunctionCall","src":"3479:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:14"},"nodeType":"YulFunctionCall","src":"3473:26:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:14"},"nodeType":"YulFunctionCall","src":"3458:42:14"},"nodeType":"YulExpressionStatement","src":"3458:42:14"},{"nodeType":"YulAssignment","src":"3517:24:14","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:14"},"nodeType":"YulFunctionCall","src":"3527:14:14"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:14"}]},{"nodeType":"YulAssignment","src":"3558:40:14","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:14"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:14"},"nodeType":"YulFunctionCall","src":"3571:27:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:14"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:14"},"nodeType":"YulFunctionCall","src":"3384:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:14","statements":[{"nodeType":"YulAssignment","src":"3401:24:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:14"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:14"},"nodeType":"YulFunctionCall","src":"3406:19:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:14","statements":[]},"src":"3376:236:14"},{"body":{"nodeType":"YulBlock","src":"3660:166:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:14"},"nodeType":"YulFunctionCall","src":"3701:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:14"},"nodeType":"YulFunctionCall","src":"3695:26:14"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:14"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:14"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:14","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:14"},"nodeType":"YulFunctionCall","src":"3780:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:14","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:14"},"nodeType":"YulFunctionCall","src":"3776:24:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:14"},"nodeType":"YulFunctionCall","src":"3802:6:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:14"},"nodeType":"YulFunctionCall","src":"3772:37:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:14"},"nodeType":"YulFunctionCall","src":"3768:42:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:14"},"nodeType":"YulFunctionCall","src":"3753:58:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:14"},"nodeType":"YulFunctionCall","src":"3738:74:14"},"nodeType":"YulExpressionStatement","src":"3738:74:14"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:14"},"nodeType":"YulFunctionCall","src":"3628:19:14"},"nodeType":"YulIf","src":"3625:201:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:14","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:14"},"nodeType":"YulFunctionCall","src":"3856:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:14"},"nodeType":"YulFunctionCall","src":"3852:22:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:14"},"nodeType":"YulFunctionCall","src":"3839:36:14"},"nodeType":"YulExpressionStatement","src":"3839:36:14"}]},"nodeType":"YulCase","src":"3222:663:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:14","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:14","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:14","statements":[{"nodeType":"YulAssignment","src":"3983:35:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:14"},"nodeType":"YulFunctionCall","src":"3998:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:14"},"nodeType":"YulFunctionCall","src":"3992:26:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:14"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:14"},"nodeType":"YulIf","src":"3943:89:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:14"},"nodeType":"YulFunctionCall","src":"4058:67:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:14"},"nodeType":"YulFunctionCall","src":"4045:81:14"},"nodeType":"YulExpressionStatement","src":"4045:81:14"}]},"nodeType":"YulCase","src":"3894:242:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:14"},"nodeType":"YulFunctionCall","src":"3199:14:14"},"nodeType":"YulSwitch","src":"3192:944:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:14","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:14","type":""}],"src":"2790:1352:14"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220bac59eeb3543e5002997b48be41a82cd83282235ecb34b5a62801d41d5004d3064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xC5 SWAP15 0xEB CALLDATALOAD NUMBER 0xE5 STOP 0x29 SWAP8 0xB4 DUP12 0xE4 BYTE DUP3 0xCD DUP4 0x28 0x22 CALLDATALOAD 0xEC 0xB3 0x4B GAS PUSH3 0x801D41 0xD5 STOP 0x4D ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1401:11610:2:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:5;:13;2050:5;2042;:13;:::i;:::-;-1:-1:-1;2065:7:2;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;1401:11610;;14:127:14;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:14;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:14;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:14:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:14;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:14;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:14;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:14;;;3992:26;3943:89;-1:-1:-1;;2747:1:14;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:14;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:14;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:14;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:14:o;:::-;1401:11610:2;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_752":{"entryPoint":null,"id":752,"parameterSlots":3,"returnSlots":0},"@_approve_687":{"entryPoint":858,"id":687,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_741":{"entryPoint":null,"id":741,"parameterSlots":3,"returnSlots":0},"@_msgSender_868":{"entryPoint":null,"id":868,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_730":{"entryPoint":1150,"id":730,"parameterSlots":3,"returnSlots":0},"@_transfer_513":{"entryPoint":1272,"id":513,"parameterSlots":3,"returnSlots":0},"@allowance_308":{"entryPoint":815,"id":308,"parameterSlots":2,"returnSlots":1},"@approve_333":{"entryPoint":562,"id":333,"parameterSlots":2,"returnSlots":1},"@balanceOf_265":{"entryPoint":null,"id":265,"parameterSlots":1,"returnSlots":1},"@decimals_241":{"entryPoint":null,"id":241,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_436":{"entryPoint":673,"id":436,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_395":{"entryPoint":624,"id":395,"parameterSlots":2,"returnSlots":1},"@name_221":{"entryPoint":416,"id":221,"parameterSlots":0,"returnSlots":1},"@symbol_231":{"entryPoint":658,"id":231,"parameterSlots":0,"returnSlots":1},"@totalSupply_251":{"entryPoint":null,"id":251,"parameterSlots":0,"returnSlots":1},"@transferFrom_366":{"entryPoint":588,"id":366,"parameterSlots":3,"returnSlots":1},"@transfer_290":{"entryPoint":801,"id":290,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1770,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1934,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1840,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1798,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2043,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1985,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5754:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:14","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:14"},"nodeType":"YulFunctionCall","src":"166:21:14"},"nodeType":"YulExpressionStatement","src":"166:21:14"},{"nodeType":"YulVariableDeclaration","src":"196:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:14"},"nodeType":"YulFunctionCall","src":"210:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:14"},"nodeType":"YulFunctionCall","src":"239:18:14"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:14"},"nodeType":"YulFunctionCall","src":"232:34:14"},"nodeType":"YulExpressionStatement","src":"232:34:14"},{"nodeType":"YulVariableDeclaration","src":"275:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:14"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:14"},"nodeType":"YulFunctionCall","src":"369:17:14"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:14"},"nodeType":"YulFunctionCall","src":"365:26:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:14"},"nodeType":"YulFunctionCall","src":"403:14:14"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:14"},"nodeType":"YulFunctionCall","src":"399:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:14"},"nodeType":"YulFunctionCall","src":"393:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:14"},"nodeType":"YulFunctionCall","src":"358:66:14"},"nodeType":"YulExpressionStatement","src":"358:66:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:14"},"nodeType":"YulFunctionCall","src":"302:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:14","statements":[{"nodeType":"YulAssignment","src":"318:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:14"},"nodeType":"YulFunctionCall","src":"323:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:14","statements":[]},"src":"294:140:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:14"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:14"},"nodeType":"YulFunctionCall","src":"454:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:14"},"nodeType":"YulFunctionCall","src":"450:31:14"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:14"},"nodeType":"YulFunctionCall","src":"443:42:14"},"nodeType":"YulExpressionStatement","src":"443:42:14"},{"nodeType":"YulAssignment","src":"494:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:14"},"nodeType":"YulFunctionCall","src":"525:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:14"},"nodeType":"YulFunctionCall","src":"542:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:14"},"nodeType":"YulFunctionCall","src":"521:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:14"},"nodeType":"YulFunctionCall","src":"506:45:14"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:14"},"nodeType":"YulFunctionCall","src":"502:54:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:14","type":""}],"src":"14:548:14"},{"body":{"nodeType":"YulBlock","src":"616:124:14","statements":[{"nodeType":"YulAssignment","src":"626:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:14"},"nodeType":"YulFunctionCall","src":"635:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:14"}]},{"body":{"nodeType":"YulBlock","src":"718:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:14"},"nodeType":"YulFunctionCall","src":"720:12:14"},"nodeType":"YulExpressionStatement","src":"720:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:14"},"nodeType":"YulFunctionCall","src":"699:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:14"},"nodeType":"YulFunctionCall","src":"695:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:14"},"nodeType":"YulFunctionCall","src":"684:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:14"},"nodeType":"YulFunctionCall","src":"674:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:14"},"nodeType":"YulFunctionCall","src":"667:50:14"},"nodeType":"YulIf","src":"664:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:14","type":""}],"src":"567:173:14"},{"body":{"nodeType":"YulBlock","src":"832:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:14"},"nodeType":"YulFunctionCall","src":"880:12:14"},"nodeType":"YulExpressionStatement","src":"880:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:14"},"nodeType":"YulFunctionCall","src":"849:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:14"},"nodeType":"YulFunctionCall","src":"845:32:14"},"nodeType":"YulIf","src":"842:52:14"},{"nodeType":"YulAssignment","src":"903:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:14"},"nodeType":"YulFunctionCall","src":"913:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:14"}]},{"nodeType":"YulAssignment","src":"951:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:14"},"nodeType":"YulFunctionCall","src":"974:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:14"},"nodeType":"YulFunctionCall","src":"961:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:14","type":""}],"src":"745:254:14"},{"body":{"nodeType":"YulBlock","src":"1099:92:14","statements":[{"nodeType":"YulAssignment","src":"1109:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:14"},"nodeType":"YulFunctionCall","src":"1117:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:14"},"nodeType":"YulFunctionCall","src":"1169:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:14"},"nodeType":"YulFunctionCall","src":"1162:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:14"},"nodeType":"YulFunctionCall","src":"1144:41:14"},"nodeType":"YulExpressionStatement","src":"1144:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:14","type":""}],"src":"1004:187:14"},{"body":{"nodeType":"YulBlock","src":"1297:76:14","statements":[{"nodeType":"YulAssignment","src":"1307:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:14"},"nodeType":"YulFunctionCall","src":"1315:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:14"},"nodeType":"YulFunctionCall","src":"1342:25:14"},"nodeType":"YulExpressionStatement","src":"1342:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:14","type":""}],"src":"1196:177:14"},{"body":{"nodeType":"YulBlock","src":"1482:224:14","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:14"},"nodeType":"YulFunctionCall","src":"1530:12:14"},"nodeType":"YulExpressionStatement","src":"1530:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:14"},"nodeType":"YulFunctionCall","src":"1499:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:14"},"nodeType":"YulFunctionCall","src":"1495:32:14"},"nodeType":"YulIf","src":"1492:52:14"},{"nodeType":"YulAssignment","src":"1553:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:14"},"nodeType":"YulFunctionCall","src":"1563:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:14"}]},{"nodeType":"YulAssignment","src":"1601:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:14"},"nodeType":"YulFunctionCall","src":"1630:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:14"},"nodeType":"YulFunctionCall","src":"1611:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:14"}]},{"nodeType":"YulAssignment","src":"1658:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:14"},"nodeType":"YulFunctionCall","src":"1681:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:14"},"nodeType":"YulFunctionCall","src":"1668:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:14","type":""}],"src":"1378:328:14"},{"body":{"nodeType":"YulBlock","src":"1808:87:14","statements":[{"nodeType":"YulAssignment","src":"1818:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:14"},"nodeType":"YulFunctionCall","src":"1826:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:14"},"nodeType":"YulFunctionCall","src":"1871:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:14"},"nodeType":"YulFunctionCall","src":"1853:36:14"},"nodeType":"YulExpressionStatement","src":"1853:36:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:14","type":""}],"src":"1711:184:14"},{"body":{"nodeType":"YulBlock","src":"1970:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:14"},"nodeType":"YulFunctionCall","src":"2018:12:14"},"nodeType":"YulExpressionStatement","src":"2018:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:14"},"nodeType":"YulFunctionCall","src":"1987:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:14"},"nodeType":"YulFunctionCall","src":"1983:32:14"},"nodeType":"YulIf","src":"1980:52:14"},{"nodeType":"YulAssignment","src":"2041:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:14"},"nodeType":"YulFunctionCall","src":"2051:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:14","type":""}],"src":"1900:186:14"},{"body":{"nodeType":"YulBlock","src":"2178:173:14","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:14"},"nodeType":"YulFunctionCall","src":"2226:12:14"},"nodeType":"YulExpressionStatement","src":"2226:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:14"},"nodeType":"YulFunctionCall","src":"2195:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:14"},"nodeType":"YulFunctionCall","src":"2191:32:14"},"nodeType":"YulIf","src":"2188:52:14"},{"nodeType":"YulAssignment","src":"2249:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:14"},"nodeType":"YulFunctionCall","src":"2259:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:14"}]},{"nodeType":"YulAssignment","src":"2297:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:14"},"nodeType":"YulFunctionCall","src":"2326:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:14"},"nodeType":"YulFunctionCall","src":"2307:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:14","type":""}],"src":"2091:260:14"},{"body":{"nodeType":"YulBlock","src":"2411:325:14","statements":[{"nodeType":"YulAssignment","src":"2421:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:14"},"nodeType":"YulFunctionCall","src":"2431:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:14"},"nodeType":"YulFunctionCall","src":"2478:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:14","statements":[{"nodeType":"YulAssignment","src":"2531:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:14"},"nodeType":"YulFunctionCall","src":"2541:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:14"},"nodeType":"YulFunctionCall","src":"2502:26:14"},"nodeType":"YulIf","src":"2499:61:14"},{"body":{"nodeType":"YulBlock","src":"2619:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:14"},"nodeType":"YulFunctionCall","src":"2643:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:14"},"nodeType":"YulFunctionCall","src":"2633:31:14"},"nodeType":"YulExpressionStatement","src":"2633:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:14"},"nodeType":"YulFunctionCall","src":"2677:15:14"},"nodeType":"YulExpressionStatement","src":"2677:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:14"},"nodeType":"YulFunctionCall","src":"2705:15:14"},"nodeType":"YulExpressionStatement","src":"2705:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:14"},"nodeType":"YulFunctionCall","src":"2595:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:14"},"nodeType":"YulFunctionCall","src":"2572:38:14"},"nodeType":"YulIf","src":"2569:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:14","type":""}],"src":"2356:380:14"},{"body":{"nodeType":"YulBlock","src":"2789:174:14","statements":[{"nodeType":"YulAssignment","src":"2799:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:14"},"nodeType":"YulFunctionCall","src":"2806:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:14"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:14"},"nodeType":"YulFunctionCall","src":"2870:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:14"},"nodeType":"YulFunctionCall","src":"2860:31:14"},"nodeType":"YulExpressionStatement","src":"2860:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:14"},"nodeType":"YulFunctionCall","src":"2904:15:14"},"nodeType":"YulExpressionStatement","src":"2904:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:14"},"nodeType":"YulFunctionCall","src":"2932:15:14"},"nodeType":"YulExpressionStatement","src":"2932:15:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:14"},"nodeType":"YulFunctionCall","src":"2827:10:14"},"nodeType":"YulIf","src":"2824:133:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:14","type":""}],"src":"2741:222:14"},{"body":{"nodeType":"YulBlock","src":"3142:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:14"},"nodeType":"YulFunctionCall","src":"3152:21:14"},"nodeType":"YulExpressionStatement","src":"3152:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:14"},"nodeType":"YulFunctionCall","src":"3189:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:14"},"nodeType":"YulFunctionCall","src":"3182:30:14"},"nodeType":"YulExpressionStatement","src":"3182:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:14"},"nodeType":"YulFunctionCall","src":"3228:18:14"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:14","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:14"},"nodeType":"YulFunctionCall","src":"3221:62:14"},"nodeType":"YulExpressionStatement","src":"3221:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:14"},"nodeType":"YulFunctionCall","src":"3299:18:14"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:14","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:14"},"nodeType":"YulFunctionCall","src":"3292:35:14"},"nodeType":"YulExpressionStatement","src":"3292:35:14"},{"nodeType":"YulAssignment","src":"3336:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:14"},"nodeType":"YulFunctionCall","src":"3344:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:14","type":""}],"src":"2968:401:14"},{"body":{"nodeType":"YulBlock","src":"3548:226:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:14"},"nodeType":"YulFunctionCall","src":"3558:21:14"},"nodeType":"YulExpressionStatement","src":"3558:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:14"},"nodeType":"YulFunctionCall","src":"3595:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:14","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:14"},"nodeType":"YulFunctionCall","src":"3588:30:14"},"nodeType":"YulExpressionStatement","src":"3588:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:14"},"nodeType":"YulFunctionCall","src":"3634:18:14"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:14","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:14"},"nodeType":"YulFunctionCall","src":"3627:62:14"},"nodeType":"YulExpressionStatement","src":"3627:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:14"},"nodeType":"YulFunctionCall","src":"3705:18:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:14"},"nodeType":"YulFunctionCall","src":"3698:34:14"},"nodeType":"YulExpressionStatement","src":"3698:34:14"},{"nodeType":"YulAssignment","src":"3741:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:14"},"nodeType":"YulFunctionCall","src":"3749:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:14","type":""}],"src":"3374:400:14"},{"body":{"nodeType":"YulBlock","src":"3953:224:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:14"},"nodeType":"YulFunctionCall","src":"3963:21:14"},"nodeType":"YulExpressionStatement","src":"3963:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:14"},"nodeType":"YulFunctionCall","src":"4000:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:14","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:14"},"nodeType":"YulFunctionCall","src":"3993:30:14"},"nodeType":"YulExpressionStatement","src":"3993:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:14"},"nodeType":"YulFunctionCall","src":"4039:18:14"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:14","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:14"},"nodeType":"YulFunctionCall","src":"4032:62:14"},"nodeType":"YulExpressionStatement","src":"4032:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:14"},"nodeType":"YulFunctionCall","src":"4110:18:14"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:14","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:14"},"nodeType":"YulFunctionCall","src":"4103:32:14"},"nodeType":"YulExpressionStatement","src":"4103:32:14"},{"nodeType":"YulAssignment","src":"4144:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:14"},"nodeType":"YulFunctionCall","src":"4152:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:14","type":""}],"src":"3779:398:14"},{"body":{"nodeType":"YulBlock","src":"4356:179:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:14"},"nodeType":"YulFunctionCall","src":"4366:21:14"},"nodeType":"YulExpressionStatement","src":"4366:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:14"},"nodeType":"YulFunctionCall","src":"4403:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:14","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:14"},"nodeType":"YulFunctionCall","src":"4396:30:14"},"nodeType":"YulExpressionStatement","src":"4396:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:14"},"nodeType":"YulFunctionCall","src":"4442:18:14"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:14","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:14"},"nodeType":"YulFunctionCall","src":"4435:59:14"},"nodeType":"YulExpressionStatement","src":"4435:59:14"},{"nodeType":"YulAssignment","src":"4503:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:14"},"nodeType":"YulFunctionCall","src":"4511:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:14","type":""}],"src":"4182:353:14"},{"body":{"nodeType":"YulBlock","src":"4714:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:14"},"nodeType":"YulFunctionCall","src":"4724:21:14"},"nodeType":"YulExpressionStatement","src":"4724:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:14"},"nodeType":"YulFunctionCall","src":"4761:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:14"},"nodeType":"YulFunctionCall","src":"4754:30:14"},"nodeType":"YulExpressionStatement","src":"4754:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:14"},"nodeType":"YulFunctionCall","src":"4800:18:14"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:14","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:14"},"nodeType":"YulFunctionCall","src":"4793:62:14"},"nodeType":"YulExpressionStatement","src":"4793:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:14"},"nodeType":"YulFunctionCall","src":"4871:18:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:14"},"nodeType":"YulFunctionCall","src":"4864:35:14"},"nodeType":"YulExpressionStatement","src":"4864:35:14"},{"nodeType":"YulAssignment","src":"4908:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:14"},"nodeType":"YulFunctionCall","src":"4916:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:14","type":""}],"src":"4540:401:14"},{"body":{"nodeType":"YulBlock","src":"5120:225:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:14"},"nodeType":"YulFunctionCall","src":"5130:21:14"},"nodeType":"YulExpressionStatement","src":"5130:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:14"},"nodeType":"YulFunctionCall","src":"5167:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:14","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:14"},"nodeType":"YulFunctionCall","src":"5160:30:14"},"nodeType":"YulExpressionStatement","src":"5160:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:14"},"nodeType":"YulFunctionCall","src":"5206:18:14"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:14","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:14"},"nodeType":"YulFunctionCall","src":"5199:62:14"},"nodeType":"YulExpressionStatement","src":"5199:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:14"},"nodeType":"YulFunctionCall","src":"5277:18:14"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:14","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:14"},"nodeType":"YulFunctionCall","src":"5270:33:14"},"nodeType":"YulExpressionStatement","src":"5270:33:14"},{"nodeType":"YulAssignment","src":"5312:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:14"},"nodeType":"YulFunctionCall","src":"5320:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:14","type":""}],"src":"4946:399:14"},{"body":{"nodeType":"YulBlock","src":"5524:228:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:14"},"nodeType":"YulFunctionCall","src":"5534:21:14"},"nodeType":"YulExpressionStatement","src":"5534:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:14"},"nodeType":"YulFunctionCall","src":"5571:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:14","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:14"},"nodeType":"YulFunctionCall","src":"5564:30:14"},"nodeType":"YulExpressionStatement","src":"5564:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:14"},"nodeType":"YulFunctionCall","src":"5610:18:14"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:14","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:14"},"nodeType":"YulFunctionCall","src":"5603:62:14"},"nodeType":"YulExpressionStatement","src":"5603:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:14"},"nodeType":"YulFunctionCall","src":"5681:18:14"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:14","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:14"},"nodeType":"YulFunctionCall","src":"5674:36:14"},"nodeType":"YulExpressionStatement","src":"5674:36:14"},{"nodeType":"YulAssignment","src":"5719:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:14"},"nodeType":"YulFunctionCall","src":"5727:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:14","type":""}],"src":"5350:402:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220bac59eeb3543e5002997b48be41a82cd83282235ecb34b5a62801d41d5004d3064736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xC5 SWAP15 0xEB CALLDATALOAD NUMBER 0xE5 STOP 0x29 SWAP8 0xB4 DUP12 0xE4 BYTE DUP3 0xCD DUP4 0x28 0x22 CALLDATALOAD 0xEC 0xB3 0x4B GAS PUSH3 0x801D41 0xD5 STOP 0x4D ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1401:11610:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:14;;1162:22;1144:41;;1132:2;1117:18;4431:197:2;1004:187:14;3242:106:2;3329:12;;3242:106;;;1342:25:14;;;1330:2;1315:18;3242:106:2;1196:177:14;5190:286:2;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1853:36:14;;1841:2;1826:18;3091:91:2;1711:184:14;5871:234:2;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:2;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:5;4568:32:2;719:10:5;4584:7:2;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:5;5373:38:2;5389:4;719:10:5;5404:6:2;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:2;;5190:286;-1:-1:-1;;;;5190:286:2:o;5871:234::-;5959:4;719:10:5;6013:64:2;719:10:5;6029:7:2;6066:10;6038:25;719:10:5;6029:7:2;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:5;6685:4:2;6766:25;719:10:5;6783:7:2;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:2;;3170:2:14;6801:85:2;;;3152:21:14;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:14;;;3292:35;3344:19;;6801:85:2;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:5;3860:28:2;719:10:5;3877:2:2;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:2;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:2;;10627:68;;;;-1:-1:-1;;;10627:68:2;;3576:2:14;10627:68:2;;;3558:21:14;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:14;;;3698:34;3749:19;;10627:68:2;3374:400:14;10627:68:2;-1:-1:-1;;;;;10713:21:2;;10705:68;;;;-1:-1:-1;;;10705:68:2;;3981:2:14;10705:68:2;;;3963:21:14;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:14;;;4103:32;4152:19;;10705:68:2;3779:398:14;10705:68:2;-1:-1:-1;;;;;10784:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1342:25:14;;;10835:32:2;;1315:18:14;10835:32:2;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:2;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:2;;4384:2:14;11404:68:2;;;4366:21:14;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11404:68:2;4182:353:14;11404:68:2;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:2;;7591:68;;;;-1:-1:-1;;;7591:68:2;;4742:2:14;7591:68:2;;;4724:21:14;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:14;;;4864:35;4916:19;;7591:68:2;4540:401:14;7591:68:2;-1:-1:-1;;;;;7677:16:2;;7669:64;;;;-1:-1:-1;;;7669:64:2;;5148:2:14;7669:64:2;;;5130:21:14;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:14;;;5270:33;5320:19;;7669:64:2;4946:399:14;7669:64:2;-1:-1:-1;;;;;7815:15:2;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:2;;5552:2:14;7840:72:2;;;5534:21:14;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:14;;;5674:36;5727:19;;7840:72:2;5350:402:14;7840:72:2;-1:-1:-1;;;;;7946:15:2;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1342:25:14;;;8161:13:2;;8210:26;;1315:18:14;8210:26:2;;;;;;;8247:37;12180:121;14:548:14;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:14;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:14:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:14:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"426000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24628","balanceOf(address)":"2562","decimals()":"266","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51138","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":182,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":188,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":190,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":192,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":194,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/GMX_controller.sol":{"GMX_controller":{"abi":[{"inputs":[{"internalType":"address","name":"_vault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"GMXexecutionFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"bool","name":"isLong","type":"bool"}],"name":"decreasePosition","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getGMXexecutionFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVaultOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gmxPositionRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gmxRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gmxVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"bool","name":"isLong","type":"bool"}],"name":"increasePosition","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bool","name":"isLong","type":"bool"}],"name":"liquidatePosition","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFees","type":"uint256"}],"name":"setGMXexecutionFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"setVaultOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Victor Gillibert","custom:experimental":"This is an experimental contract.","details":"Improvement to do :Allow not only USDC and create functions to handle tokens authorized Allow to modify leverage See if oracle price works better on mainnet","kind":"dev","methods":{"decreasePosition(address,uint256,bool)":{"details":"USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();","params":{"_to":"receiver of the funds ","isLong":"true for Long, False for Short","tokenAmount":"amount to withdraw in USDC [10**6]"}},"increasePosition(uint256,bool)":{"details":"USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();","params":{"isLong":"true for Long, False for Short","tokenAmount":"amount to withdraw in USDC [10**6]"}},"liquidatePosition(bool)":{"details":"USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();","params":{"isLong":"true for Long, False for Short"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network ","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1078":{"entryPoint":null,"id":1078,"parameterSlots":1,"returnSlots":0},"@_2463":{"entryPoint":null,"id":2463,"parameterSlots":0,"returnSlots":0},"@_msgSender_3283":{"entryPoint":null,"id":3283,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_2551":{"entryPoint":480,"id":2551,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":560,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:703:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:14","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:14"},"nodeType":"YulFunctionCall","src":"143:12:14"},"nodeType":"YulExpressionStatement","src":"143:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:14"},"nodeType":"YulFunctionCall","src":"112:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:14"},"nodeType":"YulFunctionCall","src":"108:32:14"},"nodeType":"YulIf","src":"105:52:14"},{"nodeType":"YulVariableDeclaration","src":"166:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:14"},"nodeType":"YulFunctionCall","src":"179:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:14"},"nodeType":"YulFunctionCall","src":"260:12:14"},"nodeType":"YulExpressionStatement","src":"260:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:14"},"nodeType":"YulFunctionCall","src":"239:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:14"},"nodeType":"YulFunctionCall","src":"235:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:14"},"nodeType":"YulFunctionCall","src":"224:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:14"},"nodeType":"YulFunctionCall","src":"214:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:14"},"nodeType":"YulFunctionCall","src":"207:50:14"},"nodeType":"YulIf","src":"204:70:14"},{"nodeType":"YulAssignment","src":"283:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:14"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:14","type":""}],"src":"14:290:14"},{"body":{"nodeType":"YulBlock","src":"410:102:14","statements":[{"nodeType":"YulAssignment","src":"420:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"432:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"443:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:14"},"nodeType":"YulFunctionCall","src":"428:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"420:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"493:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"498:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"489:3:14"},"nodeType":"YulFunctionCall","src":"489:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"502:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"485:3:14"},"nodeType":"YulFunctionCall","src":"485:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"473:3:14"},"nodeType":"YulFunctionCall","src":"473:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"455:6:14"},"nodeType":"YulFunctionCall","src":"455:51:14"},"nodeType":"YulExpressionStatement","src":"455:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"379:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"390:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"401:4:14","type":""}],"src":"309:203:14"},{"body":{"nodeType":"YulBlock","src":"598:103:14","statements":[{"body":{"nodeType":"YulBlock","src":"644:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"653:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"656:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"646:6:14"},"nodeType":"YulFunctionCall","src":"646:12:14"},"nodeType":"YulExpressionStatement","src":"646:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"619:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"628:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"615:3:14"},"nodeType":"YulFunctionCall","src":"615:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"640:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"611:3:14"},"nodeType":"YulFunctionCall","src":"611:32:14"},"nodeType":"YulIf","src":"608:52:14"},{"nodeType":"YulAssignment","src":"669:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"685:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"679:5:14"},"nodeType":"YulFunctionCall","src":"679:16:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"669:6:14"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"564:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"575:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"587:6:14","type":""}],"src":"517:184:14"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052600180546001600160a01b031990811673489ee077994b6658eafa855c308275ead8097c4a1790915560028054821673abbc5f99639c9b6bcb58544ddf04efa6802f406417905560038054821673b87a436b93ffe9d75c5cfa7bacfff96430b098681790556004805482167382af49447d8a07e3bd95bd0d56f35241523fbab11790556005805490911673ff970a61a04b1ca14834a43f5de4533ebddb5cc8179055348015620000b357600080fd5b506040516200163738038062001637833981016040819052620000d69162000230565b620000e133620001e0565b600780546001600160a01b0319166001600160a01b03838116919091179091556002546003546040516338c74dd960e01b815290831660048201529116906338c74dd990602401600060405180830381600087803b1580156200014357600080fd5b505af115801562000158573d6000803e3d6000fd5b50505050600360009054906101000a90046001600160a01b03166001600160a01b03166363ae21036040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d6919062000262565b600655506200027c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200024357600080fd5b81516001600160a01b03811681146200025b57600080fd5b9392505050565b6000602082840312156200027557600080fd5b5051919050565b6113ab806200028c6000396000f3fe6080604052600436106100de5760003560e01c806389a302711161008557806389a30271146101c75780638da5cb5b146101e7578063a44ca34614610205578063ad5c464814610223578063b3b3453e14610243578063c5dac33b14610263578063c657e7c214610276578063f2fde38b14610296578063fbfa77cf146102b657600080fd5b80631c5ecc06146100e35780632c908916146100f8578063434c0c751461011c578063634e318014610132578063715018a61461015f57806379db7ef1146101745780637cb175971461019457806380b3631c146101a7575b600080fd5b6100f66100f136600461100b565b6102d6565b005b34801561010457600080fd5b506006545b6040519081526020015b60405180910390f35b34801561012857600080fd5b5061010960065481565b34801561013e57600080fd5b50600254610152906001600160a01b031681565b604051610113919061103b565b34801561016b57600080fd5b506100f661074b565b34801561018057600080fd5b506100f661018f36600461104f565b61075f565b6100f66101a2366004611068565b61076c565b3480156101b357600080fd5b506100f66101c23660046110a8565b610b23565b3480156101d357600080fd5b50600554610152906001600160a01b031681565b3480156101f357600080fd5b506000546001600160a01b0316610152565b34801561021157600080fd5b506007546001600160a01b0316610152565b34801561022f57600080fd5b50600454610152906001600160a01b031681565b34801561024f57600080fd5b50600154610152906001600160a01b031681565b6100f66102713660046110c3565b610b4d565b34801561028257600080fd5b50600354610152906001600160a01b031681565b3480156102a257600080fd5b506100f66102b13660046110a8565b610eda565b3480156102c257600080fd5b50600754610152906001600160a01b031681565b6007546001600160a01b031633146103095760405162461bcd60e51b815260040161030090611103565b60405180910390fd5b6005546007546040516323b872dd60e01b81526001600160a01b039182166004820152306024820152604481018590529116906323b872dd906064016020604051808303816000875af1158015610364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103889190611126565b5060055460025460405163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b3906044016020604051808303816000875af11580156103de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104029190611126565b506000606461041b8469d3c21bcecceda1000000611143565b61042690606e611143565b610430919061116e565b9050600082156105e457604080516002808252606082018352600092602083019080368337505060055482519293506001600160a01b03169183915060009061047b5761047b611190565b6001600160a01b0392831660209182029290920101526004548251911690829060019081106104ac576104ac611190565b6001600160a01b03928316602091820292909201015260015460048054604051637092736960e11b8152612710949384169363e124e6d2936104f293909116910161103b565b602060405180830381865afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053391906111a6565b61053f9061272e611143565b610549919061116e565b6003546004805460065460405163f2ae372f60e01b81529496506001600160a01b039384169463f2ae372f9434946105ac9489949216928d926000928d928f928e929091716d79726566657272616c4d6176696e69676960701b91879101611203565b6000604051808303818588803b1580156105c557600080fd5b505af11580156105d9573d6000803e3d6000fd5b505050505050610745565b60408051600180825281830190925260009160208083019080368337505060055482519293506001600160a01b03169183915060009061062657610626611190565b6001600160a01b039283166020918202929092010152600154600480546040516340d3096b60e11b815261271094938416936381a612d69361066c93909116910161103b565b602060405180830381865afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad91906111a6565b6106b9906126f2611143565b6106c3919061116e565b6003546004805460065460405163f2ae372f60e01b81529496506001600160a01b039384169463f2ae372f9434946107119489949216928d926000928d928f928e9290918691829101611203565b6000604051808303818588803b15801561072a57600080fd5b505af115801561073e573d6000803e3d6000fd5b5050505050505b50505050565b610753610f53565b61075d6000610fad565b565b610767610f53565b600655565b6007546001600160a01b031633146107965760405162461bcd60e51b815260040161030090611103565b600081156109bd57604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b0316918391506000906107df576107df611190565b6001600160a01b03928316602091820292909201015260055482519116908290600190811061081057610810611190565b6001600160a01b03928316602091820292909201015260015460048054604051634a3f088d60e01b815260009493841693634a3f088d9361085a93309392169182918b910161126e565b610100604051808303816000875af115801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190611298565b5050600154600480546040516340d3096b60e11b8152989950612710986001600160a01b0393841698506381a612d697506108e096509216935001905061103b565b602060405180830381865afa1580156108fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092191906111a6565b61092d906126f2611143565b610937919061116e565b60035460048054600654604051637be7d14160e01b81529497506001600160a01b0393841694637be7d141943494610985948a949216926000928a928e9233928f9287928391829101611302565b6000604051808303818588803b15801561099e57600080fd5b505af11580156109b2573d6000803e3d6000fd5b505050505050505050565b60408051600180825281830190925260009160208083019080368337505060055482519293506001600160a01b0316918391506000906109ff576109ff611190565b6001600160a01b03928316602091820292909201015260015460055460048054604051634a3f088d60e01b815260009594851694634a3f088d94610a509430949183169391909216918b910161126e565b610100604051808303816000875af1158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a949190611298565b505060015460048054604051637092736960e11b8152989950612710986001600160a01b03938416985063e124e6d29750610ad696509216935001905061103b565b602060405180830381865afa158015610af3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1791906111a6565b61092d9061272e611143565b610b2b610f53565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b03163314610b775760405162461bcd60e51b815260040161030090611103565b6000806064610b908569d3c21bcecceda1000000611143565b610b9b90606e611143565b610ba5919061116e565b90508215610d5a57604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b031691839150600090610bee57610bee611190565b6001600160a01b039283166020918202929092010152600554825191169082906001908110610c1f57610c1f611190565b6001600160a01b039283166020918202929092010152600154600480546040516340d3096b60e11b815261271094938416936381a612d693610c6593909116910161103b565b602060405180830381865afa158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca691906111a6565b610cb2906126f2611143565b610cbc919061116e565b6003546004549194506001600160a01b0390811691637be7d141913491859116610cf08a69d3c21bcecceda1000000611143565b878a8d8b60006006546000806040518d63ffffffff1660e01b8152600401610d229b9a99989796959493929190611302565b6000604051808303818588803b158015610d3b57600080fd5b505af1158015610d4f573d6000803e3d6000fd5b505050505050610ed3565b60408051600180825281830190925260009160208083019080368337505060055482519293506001600160a01b031691839150600090610d9c57610d9c611190565b6001600160a01b03928316602091820292909201015260015460048054604051637092736960e11b8152612710949384169363e124e6d293610de293909116910161103b565b602060405180830381865afa158015610dff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2391906111a6565b610e2f9061272e611143565b610e39919061116e565b6003546004549194506001600160a01b0390811691637be7d141913491859116610e6d8a69d3c21bcecceda1000000611143565b878a8d8b60006006546000806040518d63ffffffff1660e01b8152600401610e9f9b9a99989796959493929190611302565b6000604051808303818588803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b5050505050505b5050505050565b610ee2610f53565b6001600160a01b038116610f475760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610300565b610f5081610fad565b50565b6000546001600160a01b0316331461075d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610300565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8015158114610f5057600080fd5b6000806040838503121561101e57600080fd5b82359150602083013561103081610ffd565b809150509250929050565b6001600160a01b0391909116815260200190565b60006020828403121561106157600080fd5b5035919050565b60006020828403121561107a57600080fd5b813561108581610ffd565b9392505050565b80356001600160a01b03811681146110a357600080fd5b919050565b6000602082840312156110ba57600080fd5b6110858261108c565b6000806000606084860312156110d857600080fd5b6110e18461108c565b92506020840135915060408401356110f881610ffd565b809150509250925092565b602080825260099082015268139bdd081d985d5b1d60ba1b604082015260600190565b60006020828403121561113857600080fd5b815161108581610ffd565b808202811582820484141761116857634e487b7160e01b600052601160045260246000fd5b92915050565b60008261118b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156111b857600080fd5b5051919050565b600081518084526020808501945080840160005b838110156111f85781516001600160a01b0316875295820195908201906001016111d3565b509495945050505050565b60006101408083526112178184018e6111bf565b6001600160a01b039c8d166020850152604084019b909b5250506060810197909752608087019590955292151560a086015260c085019190915260e084015261010083015290921661012090920191909152919050565b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b600080600080600080600080610100898b0312156112b557600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c08901516112ea81610ffd565b8092505060e089015190509295985092959890939650565b60006101608083526113168184018f6111bf565b6001600160a01b039d8e166020850152604084019c909c5250506060810198909852951515608088015293881660a087015260c086019290925260e085015261010084015215156101208301529092166101409092019190915291905056fea2646970667358221220b9639155ef009ec2069a56a6030373215034f15cf89e2f9b99ebead0db4a9d9564736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x489EE077994B6658EAFA855C308275EAD8097C4A OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 AND PUSH20 0xABBC5F99639C9B6BCB58544DDF04EFA6802F4064 OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND PUSH20 0xB87A436B93FFE9D75C5CFA7BACFFF96430B09868 OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 AND PUSH20 0x82AF49447D8A07E3BD95BD0D56F35241523FBAB1 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xFF970A61A04B1CA14834A43F5DE4533EBDDB5CC8 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1637 CODESIZE SUB DUP1 PUSH3 0x1637 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0xD6 SWAP2 PUSH3 0x230 JUMP JUMPDEST PUSH3 0xE1 CALLER PUSH3 0x1E0 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x38C74DD9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x38C74DD9 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x158 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x63AE2103 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1D6 SWAP2 SWAP1 PUSH3 0x262 JUMP JUMPDEST PUSH1 0x6 SSTORE POP PUSH3 0x27C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AB DUP1 PUSH3 0x28C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89A30271 GT PUSH2 0x85 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xA44CA346 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xB3B3453E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xC5DAC33B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xC657E7C2 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C5ECC06 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x2C908916 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x434C0C75 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x634E3180 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x79DB7EF1 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x7CB17597 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x80B3631C EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF6 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x100B JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x74B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x104F JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST PUSH2 0xF6 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF6 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C3 JUMP JUMPDEST PUSH2 0xB4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0xEDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x364 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1126 JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1126 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x41B DUP5 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x426 SWAP1 PUSH1 0x6E PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x5 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x4 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x4AC JUMPI PUSH2 0x4AC PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70927369 PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0x2710 SWAP5 SWAP4 DUP5 AND SWAP4 PUSH4 0xE124E6D2 SWAP4 PUSH2 0x4F2 SWAP4 SWAP1 SWAP2 AND SWAP2 ADD PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x53F SWAP1 PUSH2 0x272E PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF2AE372F PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 PUSH4 0xF2AE372F SWAP5 CALLVALUE SWAP5 PUSH2 0x5AC SWAP5 DUP10 SWAP5 SWAP3 AND SWAP3 DUP14 SWAP3 PUSH1 0x0 SWAP3 DUP14 SWAP3 DUP16 SWAP3 DUP15 SWAP3 SWAP1 SWAP2 PUSH18 0x6D79726566657272616C4D6176696E696769 PUSH1 0x70 SHL SWAP2 DUP8 SWAP2 ADD PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x5 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x626 JUMPI PUSH2 0x626 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40D3096B PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0x2710 SWAP5 SWAP4 DUP5 AND SWAP4 PUSH4 0x81A612D6 SWAP4 PUSH2 0x66C SWAP4 SWAP1 SWAP2 AND SWAP2 ADD PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x689 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x6B9 SWAP1 PUSH2 0x26F2 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF2AE372F PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 PUSH4 0xF2AE372F SWAP5 CALLVALUE SWAP5 PUSH2 0x711 SWAP5 DUP10 SWAP5 SWAP3 AND SWAP3 DUP14 SWAP3 PUSH1 0x0 SWAP3 DUP14 SWAP3 DUP16 SWAP3 DUP15 SWAP3 SWAP1 SWAP2 DUP7 SWAP2 DUP3 SWAP2 ADD PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x753 PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x75D PUSH1 0x0 PUSH2 0xFAD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x767 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x9BD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x7DF JUMPI PUSH2 0x7DF PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x810 JUMPI PUSH2 0x810 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A3F088D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP5 SWAP4 DUP5 AND SWAP4 PUSH4 0x4A3F088D SWAP4 PUSH2 0x85A SWAP4 ADDRESS SWAP4 SWAP3 AND SWAP2 DUP3 SWAP2 DUP12 SWAP2 ADD PUSH2 0x126E JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x1298 JUMP JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40D3096B PUSH1 0xE1 SHL DUP2 MSTORE SWAP9 SWAP10 POP PUSH2 0x2710 SWAP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP9 POP PUSH4 0x81A612D6 SWAP8 POP PUSH2 0x8E0 SWAP7 POP SWAP3 AND SWAP4 POP ADD SWAP1 POP PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x92D SWAP1 PUSH2 0x26F2 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7BE7D141 PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 PUSH4 0x7BE7D141 SWAP5 CALLVALUE SWAP5 PUSH2 0x985 SWAP5 DUP11 SWAP5 SWAP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP11 SWAP3 DUP15 SWAP3 CALLER SWAP3 DUP16 SWAP3 DUP8 SWAP3 DUP4 SWAP2 DUP3 SWAP2 ADD PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x5 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A3F088D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP6 SWAP5 DUP6 AND SWAP5 PUSH4 0x4A3F088D SWAP5 PUSH2 0xA50 SWAP5 ADDRESS SWAP5 SWAP2 DUP4 AND SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 DUP12 SWAP2 ADD PUSH2 0x126E JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x1298 JUMP JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70927369 PUSH1 0xE1 SHL DUP2 MSTORE SWAP9 SWAP10 POP PUSH2 0x2710 SWAP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP9 POP PUSH4 0xE124E6D2 SWAP8 POP PUSH2 0xAD6 SWAP7 POP SWAP3 AND SWAP4 POP ADD SWAP1 POP PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB17 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x92D SWAP1 PUSH2 0x272E PUSH2 0x1143 JUMP JUMPDEST PUSH2 0xB2B PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH2 0xB90 DUP6 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0xB9B SWAP1 PUSH1 0x6E PUSH2 0x1143 JUMP JUMPDEST PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0xD5A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xBEE JUMPI PUSH2 0xBEE PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xC1F JUMPI PUSH2 0xC1F PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40D3096B PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0x2710 SWAP5 SWAP4 DUP5 AND SWAP4 PUSH4 0x81A612D6 SWAP4 PUSH2 0xC65 SWAP4 SWAP1 SWAP2 AND SWAP2 ADD PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0xCB2 SWAP1 PUSH2 0x26F2 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0x7BE7D141 SWAP2 CALLVALUE SWAP2 DUP6 SWAP2 AND PUSH2 0xCF0 DUP11 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1143 JUMP JUMPDEST DUP8 DUP11 DUP14 DUP12 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP14 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD22 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x5 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xD9C JUMPI PUSH2 0xD9C PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70927369 PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0x2710 SWAP5 SWAP4 DUP5 AND SWAP4 PUSH4 0xE124E6D2 SWAP4 PUSH2 0xDE2 SWAP4 SWAP1 SWAP2 AND SWAP2 ADD PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE23 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0xE2F SWAP1 PUSH2 0x272E PUSH2 0x1143 JUMP JUMPDEST PUSH2 0xE39 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0x7BE7D141 SWAP2 CALLVALUE SWAP2 DUP6 SWAP2 AND PUSH2 0xE6D DUP11 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1143 JUMP JUMPDEST DUP8 DUP11 DUP14 DUP12 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP14 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9F SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE2 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0xF50 DUP2 PUSH2 0xFAD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x101E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1030 DUP2 PUSH2 0xFFD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1061 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1085 DUP2 PUSH2 0xFFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1085 DUP3 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10E1 DUP5 PUSH2 0x108C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x10F8 DUP2 PUSH2 0xFFD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x139BDD081D985D5B1D PUSH1 0xBA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1085 DUP2 PUSH2 0xFFD JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1168 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F8 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11D3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x1217 DUP2 DUP5 ADD DUP15 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP3 ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 MLOAD SWAP8 POP PUSH1 0x20 DUP10 ADD MLOAD SWAP7 POP PUSH1 0x40 DUP10 ADD MLOAD SWAP6 POP PUSH1 0x60 DUP10 ADD MLOAD SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD MLOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD MLOAD PUSH2 0x12EA DUP2 PUSH2 0xFFD JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0xE0 DUP10 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP1 DUP4 MSTORE PUSH2 0x1316 DUP2 DUP5 ADD DUP16 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP14 DUP15 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP13 SWAP1 SWAP13 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP6 ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE SWAP4 DUP9 AND PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x140 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PUSH4 0x9155EF00 SWAP15 0xC2 MOD SWAP11 JUMP 0xA6 SUB SUB PUSH20 0x215034F15CF89E2F9B99EBEAD0DB4A9D9564736F PUSH13 0x63430008110033000000000000 ","sourceMap":"2379:6236:6:-:0;;;2420:67;;;-1:-1:-1;;;;;;2420:67:6;;;2445:42;2420:67;;;;2493:68;;;;;2519:42;2493:68;;;2567:76;;;;;2601:42;2567:76;;;2649:64;;;;;2671:42;2649:64;;;2719;;;;;;2741:42;2719:64;;;2853:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:8;719:10:13;936:18:8;:32::i;:::-;2891:5:6;:14;;-1:-1:-1;;;;;;2891:14:6;-1:-1:-1;;;;;2891:14:6;;;;;;;;;;2926:9;;2951:17;;2915:54;;-1:-1:-1;;;2915:54:6;;2951:17;;;2915:54;;;455:51:14;2926:9:6;;;2915:35;;428:18:14;;2915:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3016:17;;;;;;;;;-1:-1:-1;;;;;3016:17:6;-1:-1:-1;;;;;2997:53:6;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2979:15;:73;-1:-1:-1;2379:6236:6;;2433:187:8;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:8;;;-1:-1:-1;;;;;;2541:17:8;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:14:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:14;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:14:o;517:184::-;587:6;640:2;628:9;619:7;615:23;611:32;608:52;;;656:1;653;646:12;608:52;-1:-1:-1;679:16:14;;517:184;-1:-1:-1;517:184:14:o;:::-;2379:6236:6;;;;;;"},"deployedBytecode":{"functionDebugData":{"@GMXexecutionFee_1051":{"entryPoint":null,"id":1051,"parameterSlots":0,"returnSlots":0},"@USDC_1049":{"entryPoint":null,"id":1049,"parameterSlots":0,"returnSlots":0},"@WETH_1046":{"entryPoint":null,"id":1046,"parameterSlots":0,"returnSlots":0},"@_checkOwner_2494":{"entryPoint":3923,"id":2494,"parameterSlots":0,"returnSlots":0},"@_msgSender_3283":{"entryPoint":null,"id":3283,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_2551":{"entryPoint":4013,"id":2551,"parameterSlots":1,"returnSlots":0},"@decreasePosition_1440":{"entryPoint":2893,"id":1440,"parameterSlots":3,"returnSlots":0},"@getGMXexecutionFees_1130":{"entryPoint":null,"id":1130,"parameterSlots":0,"returnSlots":1},"@getVaultOwner_1110":{"entryPoint":null,"id":1110,"parameterSlots":0,"returnSlots":1},"@gmxPositionRouter_1043":{"entryPoint":null,"id":1043,"parameterSlots":0,"returnSlots":0},"@gmxRouter_1040":{"entryPoint":null,"id":1040,"parameterSlots":0,"returnSlots":0},"@gmxVault_1037":{"entryPoint":null,"id":1037,"parameterSlots":0,"returnSlots":0},"@increasePosition_1291":{"entryPoint":726,"id":1291,"parameterSlots":2,"returnSlots":0},"@liquidatePosition_1601":{"entryPoint":1900,"id":1601,"parameterSlots":1,"returnSlots":0},"@owner_2480":{"entryPoint":null,"id":2480,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_2508":{"entryPoint":1867,"id":2508,"parameterSlots":0,"returnSlots":0},"@setGMXexecutionFees_1122":{"entryPoint":1887,"id":1122,"parameterSlots":1,"returnSlots":0},"@setVaultOwner_1102":{"entryPoint":2851,"id":1102,"parameterSlots":1,"returnSlots":0},"@transferOwnership_2531":{"entryPoint":3802,"id":2531,"parameterSlots":1,"returnSlots":0},"@vault_1053":{"entryPoint":null,"id":1053,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":4236,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bool":{"entryPoint":4291,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bool":{"entryPoint":4200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":4518,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bool":{"entryPoint":4107,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_boolt_uint256_fromMemory":{"entryPoint":4760,"id":null,"parameterSlots":2,"returnSlots":8},"abi_encode_array_address_dyn":{"entryPoint":4543,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4155,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed":{"entryPoint":4718,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_rational_0_by_1_t_uint256_t_bool_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address__fromStack_reversed":{"entryPoint":4866,"id":null,"parameterSlots":12,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_uint256_t_uint256_t_rational_0_by_1_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_bytes32_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":11,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_uint256_t_uint256_t_rational_49516678523235954992238942512468835685745587608416838409204394698878406885376_by_1_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_bytes32_t_address__fromStack_reversed":{"entryPoint":4611,"id":null,"parameterSlots":11,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":12,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_421de824a9b16214caf7b7abaa5248fe905c9492a06bf5cfa92abc61291d0c70__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4355,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4462,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4419,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":4496,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":4093,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10918:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"56:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"110:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"119:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"122:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"112:6:14"},"nodeType":"YulFunctionCall","src":"112:12:14"},"nodeType":"YulExpressionStatement","src":"112:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79:5:14"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"100:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"93:6:14"},"nodeType":"YulFunctionCall","src":"93:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"86:6:14"},"nodeType":"YulFunctionCall","src":"86:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"76:2:14"},"nodeType":"YulFunctionCall","src":"76:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"69:6:14"},"nodeType":"YulFunctionCall","src":"69:40:14"},"nodeType":"YulIf","src":"66:60:14"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45:5:14","type":""}],"src":"14:118:14"},{"body":{"nodeType":"YulBlock","src":"221:225:14","statements":[{"body":{"nodeType":"YulBlock","src":"267:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"276:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"279:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"269:6:14"},"nodeType":"YulFunctionCall","src":"269:12:14"},"nodeType":"YulExpressionStatement","src":"269:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"242:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"251:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"238:3:14"},"nodeType":"YulFunctionCall","src":"238:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"263:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"234:3:14"},"nodeType":"YulFunctionCall","src":"234:32:14"},"nodeType":"YulIf","src":"231:52:14"},{"nodeType":"YulAssignment","src":"292:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"315:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"302:12:14"},"nodeType":"YulFunctionCall","src":"302:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"292:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"334:45:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"364:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"375:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"360:3:14"},"nodeType":"YulFunctionCall","src":"360:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"347:12:14"},"nodeType":"YulFunctionCall","src":"347:32:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"338:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"410:5:14"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"388:21:14"},"nodeType":"YulFunctionCall","src":"388:28:14"},"nodeType":"YulExpressionStatement","src":"388:28:14"},{"nodeType":"YulAssignment","src":"425:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"435:5:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"425:6:14"}]}]},"name":"abi_decode_tuple_t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"179:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"190:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"202:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"210:6:14","type":""}],"src":"137:309:14"},{"body":{"nodeType":"YulBlock","src":"552:76:14","statements":[{"nodeType":"YulAssignment","src":"562:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"585:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:14"},"nodeType":"YulFunctionCall","src":"570:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"562:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"615:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:14"},"nodeType":"YulFunctionCall","src":"597:25:14"},"nodeType":"YulExpressionStatement","src":"597:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"521:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"532:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"543:4:14","type":""}],"src":"451:177:14"},{"body":{"nodeType":"YulBlock","src":"734:102:14","statements":[{"nodeType":"YulAssignment","src":"744:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"756:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"767:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"752:3:14"},"nodeType":"YulFunctionCall","src":"752:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"744:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"801:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"817:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"822:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"813:3:14"},"nodeType":"YulFunctionCall","src":"813:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"826:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"809:3:14"},"nodeType":"YulFunctionCall","src":"809:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"797:3:14"},"nodeType":"YulFunctionCall","src":"797:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"779:6:14"},"nodeType":"YulFunctionCall","src":"779:51:14"},"nodeType":"YulExpressionStatement","src":"779:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"703:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"714:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"725:4:14","type":""}],"src":"633:203:14"},{"body":{"nodeType":"YulBlock","src":"911:110:14","statements":[{"body":{"nodeType":"YulBlock","src":"957:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"966:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"969:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"959:6:14"},"nodeType":"YulFunctionCall","src":"959:12:14"},"nodeType":"YulExpressionStatement","src":"959:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"932:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"941:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"928:3:14"},"nodeType":"YulFunctionCall","src":"928:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"924:3:14"},"nodeType":"YulFunctionCall","src":"924:32:14"},"nodeType":"YulIf","src":"921:52:14"},{"nodeType":"YulAssignment","src":"982:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1005:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"992:12:14"},"nodeType":"YulFunctionCall","src":"992:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"982:6:14"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:14","type":""}],"src":"841:180:14"},{"body":{"nodeType":"YulBlock","src":"1093:174:14","statements":[{"body":{"nodeType":"YulBlock","src":"1139:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1148:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1151:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1141:6:14"},"nodeType":"YulFunctionCall","src":"1141:12:14"},"nodeType":"YulExpressionStatement","src":"1141:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1114:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1123:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1110:3:14"},"nodeType":"YulFunctionCall","src":"1110:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1135:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1106:3:14"},"nodeType":"YulFunctionCall","src":"1106:32:14"},"nodeType":"YulIf","src":"1103:52:14"},{"nodeType":"YulVariableDeclaration","src":"1164:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1190:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1177:12:14"},"nodeType":"YulFunctionCall","src":"1177:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1168:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1231:5:14"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"1209:21:14"},"nodeType":"YulFunctionCall","src":"1209:28:14"},"nodeType":"YulExpressionStatement","src":"1209:28:14"},{"nodeType":"YulAssignment","src":"1246:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1256:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1246:6:14"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1059:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1070:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1082:6:14","type":""}],"src":"1026:241:14"},{"body":{"nodeType":"YulBlock","src":"1321:124:14","statements":[{"nodeType":"YulAssignment","src":"1331:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1340:12:14"},"nodeType":"YulFunctionCall","src":"1340:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1331:5:14"}]},{"body":{"nodeType":"YulBlock","src":"1423:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1432:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1435:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1425:6:14"},"nodeType":"YulFunctionCall","src":"1425:12:14"},"nodeType":"YulExpressionStatement","src":"1425:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1382:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1393:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1408:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1413:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1404:3:14"},"nodeType":"YulFunctionCall","src":"1404:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"1417:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1400:3:14"},"nodeType":"YulFunctionCall","src":"1400:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1389:3:14"},"nodeType":"YulFunctionCall","src":"1389:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1379:2:14"},"nodeType":"YulFunctionCall","src":"1379:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1372:6:14"},"nodeType":"YulFunctionCall","src":"1372:50:14"},"nodeType":"YulIf","src":"1369:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1300:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1311:5:14","type":""}],"src":"1272:173:14"},{"body":{"nodeType":"YulBlock","src":"1520:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"1566:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1575:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1578:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1568:6:14"},"nodeType":"YulFunctionCall","src":"1568:12:14"},"nodeType":"YulExpressionStatement","src":"1568:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1541:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1550:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1537:3:14"},"nodeType":"YulFunctionCall","src":"1537:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1562:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1533:3:14"},"nodeType":"YulFunctionCall","src":"1533:32:14"},"nodeType":"YulIf","src":"1530:52:14"},{"nodeType":"YulAssignment","src":"1591:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1620:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1601:18:14"},"nodeType":"YulFunctionCall","src":"1601:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1591:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1486:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1497:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1509:6:14","type":""}],"src":"1450:186:14"},{"body":{"nodeType":"YulBlock","src":"1742:282:14","statements":[{"body":{"nodeType":"YulBlock","src":"1788:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1797:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1800:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1790:6:14"},"nodeType":"YulFunctionCall","src":"1790:12:14"},"nodeType":"YulExpressionStatement","src":"1790:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1763:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1772:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1759:3:14"},"nodeType":"YulFunctionCall","src":"1759:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1784:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1755:3:14"},"nodeType":"YulFunctionCall","src":"1755:32:14"},"nodeType":"YulIf","src":"1752:52:14"},{"nodeType":"YulAssignment","src":"1813:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1842:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1823:18:14"},"nodeType":"YulFunctionCall","src":"1823:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1813:6:14"}]},{"nodeType":"YulAssignment","src":"1861:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1888:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1899:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1884:3:14"},"nodeType":"YulFunctionCall","src":"1884:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1871:12:14"},"nodeType":"YulFunctionCall","src":"1871:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1861:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1912:45:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1942:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1953:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1938:3:14"},"nodeType":"YulFunctionCall","src":"1938:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1925:12:14"},"nodeType":"YulFunctionCall","src":"1925:32:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1916:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1988:5:14"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"1966:21:14"},"nodeType":"YulFunctionCall","src":"1966:28:14"},"nodeType":"YulExpressionStatement","src":"1966:28:14"},{"nodeType":"YulAssignment","src":"2003:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"2013:5:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2003:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1692:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1703:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1715:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1723:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1731:6:14","type":""}],"src":"1641:383:14"},{"body":{"nodeType":"YulBlock","src":"2203:158:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2220:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2231:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2213:6:14"},"nodeType":"YulFunctionCall","src":"2213:21:14"},"nodeType":"YulExpressionStatement","src":"2213:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2254:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2265:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2250:3:14"},"nodeType":"YulFunctionCall","src":"2250:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"2270:1:14","type":"","value":"9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2243:6:14"},"nodeType":"YulFunctionCall","src":"2243:29:14"},"nodeType":"YulExpressionStatement","src":"2243:29:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2292:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2303:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2288:3:14"},"nodeType":"YulFunctionCall","src":"2288:18:14"},{"hexValue":"4e6f74207661756c74","kind":"string","nodeType":"YulLiteral","src":"2308:11:14","type":"","value":"Not vault"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2281:6:14"},"nodeType":"YulFunctionCall","src":"2281:39:14"},"nodeType":"YulExpressionStatement","src":"2281:39:14"},{"nodeType":"YulAssignment","src":"2329:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2341:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2352:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2337:3:14"},"nodeType":"YulFunctionCall","src":"2337:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2329:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_421de824a9b16214caf7b7abaa5248fe905c9492a06bf5cfa92abc61291d0c70__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2180:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2194:4:14","type":""}],"src":"2029:332:14"},{"body":{"nodeType":"YulBlock","src":"2523:218:14","statements":[{"nodeType":"YulAssignment","src":"2533:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2545:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2556:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2541:3:14"},"nodeType":"YulFunctionCall","src":"2541:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2533:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"2568:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2586:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2591:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2582:3:14"},"nodeType":"YulFunctionCall","src":"2582:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"2595:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2578:3:14"},"nodeType":"YulFunctionCall","src":"2578:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2572:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2613:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2628:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2636:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2624:3:14"},"nodeType":"YulFunctionCall","src":"2624:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2606:6:14"},"nodeType":"YulFunctionCall","src":"2606:34:14"},"nodeType":"YulExpressionStatement","src":"2606:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2660:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2671:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2656:3:14"},"nodeType":"YulFunctionCall","src":"2656:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2680:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2688:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2676:3:14"},"nodeType":"YulFunctionCall","src":"2676:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2649:6:14"},"nodeType":"YulFunctionCall","src":"2649:43:14"},"nodeType":"YulExpressionStatement","src":"2649:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2712:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2723:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2708:3:14"},"nodeType":"YulFunctionCall","src":"2708:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"2728:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2701:6:14"},"nodeType":"YulFunctionCall","src":"2701:34:14"},"nodeType":"YulExpressionStatement","src":"2701:34:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2476:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2487:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2495:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2503:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2514:4:14","type":""}],"src":"2366:375:14"},{"body":{"nodeType":"YulBlock","src":"2824:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"2870:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2879:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2882:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2872:6:14"},"nodeType":"YulFunctionCall","src":"2872:12:14"},"nodeType":"YulExpressionStatement","src":"2872:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2845:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2854:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2841:3:14"},"nodeType":"YulFunctionCall","src":"2841:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2866:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2837:3:14"},"nodeType":"YulFunctionCall","src":"2837:32:14"},"nodeType":"YulIf","src":"2834:52:14"},{"nodeType":"YulVariableDeclaration","src":"2895:29:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2914:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2908:5:14"},"nodeType":"YulFunctionCall","src":"2908:16:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2899:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2955:5:14"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"2933:21:14"},"nodeType":"YulFunctionCall","src":"2933:28:14"},"nodeType":"YulExpressionStatement","src":"2933:28:14"},{"nodeType":"YulAssignment","src":"2970:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"2980:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2970:6:14"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2790:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2801:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2813:6:14","type":""}],"src":"2746:245:14"},{"body":{"nodeType":"YulBlock","src":"3125:145:14","statements":[{"nodeType":"YulAssignment","src":"3135:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3147:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3158:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3143:3:14"},"nodeType":"YulFunctionCall","src":"3143:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3135:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3177:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3192:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3208:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3213:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3204:3:14"},"nodeType":"YulFunctionCall","src":"3204:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"3217:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3200:3:14"},"nodeType":"YulFunctionCall","src":"3200:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3188:3:14"},"nodeType":"YulFunctionCall","src":"3188:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3170:6:14"},"nodeType":"YulFunctionCall","src":"3170:51:14"},"nodeType":"YulExpressionStatement","src":"3170:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3241:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3252:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3237:3:14"},"nodeType":"YulFunctionCall","src":"3237:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"3257:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3230:6:14"},"nodeType":"YulFunctionCall","src":"3230:34:14"},"nodeType":"YulExpressionStatement","src":"3230:34:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3086:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3097:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3105:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3116:4:14","type":""}],"src":"2996:274:14"},{"body":{"nodeType":"YulBlock","src":"3327:213:14","statements":[{"nodeType":"YulAssignment","src":"3337:20:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3352:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"3355:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3348:3:14"},"nodeType":"YulFunctionCall","src":"3348:9:14"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3337:7:14"}]},{"body":{"nodeType":"YulBlock","src":"3423:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3444:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3451:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3456:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3447:3:14"},"nodeType":"YulFunctionCall","src":"3447:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3437:6:14"},"nodeType":"YulFunctionCall","src":"3437:31:14"},"nodeType":"YulExpressionStatement","src":"3437:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3488:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3491:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3481:6:14"},"nodeType":"YulFunctionCall","src":"3481:15:14"},"nodeType":"YulExpressionStatement","src":"3481:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3516:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3519:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3509:6:14"},"nodeType":"YulFunctionCall","src":"3509:15:14"},"nodeType":"YulExpressionStatement","src":"3509:15:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3386:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3379:6:14"},"nodeType":"YulFunctionCall","src":"3379:9:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3393:1:14"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"3400:7:14"},{"name":"x","nodeType":"YulIdentifier","src":"3409:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3396:3:14"},"nodeType":"YulFunctionCall","src":"3396:15:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3390:2:14"},"nodeType":"YulFunctionCall","src":"3390:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3376:2:14"},"nodeType":"YulFunctionCall","src":"3376:37:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3369:6:14"},"nodeType":"YulFunctionCall","src":"3369:45:14"},"nodeType":"YulIf","src":"3366:168:14"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3306:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"3309:1:14","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3315:7:14","type":""}],"src":"3275:265:14"},{"body":{"nodeType":"YulBlock","src":"3591:171:14","statements":[{"body":{"nodeType":"YulBlock","src":"3622:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3643:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3650:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3655:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3646:3:14"},"nodeType":"YulFunctionCall","src":"3646:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3636:6:14"},"nodeType":"YulFunctionCall","src":"3636:31:14"},"nodeType":"YulExpressionStatement","src":"3636:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3687:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3690:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3680:6:14"},"nodeType":"YulFunctionCall","src":"3680:15:14"},"nodeType":"YulExpressionStatement","src":"3680:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3715:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3718:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3708:6:14"},"nodeType":"YulFunctionCall","src":"3708:15:14"},"nodeType":"YulExpressionStatement","src":"3708:15:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3611:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3604:6:14"},"nodeType":"YulFunctionCall","src":"3604:9:14"},"nodeType":"YulIf","src":"3601:132:14"},{"nodeType":"YulAssignment","src":"3742:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3751:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"3754:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3747:3:14"},"nodeType":"YulFunctionCall","src":"3747:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3742:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3576:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"3579:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"3585:1:14","type":""}],"src":"3545:217:14"},{"body":{"nodeType":"YulBlock","src":"3799:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3816:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3823:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3828:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3819:3:14"},"nodeType":"YulFunctionCall","src":"3819:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3809:6:14"},"nodeType":"YulFunctionCall","src":"3809:31:14"},"nodeType":"YulExpressionStatement","src":"3809:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3856:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3859:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3849:6:14"},"nodeType":"YulFunctionCall","src":"3849:15:14"},"nodeType":"YulExpressionStatement","src":"3849:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3880:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3883:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3873:6:14"},"nodeType":"YulFunctionCall","src":"3873:15:14"},"nodeType":"YulExpressionStatement","src":"3873:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3767:127:14"},{"body":{"nodeType":"YulBlock","src":"3931:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3948:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3955:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3960:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3951:3:14"},"nodeType":"YulFunctionCall","src":"3951:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3941:6:14"},"nodeType":"YulFunctionCall","src":"3941:31:14"},"nodeType":"YulExpressionStatement","src":"3941:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3988:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3991:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3981:6:14"},"nodeType":"YulFunctionCall","src":"3981:15:14"},"nodeType":"YulExpressionStatement","src":"3981:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4012:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4015:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4005:6:14"},"nodeType":"YulFunctionCall","src":"4005:15:14"},"nodeType":"YulExpressionStatement","src":"4005:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"3899:127:14"},{"body":{"nodeType":"YulBlock","src":"4112:103:14","statements":[{"body":{"nodeType":"YulBlock","src":"4158:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4167:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4170:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4160:6:14"},"nodeType":"YulFunctionCall","src":"4160:12:14"},"nodeType":"YulExpressionStatement","src":"4160:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4133:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4142:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4129:3:14"},"nodeType":"YulFunctionCall","src":"4129:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4154:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4125:3:14"},"nodeType":"YulFunctionCall","src":"4125:32:14"},"nodeType":"YulIf","src":"4122:52:14"},{"nodeType":"YulAssignment","src":"4183:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4199:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4193:5:14"},"nodeType":"YulFunctionCall","src":"4193:16:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4183:6:14"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4078:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4089:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4101:6:14","type":""}],"src":"4031:184:14"},{"body":{"nodeType":"YulBlock","src":"4281:400:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4291:26:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4311:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4305:5:14"},"nodeType":"YulFunctionCall","src":"4305:12:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4295:6:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4333:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4338:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4326:6:14"},"nodeType":"YulFunctionCall","src":"4326:19:14"},"nodeType":"YulExpressionStatement","src":"4326:19:14"},{"nodeType":"YulVariableDeclaration","src":"4354:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4364:4:14","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4358:2:14","type":""}]},{"nodeType":"YulAssignment","src":"4377:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4388:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4393:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4384:3:14"},"nodeType":"YulFunctionCall","src":"4384:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4377:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"4405:28:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4423:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4430:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4419:3:14"},"nodeType":"YulFunctionCall","src":"4419:14:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4409:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4442:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4451:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4446:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4510:146:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4531:3:14"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4546:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4540:5:14"},"nodeType":"YulFunctionCall","src":"4540:13:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4563:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4568:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4559:3:14"},"nodeType":"YulFunctionCall","src":"4559:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"4572:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4555:3:14"},"nodeType":"YulFunctionCall","src":"4555:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4536:3:14"},"nodeType":"YulFunctionCall","src":"4536:39:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4524:6:14"},"nodeType":"YulFunctionCall","src":"4524:52:14"},"nodeType":"YulExpressionStatement","src":"4524:52:14"},{"nodeType":"YulAssignment","src":"4589:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4600:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4605:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4596:3:14"},"nodeType":"YulFunctionCall","src":"4596:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4589:3:14"}]},{"nodeType":"YulAssignment","src":"4621:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4635:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4643:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4631:3:14"},"nodeType":"YulFunctionCall","src":"4631:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4621:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4472:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"4475:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4469:2:14"},"nodeType":"YulFunctionCall","src":"4469:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4483:18:14","statements":[{"nodeType":"YulAssignment","src":"4485:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4494:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"4497:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4490:3:14"},"nodeType":"YulFunctionCall","src":"4490:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4485:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"4465:3:14","statements":[]},"src":"4461:195:14"},{"nodeType":"YulAssignment","src":"4665:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"4672:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4665:3:14"}]}]},"name":"abi_encode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4258:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4265:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4273:3:14","type":""}],"src":"4220:461:14"},{"body":{"nodeType":"YulBlock","src":"5175:597:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5185:13:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5195:3:14","type":"","value":"320"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5189:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5214:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"5225:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5207:6:14"},"nodeType":"YulFunctionCall","src":"5207:21:14"},"nodeType":"YulExpressionStatement","src":"5207:21:14"},{"nodeType":"YulAssignment","src":"5237:64:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5274:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5286:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"5297:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5282:3:14"},"nodeType":"YulFunctionCall","src":"5282:18:14"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"5245:28:14"},"nodeType":"YulFunctionCall","src":"5245:56:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5237:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"5310:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5328:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5333:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5324:3:14"},"nodeType":"YulFunctionCall","src":"5324:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"5337:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5320:3:14"},"nodeType":"YulFunctionCall","src":"5320:19:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5314:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5359:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5370:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5355:3:14"},"nodeType":"YulFunctionCall","src":"5355:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5379:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"5387:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5375:3:14"},"nodeType":"YulFunctionCall","src":"5375:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5348:6:14"},"nodeType":"YulFunctionCall","src":"5348:43:14"},"nodeType":"YulExpressionStatement","src":"5348:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5411:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5422:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5407:3:14"},"nodeType":"YulFunctionCall","src":"5407:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"5427:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5400:6:14"},"nodeType":"YulFunctionCall","src":"5400:34:14"},"nodeType":"YulExpressionStatement","src":"5400:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5454:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5465:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5450:3:14"},"nodeType":"YulFunctionCall","src":"5450:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"5470:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5443:6:14"},"nodeType":"YulFunctionCall","src":"5443:34:14"},"nodeType":"YulExpressionStatement","src":"5443:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5497:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5508:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5493:3:14"},"nodeType":"YulFunctionCall","src":"5493:19:14"},{"name":"value4","nodeType":"YulIdentifier","src":"5514:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5486:6:14"},"nodeType":"YulFunctionCall","src":"5486:35:14"},"nodeType":"YulExpressionStatement","src":"5486:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5552:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5537:3:14"},"nodeType":"YulFunctionCall","src":"5537:19:14"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"5572:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5565:6:14"},"nodeType":"YulFunctionCall","src":"5565:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5558:6:14"},"nodeType":"YulFunctionCall","src":"5558:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5530:6:14"},"nodeType":"YulFunctionCall","src":"5530:51:14"},"nodeType":"YulExpressionStatement","src":"5530:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5601:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5612:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5597:3:14"},"nodeType":"YulFunctionCall","src":"5597:19:14"},{"name":"value6","nodeType":"YulIdentifier","src":"5618:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5590:6:14"},"nodeType":"YulFunctionCall","src":"5590:35:14"},"nodeType":"YulExpressionStatement","src":"5590:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5645:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5656:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5641:3:14"},"nodeType":"YulFunctionCall","src":"5641:19:14"},{"name":"value7","nodeType":"YulIdentifier","src":"5662:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5634:6:14"},"nodeType":"YulFunctionCall","src":"5634:35:14"},"nodeType":"YulExpressionStatement","src":"5634:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5689:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5700:3:14","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5685:3:14"},"nodeType":"YulFunctionCall","src":"5685:19:14"},{"name":"value8","nodeType":"YulIdentifier","src":"5706:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5678:6:14"},"nodeType":"YulFunctionCall","src":"5678:35:14"},"nodeType":"YulExpressionStatement","src":"5678:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5733:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5744:3:14","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5729:3:14"},"nodeType":"YulFunctionCall","src":"5729:19:14"},{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"5754:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"5762:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5750:3:14"},"nodeType":"YulFunctionCall","src":"5750:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5722:6:14"},"nodeType":"YulFunctionCall","src":"5722:44:14"},"nodeType":"YulExpressionStatement","src":"5722:44:14"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_uint256_t_uint256_t_rational_49516678523235954992238942512468835685745587608416838409204394698878406885376_by_1_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5072:9:14","type":""},{"name":"value9","nodeType":"YulTypedName","src":"5083:6:14","type":""},{"name":"value8","nodeType":"YulTypedName","src":"5091:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"5099:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5107:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5115:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5123:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5131:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5139:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5147:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5155:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5166:4:14","type":""}],"src":"4686:1086:14"},{"body":{"nodeType":"YulBlock","src":"6190:597:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6200:13:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6210:3:14","type":"","value":"320"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6204:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6229:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6240:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6222:6:14"},"nodeType":"YulFunctionCall","src":"6222:21:14"},"nodeType":"YulExpressionStatement","src":"6222:21:14"},{"nodeType":"YulAssignment","src":"6252:64:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6289:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6301:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"6312:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6297:3:14"},"nodeType":"YulFunctionCall","src":"6297:18:14"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"6260:28:14"},"nodeType":"YulFunctionCall","src":"6260:56:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6252:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"6325:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6343:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6348:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6339:3:14"},"nodeType":"YulFunctionCall","src":"6339:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"6352:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6335:3:14"},"nodeType":"YulFunctionCall","src":"6335:19:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6329:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6374:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6385:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6370:3:14"},"nodeType":"YulFunctionCall","src":"6370:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6394:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"6402:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6390:3:14"},"nodeType":"YulFunctionCall","src":"6390:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:14"},"nodeType":"YulFunctionCall","src":"6363:43:14"},"nodeType":"YulExpressionStatement","src":"6363:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6426:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6437:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6422:3:14"},"nodeType":"YulFunctionCall","src":"6422:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"6442:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6415:6:14"},"nodeType":"YulFunctionCall","src":"6415:34:14"},"nodeType":"YulExpressionStatement","src":"6415:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6469:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6480:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6465:3:14"},"nodeType":"YulFunctionCall","src":"6465:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"6485:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6458:6:14"},"nodeType":"YulFunctionCall","src":"6458:34:14"},"nodeType":"YulExpressionStatement","src":"6458:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6512:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6523:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6508:3:14"},"nodeType":"YulFunctionCall","src":"6508:19:14"},{"name":"value4","nodeType":"YulIdentifier","src":"6529:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6501:6:14"},"nodeType":"YulFunctionCall","src":"6501:35:14"},"nodeType":"YulExpressionStatement","src":"6501:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6556:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6567:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6552:3:14"},"nodeType":"YulFunctionCall","src":"6552:19:14"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"6587:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6580:6:14"},"nodeType":"YulFunctionCall","src":"6580:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6573:6:14"},"nodeType":"YulFunctionCall","src":"6573:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6545:6:14"},"nodeType":"YulFunctionCall","src":"6545:51:14"},"nodeType":"YulExpressionStatement","src":"6545:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6616:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6627:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6612:3:14"},"nodeType":"YulFunctionCall","src":"6612:19:14"},{"name":"value6","nodeType":"YulIdentifier","src":"6633:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6605:6:14"},"nodeType":"YulFunctionCall","src":"6605:35:14"},"nodeType":"YulExpressionStatement","src":"6605:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6660:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6671:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6656:3:14"},"nodeType":"YulFunctionCall","src":"6656:19:14"},{"name":"value7","nodeType":"YulIdentifier","src":"6677:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6649:6:14"},"nodeType":"YulFunctionCall","src":"6649:35:14"},"nodeType":"YulExpressionStatement","src":"6649:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6704:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6715:3:14","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6700:3:14"},"nodeType":"YulFunctionCall","src":"6700:19:14"},{"name":"value8","nodeType":"YulIdentifier","src":"6721:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6693:6:14"},"nodeType":"YulFunctionCall","src":"6693:35:14"},"nodeType":"YulExpressionStatement","src":"6693:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6748:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6759:3:14","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6744:3:14"},"nodeType":"YulFunctionCall","src":"6744:19:14"},{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"6769:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"6777:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6765:3:14"},"nodeType":"YulFunctionCall","src":"6765:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6737:6:14"},"nodeType":"YulFunctionCall","src":"6737:44:14"},"nodeType":"YulExpressionStatement","src":"6737:44:14"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_uint256_t_uint256_t_rational_0_by_1_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6087:9:14","type":""},{"name":"value9","nodeType":"YulTypedName","src":"6098:6:14","type":""},{"name":"value8","nodeType":"YulTypedName","src":"6106:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"6114:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6122:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6130:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6138:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6146:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6154:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6162:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6170:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6181:4:14","type":""}],"src":"5777:1010:14"},{"body":{"nodeType":"YulBlock","src":"6971:287:14","statements":[{"nodeType":"YulAssignment","src":"6981:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6993:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7004:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6989:3:14"},"nodeType":"YulFunctionCall","src":"6989:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6981:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"7017:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7035:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7040:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7031:3:14"},"nodeType":"YulFunctionCall","src":"7031:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"7044:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7027:3:14"},"nodeType":"YulFunctionCall","src":"7027:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7021:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7062:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7077:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"7085:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7073:3:14"},"nodeType":"YulFunctionCall","src":"7073:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7055:6:14"},"nodeType":"YulFunctionCall","src":"7055:34:14"},"nodeType":"YulExpressionStatement","src":"7055:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7109:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7120:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7105:3:14"},"nodeType":"YulFunctionCall","src":"7105:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7129:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"7137:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7125:3:14"},"nodeType":"YulFunctionCall","src":"7125:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7098:6:14"},"nodeType":"YulFunctionCall","src":"7098:43:14"},"nodeType":"YulExpressionStatement","src":"7098:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7161:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7172:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7157:3:14"},"nodeType":"YulFunctionCall","src":"7157:18:14"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7181:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"7189:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7177:3:14"},"nodeType":"YulFunctionCall","src":"7177:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7150:6:14"},"nodeType":"YulFunctionCall","src":"7150:43:14"},"nodeType":"YulExpressionStatement","src":"7150:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7213:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7224:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7209:3:14"},"nodeType":"YulFunctionCall","src":"7209:18:14"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7243:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7236:6:14"},"nodeType":"YulFunctionCall","src":"7236:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7229:6:14"},"nodeType":"YulFunctionCall","src":"7229:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7202:6:14"},"nodeType":"YulFunctionCall","src":"7202:50:14"},"nodeType":"YulExpressionStatement","src":"7202:50:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6916:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6927:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6935:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6943:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6951:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6962:4:14","type":""}],"src":"6792:466:14"},{"body":{"nodeType":"YulBlock","src":"7460:480:14","statements":[{"body":{"nodeType":"YulBlock","src":"7507:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7516:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7519:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7509:6:14"},"nodeType":"YulFunctionCall","src":"7509:12:14"},"nodeType":"YulExpressionStatement","src":"7509:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7481:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7490:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7477:3:14"},"nodeType":"YulFunctionCall","src":"7477:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"7502:3:14","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7473:3:14"},"nodeType":"YulFunctionCall","src":"7473:33:14"},"nodeType":"YulIf","src":"7470:53:14"},{"nodeType":"YulAssignment","src":"7532:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7548:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7542:5:14"},"nodeType":"YulFunctionCall","src":"7542:16:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7532:6:14"}]},{"nodeType":"YulAssignment","src":"7567:35:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7587:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7598:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7583:3:14"},"nodeType":"YulFunctionCall","src":"7583:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7577:5:14"},"nodeType":"YulFunctionCall","src":"7577:25:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7567:6:14"}]},{"nodeType":"YulAssignment","src":"7611:35:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7631:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7642:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7627:3:14"},"nodeType":"YulFunctionCall","src":"7627:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7621:5:14"},"nodeType":"YulFunctionCall","src":"7621:25:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7611:6:14"}]},{"nodeType":"YulAssignment","src":"7655:35:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7675:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7686:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7671:3:14"},"nodeType":"YulFunctionCall","src":"7671:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7665:5:14"},"nodeType":"YulFunctionCall","src":"7665:25:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7655:6:14"}]},{"nodeType":"YulAssignment","src":"7699:36:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7719:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7730:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7715:3:14"},"nodeType":"YulFunctionCall","src":"7715:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7709:5:14"},"nodeType":"YulFunctionCall","src":"7709:26:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7699:6:14"}]},{"nodeType":"YulAssignment","src":"7744:36:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7764:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7775:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7760:3:14"},"nodeType":"YulFunctionCall","src":"7760:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7754:5:14"},"nodeType":"YulFunctionCall","src":"7754:26:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7744:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"7789:39:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7812:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7823:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7808:3:14"},"nodeType":"YulFunctionCall","src":"7808:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7802:5:14"},"nodeType":"YulFunctionCall","src":"7802:26:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7793:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7859:5:14"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"7837:21:14"},"nodeType":"YulFunctionCall","src":"7837:28:14"},"nodeType":"YulExpressionStatement","src":"7837:28:14"},{"nodeType":"YulAssignment","src":"7874:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"7884:5:14"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7874:6:14"}]},{"nodeType":"YulAssignment","src":"7898:36:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7918:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7929:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7914:3:14"},"nodeType":"YulFunctionCall","src":"7914:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7908:5:14"},"nodeType":"YulFunctionCall","src":"7908:26:14"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"7898:6:14"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_boolt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7370:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7381:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7393:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7401:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7409:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7417:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7425:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7433:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"7441:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"7449:6:14","type":""}],"src":"7263:677:14"},{"body":{"nodeType":"YulBlock","src":"8381:667:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8391:13:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8401:3:14","type":"","value":"352"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8395:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8420:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"8431:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8413:6:14"},"nodeType":"YulFunctionCall","src":"8413:21:14"},"nodeType":"YulExpressionStatement","src":"8413:21:14"},{"nodeType":"YulAssignment","src":"8443:64:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8480:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8492:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"8503:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8488:3:14"},"nodeType":"YulFunctionCall","src":"8488:18:14"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"8451:28:14"},"nodeType":"YulFunctionCall","src":"8451:56:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8443:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"8516:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8534:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8539:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8530:3:14"},"nodeType":"YulFunctionCall","src":"8530:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"8543:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8526:3:14"},"nodeType":"YulFunctionCall","src":"8526:19:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8520:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8565:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8576:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8561:3:14"},"nodeType":"YulFunctionCall","src":"8561:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8585:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"8593:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8581:3:14"},"nodeType":"YulFunctionCall","src":"8581:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:14"},"nodeType":"YulFunctionCall","src":"8554:43:14"},"nodeType":"YulExpressionStatement","src":"8554:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8617:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8628:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8613:3:14"},"nodeType":"YulFunctionCall","src":"8613:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"8633:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8606:6:14"},"nodeType":"YulFunctionCall","src":"8606:34:14"},"nodeType":"YulExpressionStatement","src":"8606:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8660:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8671:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8656:3:14"},"nodeType":"YulFunctionCall","src":"8656:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"8676:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8649:6:14"},"nodeType":"YulFunctionCall","src":"8649:34:14"},"nodeType":"YulExpressionStatement","src":"8649:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8703:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8714:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8699:3:14"},"nodeType":"YulFunctionCall","src":"8699:19:14"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8734:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8727:6:14"},"nodeType":"YulFunctionCall","src":"8727:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8720:6:14"},"nodeType":"YulFunctionCall","src":"8720:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8692:6:14"},"nodeType":"YulFunctionCall","src":"8692:51:14"},"nodeType":"YulExpressionStatement","src":"8692:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8763:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8774:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8759:3:14"},"nodeType":"YulFunctionCall","src":"8759:19:14"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"8784:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"8792:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8780:3:14"},"nodeType":"YulFunctionCall","src":"8780:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8752:6:14"},"nodeType":"YulFunctionCall","src":"8752:44:14"},"nodeType":"YulExpressionStatement","src":"8752:44:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8816:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8827:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8812:3:14"},"nodeType":"YulFunctionCall","src":"8812:19:14"},{"name":"value6","nodeType":"YulIdentifier","src":"8833:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8805:6:14"},"nodeType":"YulFunctionCall","src":"8805:35:14"},"nodeType":"YulExpressionStatement","src":"8805:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8860:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8871:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8856:3:14"},"nodeType":"YulFunctionCall","src":"8856:19:14"},{"name":"value7","nodeType":"YulIdentifier","src":"8877:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8849:6:14"},"nodeType":"YulFunctionCall","src":"8849:35:14"},"nodeType":"YulExpressionStatement","src":"8849:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8904:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8915:3:14","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8900:3:14"},"nodeType":"YulFunctionCall","src":"8900:19:14"},{"name":"value8","nodeType":"YulIdentifier","src":"8921:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8893:6:14"},"nodeType":"YulFunctionCall","src":"8893:35:14"},"nodeType":"YulExpressionStatement","src":"8893:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8948:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8959:3:14","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8944:3:14"},"nodeType":"YulFunctionCall","src":"8944:19:14"},{"arguments":[{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"8979:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8972:6:14"},"nodeType":"YulFunctionCall","src":"8972:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8965:6:14"},"nodeType":"YulFunctionCall","src":"8965:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8937:6:14"},"nodeType":"YulFunctionCall","src":"8937:51:14"},"nodeType":"YulExpressionStatement","src":"8937:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9008:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9019:3:14","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9004:3:14"},"nodeType":"YulFunctionCall","src":"9004:19:14"},{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"9029:7:14"},{"name":"_2","nodeType":"YulIdentifier","src":"9038:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9025:3:14"},"nodeType":"YulFunctionCall","src":"9025:16:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8997:6:14"},"nodeType":"YulFunctionCall","src":"8997:45:14"},"nodeType":"YulExpressionStatement","src":"8997:45:14"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_rational_0_by_1_t_uint256_t_bool_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8269:9:14","type":""},{"name":"value10","nodeType":"YulTypedName","src":"8280:7:14","type":""},{"name":"value9","nodeType":"YulTypedName","src":"8289:6:14","type":""},{"name":"value8","nodeType":"YulTypedName","src":"8297:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"8305:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8313:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8321:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8329:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8337:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8345:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8353:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8361:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8372:4:14","type":""}],"src":"7945:1103:14"},{"body":{"nodeType":"YulBlock","src":"9481:667:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9491:13:14","value":{"kind":"number","nodeType":"YulLiteral","src":"9501:3:14","type":"","value":"352"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9495:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9520:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"9531:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9513:6:14"},"nodeType":"YulFunctionCall","src":"9513:21:14"},"nodeType":"YulExpressionStatement","src":"9513:21:14"},{"nodeType":"YulAssignment","src":"9543:64:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9580:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9592:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"9603:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9588:3:14"},"nodeType":"YulFunctionCall","src":"9588:18:14"}],"functionName":{"name":"abi_encode_array_address_dyn","nodeType":"YulIdentifier","src":"9551:28:14"},"nodeType":"YulFunctionCall","src":"9551:56:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9543:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"9616:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9634:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9639:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9630:3:14"},"nodeType":"YulFunctionCall","src":"9630:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"9643:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9626:3:14"},"nodeType":"YulFunctionCall","src":"9626:19:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9620:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9665:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9676:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9661:3:14"},"nodeType":"YulFunctionCall","src":"9661:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9685:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"9693:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9681:3:14"},"nodeType":"YulFunctionCall","src":"9681:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9654:6:14"},"nodeType":"YulFunctionCall","src":"9654:43:14"},"nodeType":"YulExpressionStatement","src":"9654:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9717:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9728:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9713:3:14"},"nodeType":"YulFunctionCall","src":"9713:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"9733:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9706:6:14"},"nodeType":"YulFunctionCall","src":"9706:34:14"},"nodeType":"YulExpressionStatement","src":"9706:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9760:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9771:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9756:3:14"},"nodeType":"YulFunctionCall","src":"9756:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"9776:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9749:6:14"},"nodeType":"YulFunctionCall","src":"9749:34:14"},"nodeType":"YulExpressionStatement","src":"9749:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9803:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9814:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9799:3:14"},"nodeType":"YulFunctionCall","src":"9799:19:14"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9834:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9827:6:14"},"nodeType":"YulFunctionCall","src":"9827:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9820:6:14"},"nodeType":"YulFunctionCall","src":"9820:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9792:6:14"},"nodeType":"YulFunctionCall","src":"9792:51:14"},"nodeType":"YulExpressionStatement","src":"9792:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9863:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9874:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9859:3:14"},"nodeType":"YulFunctionCall","src":"9859:19:14"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9884:6:14"},{"name":"_2","nodeType":"YulIdentifier","src":"9892:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9880:3:14"},"nodeType":"YulFunctionCall","src":"9880:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9852:6:14"},"nodeType":"YulFunctionCall","src":"9852:44:14"},"nodeType":"YulExpressionStatement","src":"9852:44:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9916:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9927:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9912:3:14"},"nodeType":"YulFunctionCall","src":"9912:19:14"},{"name":"value6","nodeType":"YulIdentifier","src":"9933:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9905:6:14"},"nodeType":"YulFunctionCall","src":"9905:35:14"},"nodeType":"YulExpressionStatement","src":"9905:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9960:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9971:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9956:3:14"},"nodeType":"YulFunctionCall","src":"9956:19:14"},{"name":"value7","nodeType":"YulIdentifier","src":"9977:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9949:6:14"},"nodeType":"YulFunctionCall","src":"9949:35:14"},"nodeType":"YulExpressionStatement","src":"9949:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10004:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10015:3:14","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10000:3:14"},"nodeType":"YulFunctionCall","src":"10000:19:14"},{"name":"value8","nodeType":"YulIdentifier","src":"10021:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9993:6:14"},"nodeType":"YulFunctionCall","src":"9993:35:14"},"nodeType":"YulExpressionStatement","src":"9993:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10048:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10059:3:14","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10044:3:14"},"nodeType":"YulFunctionCall","src":"10044:19:14"},{"arguments":[{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"10079:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10072:6:14"},"nodeType":"YulFunctionCall","src":"10072:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10065:6:14"},"nodeType":"YulFunctionCall","src":"10065:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10037:6:14"},"nodeType":"YulFunctionCall","src":"10037:51:14"},"nodeType":"YulExpressionStatement","src":"10037:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10108:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10119:3:14","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10104:3:14"},"nodeType":"YulFunctionCall","src":"10104:19:14"},{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"10129:7:14"},{"name":"_2","nodeType":"YulIdentifier","src":"10138:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10125:3:14"},"nodeType":"YulFunctionCall","src":"10125:16:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10097:6:14"},"nodeType":"YulFunctionCall","src":"10097:45:14"},"nodeType":"YulExpressionStatement","src":"10097:45:14"}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9369:9:14","type":""},{"name":"value10","nodeType":"YulTypedName","src":"9380:7:14","type":""},{"name":"value9","nodeType":"YulTypedName","src":"9389:6:14","type":""},{"name":"value8","nodeType":"YulTypedName","src":"9397:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"9405:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"9413:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9421:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9429:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9437:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9445:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9453:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9461:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9472:4:14","type":""}],"src":"9053:1095:14"},{"body":{"nodeType":"YulBlock","src":"10327:228:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10344:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10355:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10337:6:14"},"nodeType":"YulFunctionCall","src":"10337:21:14"},"nodeType":"YulExpressionStatement","src":"10337:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10378:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10389:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10374:3:14"},"nodeType":"YulFunctionCall","src":"10374:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"10394:2:14","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10367:6:14"},"nodeType":"YulFunctionCall","src":"10367:30:14"},"nodeType":"YulExpressionStatement","src":"10367:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10417:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10428:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10413:3:14"},"nodeType":"YulFunctionCall","src":"10413:18:14"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"10433:34:14","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10406:6:14"},"nodeType":"YulFunctionCall","src":"10406:62:14"},"nodeType":"YulExpressionStatement","src":"10406:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10488:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10499:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10484:3:14"},"nodeType":"YulFunctionCall","src":"10484:18:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"10504:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10477:6:14"},"nodeType":"YulFunctionCall","src":"10477:36:14"},"nodeType":"YulExpressionStatement","src":"10477:36:14"},{"nodeType":"YulAssignment","src":"10522:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10534:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10545:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10530:3:14"},"nodeType":"YulFunctionCall","src":"10530:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10522:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10304:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10318:4:14","type":""}],"src":"10153:402:14"},{"body":{"nodeType":"YulBlock","src":"10734:182:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10751:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10762:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10744:6:14"},"nodeType":"YulFunctionCall","src":"10744:21:14"},"nodeType":"YulExpressionStatement","src":"10744:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10785:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10796:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10781:3:14"},"nodeType":"YulFunctionCall","src":"10781:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"10801:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10774:6:14"},"nodeType":"YulFunctionCall","src":"10774:30:14"},"nodeType":"YulExpressionStatement","src":"10774:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10824:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10835:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10820:3:14"},"nodeType":"YulFunctionCall","src":"10820:18:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10840:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10813:6:14"},"nodeType":"YulFunctionCall","src":"10813:62:14"},"nodeType":"YulExpressionStatement","src":"10813:62:14"},{"nodeType":"YulAssignment","src":"10884:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10896:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10907:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10892:3:14"},"nodeType":"YulFunctionCall","src":"10892:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10884:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10711:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10725:4:14","type":""}],"src":"10560:356:14"}]},"contents":"{\n    { }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_stringliteral_421de824a9b16214caf7b7abaa5248fe905c9492a06bf5cfa92abc61291d0c70__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_uint256_t_uint256_t_rational_49516678523235954992238942512468835685745587608416838409204394698878406885376_by_1_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_bytes32_t_address__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 320\n        mstore(headStart, _1)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, _1))\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _2))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), and(value9, _2))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_uint256_t_uint256_t_rational_0_by_1_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_uint256_t_uint256_t_bytes32_t_address__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 320\n        mstore(headStart, _1)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, _1))\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _2))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), and(value9, _2))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        let value := mload(add(headStart, 192))\n        validator_revert_bool(value)\n        value6 := value\n        value7 := mload(add(headStart, 224))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_rational_0_by_1_t_uint256_t_bool_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address__fromStack_reversed(headStart, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 352\n        mstore(headStart, _1)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, _1))\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _2))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), and(value5, _2))\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), iszero(iszero(value9)))\n        mstore(add(headStart, 320), and(value10, _2))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_rational_0_by_1_t_uint256_t_bool_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_address__fromStack_reversed(headStart, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 352\n        mstore(headStart, _1)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, _1))\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _2))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), and(value5, _2))\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), iszero(iszero(value9)))\n        mstore(add(headStart, 320), and(value10, _2))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89A30271 GT PUSH2 0x85 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xA44CA346 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xB3B3453E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xC5DAC33B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xC657E7C2 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C5ECC06 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x2C908916 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x434C0C75 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x634E3180 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x79DB7EF1 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x7CB17597 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x80B3631C EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF6 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x100B JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x103B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x74B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x104F JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST PUSH2 0xF6 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF6 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x10C3 JUMP JUMPDEST PUSH2 0xB4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0xEDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x152 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x364 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1126 JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1126 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x41B DUP5 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x426 SWAP1 PUSH1 0x6E PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x5 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x47B JUMPI PUSH2 0x47B PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x4 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x4AC JUMPI PUSH2 0x4AC PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70927369 PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0x2710 SWAP5 SWAP4 DUP5 AND SWAP4 PUSH4 0xE124E6D2 SWAP4 PUSH2 0x4F2 SWAP4 SWAP1 SWAP2 AND SWAP2 ADD PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x53F SWAP1 PUSH2 0x272E PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF2AE372F PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 PUSH4 0xF2AE372F SWAP5 CALLVALUE SWAP5 PUSH2 0x5AC SWAP5 DUP10 SWAP5 SWAP3 AND SWAP3 DUP14 SWAP3 PUSH1 0x0 SWAP3 DUP14 SWAP3 DUP16 SWAP3 DUP15 SWAP3 SWAP1 SWAP2 PUSH18 0x6D79726566657272616C4D6176696E696769 PUSH1 0x70 SHL SWAP2 DUP8 SWAP2 ADD PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x5 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x626 JUMPI PUSH2 0x626 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40D3096B PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0x2710 SWAP5 SWAP4 DUP5 AND SWAP4 PUSH4 0x81A612D6 SWAP4 PUSH2 0x66C SWAP4 SWAP1 SWAP2 AND SWAP2 ADD PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x689 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x6B9 SWAP1 PUSH2 0x26F2 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF2AE372F PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 PUSH4 0xF2AE372F SWAP5 CALLVALUE SWAP5 PUSH2 0x711 SWAP5 DUP10 SWAP5 SWAP3 AND SWAP3 DUP14 SWAP3 PUSH1 0x0 SWAP3 DUP14 SWAP3 DUP16 SWAP3 DUP15 SWAP3 SWAP1 SWAP2 DUP7 SWAP2 DUP3 SWAP2 ADD PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x753 PUSH2 0xF53 JUMP JUMPDEST PUSH2 0x75D PUSH1 0x0 PUSH2 0xFAD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x767 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x9BD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x7DF JUMPI PUSH2 0x7DF PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x810 JUMPI PUSH2 0x810 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A3F088D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP5 SWAP4 DUP5 AND SWAP4 PUSH4 0x4A3F088D SWAP4 PUSH2 0x85A SWAP4 ADDRESS SWAP4 SWAP3 AND SWAP2 DUP3 SWAP2 DUP12 SWAP2 ADD PUSH2 0x126E JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x1298 JUMP JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40D3096B PUSH1 0xE1 SHL DUP2 MSTORE SWAP9 SWAP10 POP PUSH2 0x2710 SWAP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP9 POP PUSH4 0x81A612D6 SWAP8 POP PUSH2 0x8E0 SWAP7 POP SWAP3 AND SWAP4 POP ADD SWAP1 POP PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x92D SWAP1 PUSH2 0x26F2 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7BE7D141 PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP8 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 PUSH4 0x7BE7D141 SWAP5 CALLVALUE SWAP5 PUSH2 0x985 SWAP5 DUP11 SWAP5 SWAP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP11 SWAP3 DUP15 SWAP3 CALLER SWAP3 DUP16 SWAP3 DUP8 SWAP3 DUP4 SWAP2 DUP3 SWAP2 ADD PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x5 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A3F088D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP6 SWAP5 DUP6 AND SWAP5 PUSH4 0x4A3F088D SWAP5 PUSH2 0xA50 SWAP5 ADDRESS SWAP5 SWAP2 DUP4 AND SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 DUP12 SWAP2 ADD PUSH2 0x126E JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x1298 JUMP JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70927369 PUSH1 0xE1 SHL DUP2 MSTORE SWAP9 SWAP10 POP PUSH2 0x2710 SWAP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP9 POP PUSH4 0xE124E6D2 SWAP8 POP PUSH2 0xAD6 SWAP7 POP SWAP3 AND SWAP4 POP ADD SWAP1 POP PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB17 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0x92D SWAP1 PUSH2 0x272E PUSH2 0x1143 JUMP JUMPDEST PUSH2 0xB2B PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP1 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH2 0xB90 DUP6 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0xB9B SWAP1 PUSH1 0x6E PUSH2 0x1143 JUMP JUMPDEST PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0xD5A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xBEE JUMPI PUSH2 0xBEE PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x5 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xC1F JUMPI PUSH2 0xC1F PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40D3096B PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0x2710 SWAP5 SWAP4 DUP5 AND SWAP4 PUSH4 0x81A612D6 SWAP4 PUSH2 0xC65 SWAP4 SWAP1 SWAP2 AND SWAP2 ADD PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0xCB2 SWAP1 PUSH2 0x26F2 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0x7BE7D141 SWAP2 CALLVALUE SWAP2 DUP6 SWAP2 AND PUSH2 0xCF0 DUP11 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1143 JUMP JUMPDEST DUP8 DUP11 DUP14 DUP12 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP14 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD22 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x5 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xD9C JUMPI PUSH2 0xD9C PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70927369 PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0x2710 SWAP5 SWAP4 DUP5 AND SWAP4 PUSH4 0xE124E6D2 SWAP4 PUSH2 0xDE2 SWAP4 SWAP1 SWAP2 AND SWAP2 ADD PUSH2 0x103B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE23 SWAP2 SWAP1 PUSH2 0x11A6 JUMP JUMPDEST PUSH2 0xE2F SWAP1 PUSH2 0x272E PUSH2 0x1143 JUMP JUMPDEST PUSH2 0xE39 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0x7BE7D141 SWAP2 CALLVALUE SWAP2 DUP6 SWAP2 AND PUSH2 0xE6D DUP11 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1143 JUMP JUMPDEST DUP8 DUP11 DUP14 DUP12 PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP14 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9F SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE2 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0xF50 DUP2 PUSH2 0xFAD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x101E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1030 DUP2 PUSH2 0xFFD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1061 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1085 DUP2 PUSH2 0xFFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1085 DUP3 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10E1 DUP5 PUSH2 0x108C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x10F8 DUP2 PUSH2 0xFFD JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x139BDD081D985D5B1D PUSH1 0xBA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1085 DUP2 PUSH2 0xFFD JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1168 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F8 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11D3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x1217 DUP2 DUP5 ADD DUP15 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP3 ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 MLOAD SWAP8 POP PUSH1 0x20 DUP10 ADD MLOAD SWAP7 POP PUSH1 0x40 DUP10 ADD MLOAD SWAP6 POP PUSH1 0x60 DUP10 ADD MLOAD SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD MLOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD MLOAD PUSH2 0x12EA DUP2 PUSH2 0xFFD JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0xE0 DUP10 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP1 DUP4 MSTORE PUSH2 0x1316 DUP2 DUP5 ADD DUP16 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP14 DUP15 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP13 SWAP1 SWAP13 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP6 ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE SWAP4 DUP9 AND PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x140 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PUSH4 0x9155EF00 SWAP15 0xC2 MOD SWAP11 JUMP 0xA6 SUB SUB PUSH20 0x215034F15CF89E2F9B99EBEAD0DB4A9D9564736F PUSH13 0x63430008110033000000000000 ","sourceMap":"2379:6236:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3930:1479;;;;;;:::i;:::-;;:::i;:::-;;3451:99;;;;;;;;;;-1:-1:-1;3528:15:6;;3451:99;;;597:25:14;;;585:2;570:18;3451:99:6;;;;;;;;2789:30;;;;;;;;;;;;;;;;2493:68;;;;;;;;;;-1:-1:-1;2493:68:6;;;;-1:-1:-1;;;;;2493:68:6;;;;;;;;;;:::i;1831:101:8:-;;;;;;;;;;;;;:::i;3338:108:6:-;;;;;;;;;;-1:-1:-1;3338:108:6;;;;;:::i;:::-;;:::i;7408:1204::-;;;;;;:::i;:::-;;:::i;3160:85::-;;;;;;;;;;-1:-1:-1;3160:85:6;;;;;:::i;:::-;;:::i;2719:64::-;;;;;;;;;;-1:-1:-1;2719:64:6;;;;-1:-1:-1;;;;;2719:64:6;;;1201:85:8;;;;;;;;;;-1:-1:-1;1247:7:8;1273:6;-1:-1:-1;;;;;1273:6:8;1201:85;;3250:83:6;;;;;;;;;;-1:-1:-1;3321:5:6;;-1:-1:-1;;;;;3321:5:6;3250:83;;2649:64;;;;;;;;;;-1:-1:-1;2649:64:6;;;;-1:-1:-1;;;;;2649:64:6;;;2420:67;;;;;;;;;;-1:-1:-1;2420:67:6;;;;-1:-1:-1;;;;;2420:67:6;;;5831:1257;;;;;;:::i;:::-;;:::i;2567:76::-;;;;;;;;;;-1:-1:-1;2567:76:6;;;;-1:-1:-1;;;;;2567:76:6;;;2081:198:8;;;;;;;;;;-1:-1:-1;2081:198:8;;;;;:::i;:::-;;:::i;2826:20:6:-;;;;;;;;;;-1:-1:-1;2826:20:6;;;;-1:-1:-1;;;;;2826:20:6;;;3930:1479;3118:5;;-1:-1:-1;;;;;3118:5:6;3104:10;:19;3096:41;;;;-1:-1:-1;;;3096:41:6;;;;;;;:::i;:::-;;;;;;;;;4035:4:::1;::::0;4054:5:::1;::::0;4028:60:::1;::::0;-1:-1:-1;;;4028:60:6;;-1:-1:-1;;;;;4054:5:6;;::::1;4028:60;::::0;::::1;2606:34:14::0;4069:4:6::1;2656:18:14::0;;;2649:43;2708:18;;;2701:34;;;4035:4:6;::::1;::::0;4028:25:::1;::::0;2541:18:14;;4028:60:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4105:4:6::1;::::0;4119:9:::1;::::0;4098:44:::1;::::0;-1:-1:-1;;;4098:44:6;;-1:-1:-1;;;;;4119:9:6;;::::1;4098:44;::::0;::::1;3170:51:14::0;3237:18;;;3230:34;;;4105:4:6;::::1;::::0;4098:20:::1;::::0;3143:18:14;;4098:44:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4152:20:6::1;4203:3;4177:18;:11:::0;4191:4:::1;4177:18;:::i;:::-;:24;::::0;4198:3:::1;4177:24;:::i;:::-;4176:30;;;;:::i;:::-;4152:55;;4235:23;4276:6;4272:1131;;;4322:16;::::0;;4336:1:::1;4322:16:::0;;;;;::::1;::::0;;4298:21:::1;::::0;4322:16:::1;::::0;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;4407:4:6::1;::::0;4397:7;;;;-1:-1:-1;;;;;;4407:4:6::1;::::0;4397:7;;-1:-1:-1;4407:4:6::1;::::0;4397:7:::1;;;;:::i;:::-;-1:-1:-1::0;;;;;4397:14:6;;::::1;:7;::::0;;::::1;::::0;;;;;:14;4435:4:::1;::::0;4425:7;;4435:4;::::1;::::0;4425;;4435;;4425:7;::::1;;;;;:::i;:::-;-1:-1:-1::0;;;;;4425:14:6;;::::1;:7;::::0;;::::1;::::0;;;;;:14;4481:8:::1;::::0;4503:4:::1;::::0;;4471:37:::1;::::0;-1:-1:-1;;;4471:37:6;;4517:5:::1;::::0;4481:8;;::::1;::::0;4471:31:::1;::::0;:37:::1;::::0;4503:4;;::::1;::::0;4471:37:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;::::0;4509:5:::1;4471:43;:::i;:::-;:51;;;;:::i;:::-;4583:17;::::0;4682:4:::1;::::0;;4839:15:::1;::::0;4564:416:::1;::::0;-1:-1:-1;;;4564:416:6;;4453:69;;-1:-1:-1;;;;;;4583:17:6;;::::1;::::0;4564:60:::1;::::0;4632:9:::1;::::0;4564:416:::1;::::0;4660:4;;4682;::::1;::::0;4704:11;;4583:17:::1;::::0;4752:12;;4782:6;;4453:69;;4839:15;;-1:-1:-1;;;4872:66:6;4583:17;;4564:416:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;4284:719;4272:1131;;;5047:16;::::0;;5061:1:::1;5047:16:::0;;;;;::::1;::::0;;;5023:21:::1;::::0;5047:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;5087:4:6::1;::::0;5077:7;;;;-1:-1:-1;;;;;;5087:4:6::1;::::0;5077:7;;-1:-1:-1;5087:4:6::1;::::0;5077:7:::1;;;;:::i;:::-;-1:-1:-1::0;;;;;5077:14:6;;::::1;:7;::::0;;::::1;::::0;;;;;:14;5133:8:::1;::::0;5155:4:::1;::::0;;5123:37:::1;::::0;-1:-1:-1;;;5123:37:6;;5166:5:::1;::::0;5133:8;;::::1;::::0;5123:31:::1;::::0;:37:::1;::::0;5155:4;;::::1;::::0;5123:37:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;::::0;5161:4:::1;5123:42;:::i;:::-;:48;;;;:::i;:::-;5232:17;::::0;5298:4:::1;::::0;;5359:15:::1;::::0;5213:179:::1;::::0;-1:-1:-1;;;5213:179:6;;5105:66;;-1:-1:-1;;;;;;5232:17:6;;::::1;::::0;5213:60:::1;::::0;5281:9:::1;::::0;5213:179:::1;::::0;5292:4;;5298;::::1;::::0;5304:11;;5232:17:::1;::::0;5320:12;;5334:6;;5105:66;;5359:15;;5232:17;;;;5213:179:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;5009:394;4272:1131;4018:1391;;3930:1479:::0;;:::o;1831:101:8:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3338:108:6:-;1094:13:8;:11;:13::i;:::-;3413:15:6::1;:26:::0;3338:108::o;7408:1204::-;3118:5;;-1:-1:-1;;;;;3118:5:6;3104:10;:19;3096:41;;;;-1:-1:-1;;;3096:41:6;;;;;;;:::i;:::-;7487:23:::1;7528:6;7524:1082;;;7574:16;::::0;;7588:1:::1;7574:16:::0;;;;;::::1;::::0;;7550:21:::1;::::0;7574:16:::1;::::0;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;7665:4:6::1;::::0;7655:7;;;;-1:-1:-1;;;;;;7665:4:6::1;::::0;7655:7;;-1:-1:-1;7665:4:6::1;::::0;7655:7:::1;;;;:::i;:::-;-1:-1:-1::0;;;;;7655:14:6;;::::1;:7;::::0;;::::1;::::0;;;;;:14;7693:4:::1;::::0;7683:7;;7693:4;::::1;::::0;7683;;7693;;7683:7;::::1;;;;;:::i;:::-;-1:-1:-1::0;;;;;7683:14:6;;::::1;:7;::::0;;::::1;::::0;;;;;:14;7750:8:::1;::::0;7787:4:::1;::::0;;7740:66:::1;::::0;-1:-1:-1;;;7740:66:6;;7712:17:::1;::::0;7750:8;;::::1;::::0;7740:31:::1;::::0;:66:::1;::::0;7780:4:::1;::::0;7787;::::1;::::0;;;7799:6;;7740:66:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;7848:8:6::1;::::0;7870:4:::1;::::0;;7838:37:::1;::::0;-1:-1:-1;;;7838:37:6;;7711:95;;-1:-1:-1;7881:5:6::1;::::0;-1:-1:-1;;;;;7848:8:6;;::::1;::::0;-1:-1:-1;7838:31:6::1;::::0;-1:-1:-1;7838:37:6::1;::::0;-1:-1:-1;7870:4:6;::::1;::::0;-1:-1:-1;7838:37:6::1;::::0;-1:-1:-1;7838:37:6::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;::::0;7876:4:::1;7838:42;:::i;:::-;:48;;;;:::i;:::-;7935:17;::::0;8001:4:::1;::::0;;8061:15:::1;::::0;7916:180:::1;::::0;-1:-1:-1;;;7916:180:6;;7820:66;;-1:-1:-1;;;;;;7935:17:6;;::::1;::::0;7916:60:::1;::::0;7984:9:::1;::::0;7916:180:::1;::::0;7995:4;;8001;::::1;::::0;7935:17:::1;::::0;8010:9;;8021:6;;8029:10:::1;::::0;7820:66;;7935:17;;;;;;7916:180:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;7536:571;;7477:1135;7408:1204:::0;:::o;7524:1082::-:1;8151:16;::::0;;8165:1:::1;8151:16:::0;;;;;::::1;::::0;;;8127:21:::1;::::0;8151:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;8191:4:6::1;::::0;8181:7;;;;-1:-1:-1;;;;;;8191:4:6::1;::::0;8181:7;;-1:-1:-1;8191:4:6::1;::::0;8181:7:::1;;;;:::i;:::-;-1:-1:-1::0;;;;;8181:14:6;;::::1;:7;::::0;;::::1;::::0;;;;;:14;8248:8:::1;::::0;8285:4:::1;::::0;8291::::1;::::0;;8238:66:::1;::::0;-1:-1:-1;;;8238:66:6;;8210:17:::1;::::0;8248:8;;::::1;::::0;8238:31:::1;::::0;:66:::1;::::0;8278:4:::1;::::0;8285;;::::1;::::0;8291;;;::::1;::::0;8297:6;;8238:66:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;8346:8:6::1;::::0;8368:4:::1;::::0;;8336:37:::1;::::0;-1:-1:-1;;;8336:37:6;;8209:95;;-1:-1:-1;8380:5:6::1;::::0;-1:-1:-1;;;;;8346:8:6;;::::1;::::0;-1:-1:-1;8336:31:6::1;::::0;-1:-1:-1;8336:37:6::1;::::0;-1:-1:-1;8368:4:6;::::1;::::0;-1:-1:-1;8336:37:6::1;::::0;-1:-1:-1;8336:37:6::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;::::0;8374:5:::1;8336:43;:::i;3160:85::-:0;1094:13:8;:11;:13::i;:::-;3227:5:6::1;:11:::0;;-1:-1:-1;;;;;;3227:11:6::1;-1:-1:-1::0;;;;;3227:11:6;;;::::1;::::0;;;::::1;::::0;;3160:85::o;5831:1257::-;3118:5;;-1:-1:-1;;;;;3118:5:6;3104:10;:19;3096:41;;;;-1:-1:-1;;;3096:41:6;;;;;;;:::i;:::-;5943:23:::1;::::0;6036:3:::1;6008:18;:11:::0;6022:4:::1;6008:18;:::i;:::-;:24;::::0;6029:3:::1;6008:24;:::i;:::-;6007:32;;;;:::i;:::-;5980:60;;6192:6;6188:894;;;6238:16;::::0;;6252:1:::1;6238:16:::0;;;;;::::1;::::0;;6214:21:::1;::::0;6238:16:::1;::::0;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;6328:4:6::1;::::0;6318:7;;;;-1:-1:-1;;;;;;6328:4:6::1;::::0;6318:7;;-1:-1:-1;6328:4:6::1;::::0;6318:7:::1;;;;:::i;:::-;-1:-1:-1::0;;;;;6318:14:6;;::::1;:7;::::0;;::::1;::::0;;;;;:14;6356:4:::1;::::0;6346:7;;6356:4;::::1;::::0;6346;;6356;;6346:7;::::1;;;;;:::i;:::-;-1:-1:-1::0;;;;;6346:14:6;;::::1;:7;::::0;;::::1;::::0;;;;;:14;6402:8:::1;::::0;6424:4:::1;::::0;;6392:37:::1;::::0;-1:-1:-1;;;6392:37:6;;6435:5:::1;::::0;6402:8;;::::1;::::0;6392:31:::1;::::0;:37:::1;::::0;6424:4;;::::1;::::0;6392:37:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;::::0;6430:4:::1;6392:42;:::i;:::-;:48;;;;:::i;:::-;6489:17;::::0;6555:4:::1;::::0;6374:66;;-1:-1:-1;;;;;;6489:17:6;;::::1;::::0;6470:60:::1;::::0;6538:9:::1;::::0;6549:4;;6555::::1;6561:17;:11:::0;6574:4:::1;6561:17;:::i;:::-;6580:15;6597:6;6605:3;6610:15;6627:1;6630:15;;6647:5;6662:1:::0;6470:195:::1;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;6200:476;6188:894;;;6720:16;::::0;;6734:1:::1;6720:16:::0;;;;;::::1;::::0;;;6696:21:::1;::::0;6720:16:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;6760:4:6::1;::::0;6750:7;;;;-1:-1:-1;;;;;;6760:4:6::1;::::0;6750:7;;-1:-1:-1;6760:4:6::1;::::0;6750:7:::1;;;;:::i;:::-;-1:-1:-1::0;;;;;6750:14:6;;::::1;:7;::::0;;::::1;::::0;;;;;:14;6806:8:::1;::::0;6828:4:::1;::::0;;6796:37:::1;::::0;-1:-1:-1;;;6796:37:6;;6840:5:::1;::::0;6806:8;;::::1;::::0;6796:31:::1;::::0;:37:::1;::::0;6828:4;;::::1;::::0;6796:37:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;::::0;6834:5:::1;6796:43;:::i;:::-;:49;;;;:::i;:::-;6894:17;::::0;6960:4:::1;::::0;6778:67;;-1:-1:-1;;;;;;6894:17:6;;::::1;::::0;6875:60:::1;::::0;6943:9:::1;::::0;6954:4;;6960::::1;6966:17;:11:::0;6979:4:::1;6966:17;:::i;:::-;6985:15;7002:6;7011:3;7016:15;7033:1;7036:15;;7053:5;7068:1:::0;6875:196:::1;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;6682:400;6188:894;5933:1155;;5831:1257:::0;;;:::o;2081:198:8:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:8;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:8;;10355:2:14;2161:73:8::1;::::0;::::1;10337:21:14::0;10394:2;10374:18;;;10367:30;10433:34;10413:18;;;10406:62;-1:-1:-1;;;10484:18:14;;;10477:36;10530:19;;2161:73:8::1;10153:402:14::0;2161:73:8::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:8;719:10:13;1422:23:8;1414:68;;;;-1:-1:-1;;;1414:68:8;;10762:2:14;1414:68:8;;;10744:21:14;;;10781:18;;;10774:30;10840:34;10820:18;;;10813:62;10892:18;;1414:68:8;10560:356:14;2433:187:8;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:8;;;-1:-1:-1;;;;;;2541:17:8;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:118:14:-;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:309;202:6;210;263:2;251:9;242:7;238:23;234:32;231:52;;;279:1;276;269:12;231:52;315:9;302:23;292:33;;375:2;364:9;360:18;347:32;388:28;410:5;388:28;:::i;:::-;435:5;425:15;;;137:309;;;;;:::o;633:203::-;-1:-1:-1;;;;;797:32:14;;;;779:51;;767:2;752:18;;633:203::o;841:180::-;900:6;953:2;941:9;932:7;928:23;924:32;921:52;;;969:1;966;959:12;921:52;-1:-1:-1;992:23:14;;841:180;-1:-1:-1;841:180:14:o;1026:241::-;1082:6;1135:2;1123:9;1114:7;1110:23;1106:32;1103:52;;;1151:1;1148;1141:12;1103:52;1190:9;1177:23;1209:28;1231:5;1209:28;:::i;:::-;1256:5;1026:241;-1:-1:-1;;;1026:241:14:o;1272:173::-;1340:20;;-1:-1:-1;;;;;1389:31:14;;1379:42;;1369:70;;1435:1;1432;1425:12;1369:70;1272:173;;;:::o;1450:186::-;1509:6;1562:2;1550:9;1541:7;1537:23;1533:32;1530:52;;;1578:1;1575;1568:12;1530:52;1601:29;1620:9;1601:29;:::i;1641:383::-;1715:6;1723;1731;1784:2;1772:9;1763:7;1759:23;1755:32;1752:52;;;1800:1;1797;1790:12;1752:52;1823:29;1842:9;1823:29;:::i;:::-;1813:39;;1899:2;1888:9;1884:18;1871:32;1861:42;;1953:2;1942:9;1938:18;1925:32;1966:28;1988:5;1966:28;:::i;:::-;2013:5;2003:15;;;1641:383;;;;;:::o;2029:332::-;2231:2;2213:21;;;2270:1;2250:18;;;2243:29;-1:-1:-1;;;2303:2:14;2288:18;;2281:39;2352:2;2337:18;;2029:332::o;2746:245::-;2813:6;2866:2;2854:9;2845:7;2841:23;2837:32;2834:52;;;2882:1;2879;2872:12;2834:52;2914:9;2908:16;2933:28;2955:5;2933:28;:::i;3275:265::-;3348:9;;;3379;;3396:15;;;3390:22;;3376:37;3366:168;;3456:10;3451:3;3447:20;3444:1;3437:31;3491:4;3488:1;3481:15;3519:4;3516:1;3509:15;3366:168;3275:265;;;;:::o;3545:217::-;3585:1;3611;3601:132;;3655:10;3650:3;3646:20;3643:1;3636:31;3690:4;3687:1;3680:15;3718:4;3715:1;3708:15;3601:132;-1:-1:-1;3747:9:14;;3545:217::o;3899:127::-;3960:10;3955:3;3951:20;3948:1;3941:31;3991:4;3988:1;3981:15;4015:4;4012:1;4005:15;4031:184;4101:6;4154:2;4142:9;4133:7;4129:23;4125:32;4122:52;;;4170:1;4167;4160:12;4122:52;-1:-1:-1;4193:16:14;;4031:184;-1:-1:-1;4031:184:14:o;4220:461::-;4273:3;4311:5;4305:12;4338:6;4333:3;4326:19;4364:4;4393:2;4388:3;4384:12;4377:19;;4430:2;4423:5;4419:14;4451:1;4461:195;4475:6;4472:1;4469:13;4461:195;;;4540:13;;-1:-1:-1;;;;;4536:39:14;4524:52;;4596:12;;;;4631:15;;;;4572:1;4490:9;4461:195;;;-1:-1:-1;4672:3:14;;4220:461;-1:-1:-1;;;;;4220:461:14:o;4686:1086::-;5166:4;5195:3;5225:2;5214:9;5207:21;5245:56;5297:2;5286:9;5282:18;5274:6;5245:56;:::i;:::-;-1:-1:-1;;;;;5375:15:14;;;5370:2;5355:18;;5348:43;5422:2;5407:18;;5400:34;;;;-1:-1:-1;;5465:2:14;5450:18;;5443:34;;;;5508:3;5493:19;;5486:35;;;;5565:14;;5558:22;5328:3;5537:19;;5530:51;5612:3;5597:19;;5590:35;;;;5656:3;5641:19;;5634:35;5700:3;5685:19;;5678:35;5750:15;;;5744:3;5729:19;;;5722:44;;;;5237:64;4686:1086;-1:-1:-1;4686:1086:14:o;6792:466::-;-1:-1:-1;;;;;7073:15:14;;;7055:34;;7125:15;;;7120:2;7105:18;;7098:43;7177:15;;7172:2;7157:18;;7150:43;7236:14;;7229:22;7224:2;7209:18;;7202:50;7004:3;6989:19;;6792:466::o;7263:677::-;7393:6;7401;7409;7417;7425;7433;7441;7449;7502:3;7490:9;7481:7;7477:23;7473:33;7470:53;;;7519:1;7516;7509:12;7470:53;7548:9;7542:16;7532:26;;7598:2;7587:9;7583:18;7577:25;7567:35;;7642:2;7631:9;7627:18;7621:25;7611:35;;7686:2;7675:9;7671:18;7665:25;7655:35;;7730:3;7719:9;7715:19;7709:26;7699:36;;7775:3;7764:9;7760:19;7754:26;7744:36;;7823:3;7812:9;7808:19;7802:26;7837:28;7859:5;7837:28;:::i;:::-;7884:5;7874:15;;;7929:3;7918:9;7914:19;7908:26;7898:36;;7263:677;;;;;;;;;;;:::o;7945:1103::-;8372:4;8401:3;8431:2;8420:9;8413:21;8451:56;8503:2;8492:9;8488:18;8480:6;8451:56;:::i;:::-;-1:-1:-1;;;;;8581:15:14;;;8576:2;8561:18;;8554:43;8628:2;8613:18;;8606:34;;;;-1:-1:-1;;8671:2:14;8656:18;;8649:34;;;;8727:14;;8720:22;8714:3;8699:19;;8692:51;8780:15;;;8534:3;8759:19;;8752:44;8827:3;8812:19;;8805:35;;;;8871:3;8856:19;;8849:35;8915:3;8900:19;;8893:35;8972:14;8965:22;8959:3;8944:19;;8937:51;9025:16;;;9019:3;9004:19;;;8997:45;;;;8443:64;7945:1103;-1:-1:-1;7945:1103:14:o"},"gasEstimates":{"creation":{"codeDepositCost":"1007000","executionCost":"infinite","totalCost":"infinite"},"external":{"GMXexecutionFee()":"2329","USDC()":"2361","WETH()":"2427","decreasePosition(address,uint256,bool)":"infinite","getGMXexecutionFees()":"2293","getVaultOwner()":"2399","gmxPositionRouter()":"2493","gmxRouter()":"2428","gmxVault()":"2449","increasePosition(uint256,bool)":"infinite","liquidatePosition(bool)":"infinite","owner()":"2377","renounceOwnership()":"infinite","setGMXexecutionFees(uint256)":"24599","setVaultOwner(address)":"26890","transferOwnership(address)":"28487","vault()":"2537"}},"methodIdentifiers":{"GMXexecutionFee()":"434c0c75","USDC()":"89a30271","WETH()":"ad5c4648","decreasePosition(address,uint256,bool)":"c5dac33b","getGMXexecutionFees()":"2c908916","getVaultOwner()":"a44ca346","gmxPositionRouter()":"c657e7c2","gmxRouter()":"634e3180","gmxVault()":"b3b3453e","increasePosition(uint256,bool)":"1c5ecc06","liquidatePosition(bool)":"7cb17597","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setGMXexecutionFees(uint256)":"79db7ef1","setVaultOwner(address)":"80b3631c","transferOwnership(address)":"f2fde38b","vault()":"fbfa77cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GMXexecutionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"decreasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGMXexecutionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gmxPositionRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gmxRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gmxVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"increasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"liquidatePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFees\",\"type\":\"uint256\"}],\"name\":\"setGMXexecutionFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setVaultOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Victor Gillibert\",\"custom:experimental\":\"This is an experimental contract.\",\"details\":\"Improvement to do :Allow not only USDC and create functions to handle tokens authorized Allow to modify leverage See if oracle price works better on mainnet\",\"kind\":\"dev\",\"methods\":{\"decreasePosition(address,uint256,bool)\":{\"details\":\"USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\",\"params\":{\"_to\":\"receiver of the funds \",\"isLong\":\"true for Long, False for Short\",\"tokenAmount\":\"amount to withdraw in USDC [10**6]\"}},\"increasePosition(uint256,bool)\":{\"details\":\"USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\",\"params\":{\"isLong\":\"true for Long, False for Short\",\"tokenAmount\":\"amount to withdraw in USDC [10**6]\"}},\"liquidatePosition(bool)\":{\"details\":\"USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\",\"params\":{\"isLong\":\"true for Long, False for Short\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decreasePosition(address,uint256,bool)\":{\"notice\":\"Decrease positions on GMX - only the vault can call this function\"},\"increasePosition(uint256,bool)\":{\"notice\":\"Increase positions on GMX - only the vault can call this function\"},\"liquidatePosition(bool)\":{\"notice\":\"Liquidates positions on GMX - only the vault can call this function\"}},\"notice\":\"This contract should work with any vault on Arbitrum network\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GMX_controller.sol\":\"GMX_controller\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/GMX_controller.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IGMXReader {\\n    function getPositions(address _vault, address _account, address[] memory _collateralTokens, address[] memory _indexTokens, bool[] memory _isLong) external ;\\n}\\ninterface IGMXVault {\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\\n}\\ninterface IGMXRouter {\\n    function approvePlugin(address _plugin) external;\\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external payable ;\\n}\\ninterface IGMXPositionRouter {\\n    function createIncreasePosition(address[] memory _path, address _indexToken, uint256 _amountIn, uint256 _minOut, uint256 _sizeDelta, bool _isLong, uint256 _acceptablePrice, uint256 _executionFee, bytes32 _referralCode, address _callbackTarget) external payable;\\n    function createDecreasePosition(address[] memory _path, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver, uint256 _acceptablePrice, uint256 _minOut, uint256 _executionFee, bool _withdrawETH, address _callbackTarget) external payable;\\n    function minExecutionFee() external view returns (uint256);\\n}\\n\\n\\n/// @title Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network \\n/// @author Victor Gillibert\\n/// @notice This contract should work with any vault on Arbitrum network\\n/// @dev Improvement to do :\\n/// @dev Allow not only USDC and create functions to handle tokens authorized \\n/// @dev Allow to modify leverage \\n/// @dev See if oracle price works better on mainnet\\n/// @custom:experimental This is an experimental contract.\\ncontract GMX_controller is Ownable {\\n    address public gmxVault =0x489ee077994B6658eAfA855C308275EAd8097C4A;\\n    address public gmxRouter =0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064;\\n    address public gmxPositionRouter =0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868;\\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\\n    uint256 public GMXexecutionFee ;\\n    address public vault;\\n\\n    constructor(address _vault) {\\n        vault = _vault;\\n        IGMXRouter(gmxRouter).approvePlugin(gmxPositionRouter);\\n        GMXexecutionFee = IGMXPositionRouter(gmxPositionRouter).minExecutionFee();\\n    }\\n\\n    modifier onlyMyVault {\\n        require(msg.sender == vault, \\\"Not vault\\\");\\n        _;\\n    }\\n    function setVaultOwner(address _addr) external onlyOwner {\\n        vault=_addr;\\n    }\\n    function getVaultOwner() public view returns(address) {\\n        return vault;\\n    }\\n    function setGMXexecutionFees(uint256 _newFees) external onlyOwner{\\n        GMXexecutionFee = _newFees;\\n    }\\n    function getGMXexecutionFees() public view returns(uint256) {\\n        return GMXexecutionFee;\\n    }\\n\\n    /// @notice Increase positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable onlyMyVault{\\n        IERC20(USDC).transferFrom(vault, address(this), tokenAmount);\\n        IERC20(USDC).approve(gmxRouter, tokenAmount);\\n        uint256 positionSize = ((tokenAmount * 1e24 * 110)/100); // 1.1x leverage \\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert USDC to WETH\\n            path[0] = USDC;\\n            path[1] = WETH;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030 / 10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(\\n                path,\\n                WETH,\\n                tokenAmount,\\n                0,\\n                positionSize,\\n                isLong,\\n                acceptablePrice,\\n                GMXexecutionFee,\\n                0x6d79726566657272616c4d6176696e6967690000000000000000000000000000,\\n                address(0)\\n            );            \\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(path, WETH, tokenAmount, 0, positionSize, isLong, acceptablePrice, GMXexecutionFee, 0x0, address(0));\\n        }\\n    }\\n\\n    /// @notice Decrease positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param _to receiver of the funds \\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100);\\n\\n        // uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100) * (tokenAmount*1e24 +GMXexecutionFee*10**18)/(tokenAmount*1e24);\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong, _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong,  _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n    /// @notice Liquidates positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param isLong true for Long, False for Short\\n    function liquidatePosition(bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2); //[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), WETH, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), USDC, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x6a2a84e363abd15258c513f759388e19478b0c18357ff5ccb39675ea012a7467\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2447,"contract":"contracts/GMX_controller.sol:GMX_controller","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1037,"contract":"contracts/GMX_controller.sol:GMX_controller","label":"gmxVault","offset":0,"slot":"1","type":"t_address"},{"astId":1040,"contract":"contracts/GMX_controller.sol:GMX_controller","label":"gmxRouter","offset":0,"slot":"2","type":"t_address"},{"astId":1043,"contract":"contracts/GMX_controller.sol:GMX_controller","label":"gmxPositionRouter","offset":0,"slot":"3","type":"t_address"},{"astId":1046,"contract":"contracts/GMX_controller.sol:GMX_controller","label":"WETH","offset":0,"slot":"4","type":"t_address"},{"astId":1049,"contract":"contracts/GMX_controller.sol:GMX_controller","label":"USDC","offset":0,"slot":"5","type":"t_address"},{"astId":1051,"contract":"contracts/GMX_controller.sol:GMX_controller","label":"GMXexecutionFee","offset":0,"slot":"6","type":"t_uint256"},{"astId":1053,"contract":"contracts/GMX_controller.sol:GMX_controller","label":"vault","offset":0,"slot":"7","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"decreasePosition(address,uint256,bool)":{"notice":"Decrease positions on GMX - only the vault can call this function"},"increasePosition(uint256,bool)":{"notice":"Increase positions on GMX - only the vault can call this function"},"liquidatePosition(bool)":{"notice":"Liquidates positions on GMX - only the vault can call this function"}},"notice":"This contract should work with any vault on Arbitrum network","version":1}},"IGMXPositionRouter":{"abi":[{"inputs":[{"internalType":"address[]","name":"_path","type":"address[]"},{"internalType":"address","name":"_indexToken","type":"address"},{"internalType":"uint256","name":"_collateralDelta","type":"uint256"},{"internalType":"uint256","name":"_sizeDelta","type":"uint256"},{"internalType":"bool","name":"_isLong","type":"bool"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint256","name":"_acceptablePrice","type":"uint256"},{"internalType":"uint256","name":"_minOut","type":"uint256"},{"internalType":"uint256","name":"_executionFee","type":"uint256"},{"internalType":"bool","name":"_withdrawETH","type":"bool"},{"internalType":"address","name":"_callbackTarget","type":"address"}],"name":"createDecreasePosition","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_path","type":"address[]"},{"internalType":"address","name":"_indexToken","type":"address"},{"internalType":"uint256","name":"_amountIn","type":"uint256"},{"internalType":"uint256","name":"_minOut","type":"uint256"},{"internalType":"uint256","name":"_sizeDelta","type":"uint256"},{"internalType":"bool","name":"_isLong","type":"bool"},{"internalType":"uint256","name":"_acceptablePrice","type":"uint256"},{"internalType":"uint256","name":"_executionFee","type":"uint256"},{"internalType":"bytes32","name":"_referralCode","type":"bytes32"},{"internalType":"address","name":"_callbackTarget","type":"address"}],"name":"createIncreasePosition","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"minExecutionFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createDecreasePosition(address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,bool,address)":"7be7d141","createIncreasePosition(address[],address,uint256,uint256,uint256,bool,uint256,uint256,bytes32,address)":"f2ae372f","minExecutionFee()":"63ae2103"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_executionFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withdrawETH\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_callbackTarget\",\"type\":\"address\"}],\"name\":\"createDecreasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_acceptablePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_executionFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_referralCode\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_callbackTarget\",\"type\":\"address\"}],\"name\":\"createIncreasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minExecutionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GMX_controller.sol\":\"IGMXPositionRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/GMX_controller.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IGMXReader {\\n    function getPositions(address _vault, address _account, address[] memory _collateralTokens, address[] memory _indexTokens, bool[] memory _isLong) external ;\\n}\\ninterface IGMXVault {\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\\n}\\ninterface IGMXRouter {\\n    function approvePlugin(address _plugin) external;\\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external payable ;\\n}\\ninterface IGMXPositionRouter {\\n    function createIncreasePosition(address[] memory _path, address _indexToken, uint256 _amountIn, uint256 _minOut, uint256 _sizeDelta, bool _isLong, uint256 _acceptablePrice, uint256 _executionFee, bytes32 _referralCode, address _callbackTarget) external payable;\\n    function createDecreasePosition(address[] memory _path, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver, uint256 _acceptablePrice, uint256 _minOut, uint256 _executionFee, bool _withdrawETH, address _callbackTarget) external payable;\\n    function minExecutionFee() external view returns (uint256);\\n}\\n\\n\\n/// @title Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network \\n/// @author Victor Gillibert\\n/// @notice This contract should work with any vault on Arbitrum network\\n/// @dev Improvement to do :\\n/// @dev Allow not only USDC and create functions to handle tokens authorized \\n/// @dev Allow to modify leverage \\n/// @dev See if oracle price works better on mainnet\\n/// @custom:experimental This is an experimental contract.\\ncontract GMX_controller is Ownable {\\n    address public gmxVault =0x489ee077994B6658eAfA855C308275EAd8097C4A;\\n    address public gmxRouter =0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064;\\n    address public gmxPositionRouter =0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868;\\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\\n    uint256 public GMXexecutionFee ;\\n    address public vault;\\n\\n    constructor(address _vault) {\\n        vault = _vault;\\n        IGMXRouter(gmxRouter).approvePlugin(gmxPositionRouter);\\n        GMXexecutionFee = IGMXPositionRouter(gmxPositionRouter).minExecutionFee();\\n    }\\n\\n    modifier onlyMyVault {\\n        require(msg.sender == vault, \\\"Not vault\\\");\\n        _;\\n    }\\n    function setVaultOwner(address _addr) external onlyOwner {\\n        vault=_addr;\\n    }\\n    function getVaultOwner() public view returns(address) {\\n        return vault;\\n    }\\n    function setGMXexecutionFees(uint256 _newFees) external onlyOwner{\\n        GMXexecutionFee = _newFees;\\n    }\\n    function getGMXexecutionFees() public view returns(uint256) {\\n        return GMXexecutionFee;\\n    }\\n\\n    /// @notice Increase positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable onlyMyVault{\\n        IERC20(USDC).transferFrom(vault, address(this), tokenAmount);\\n        IERC20(USDC).approve(gmxRouter, tokenAmount);\\n        uint256 positionSize = ((tokenAmount * 1e24 * 110)/100); // 1.1x leverage \\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert USDC to WETH\\n            path[0] = USDC;\\n            path[1] = WETH;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030 / 10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(\\n                path,\\n                WETH,\\n                tokenAmount,\\n                0,\\n                positionSize,\\n                isLong,\\n                acceptablePrice,\\n                GMXexecutionFee,\\n                0x6d79726566657272616c4d6176696e6967690000000000000000000000000000,\\n                address(0)\\n            );            \\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(path, WETH, tokenAmount, 0, positionSize, isLong, acceptablePrice, GMXexecutionFee, 0x0, address(0));\\n        }\\n    }\\n\\n    /// @notice Decrease positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param _to receiver of the funds \\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100);\\n\\n        // uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100) * (tokenAmount*1e24 +GMXexecutionFee*10**18)/(tokenAmount*1e24);\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong, _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong,  _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n    /// @notice Liquidates positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param isLong true for Long, False for Short\\n    function liquidatePosition(bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2); //[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), WETH, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), USDC, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x6a2a84e363abd15258c513f759388e19478b0c18357ff5ccb39675ea012a7467\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IGMXReader":{"abi":[{"inputs":[{"internalType":"address","name":"_vault","type":"address"},{"internalType":"address","name":"_account","type":"address"},{"internalType":"address[]","name":"_collateralTokens","type":"address[]"},{"internalType":"address[]","name":"_indexTokens","type":"address[]"},{"internalType":"bool[]","name":"_isLong","type":"bool[]"}],"name":"getPositions","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getPositions(address,address,address[],address[],bool[])":"dc383cab"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_collateralTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_indexTokens\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_isLong\",\"type\":\"bool[]\"}],\"name\":\"getPositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GMX_controller.sol\":\"IGMXReader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/GMX_controller.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IGMXReader {\\n    function getPositions(address _vault, address _account, address[] memory _collateralTokens, address[] memory _indexTokens, bool[] memory _isLong) external ;\\n}\\ninterface IGMXVault {\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\\n}\\ninterface IGMXRouter {\\n    function approvePlugin(address _plugin) external;\\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external payable ;\\n}\\ninterface IGMXPositionRouter {\\n    function createIncreasePosition(address[] memory _path, address _indexToken, uint256 _amountIn, uint256 _minOut, uint256 _sizeDelta, bool _isLong, uint256 _acceptablePrice, uint256 _executionFee, bytes32 _referralCode, address _callbackTarget) external payable;\\n    function createDecreasePosition(address[] memory _path, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver, uint256 _acceptablePrice, uint256 _minOut, uint256 _executionFee, bool _withdrawETH, address _callbackTarget) external payable;\\n    function minExecutionFee() external view returns (uint256);\\n}\\n\\n\\n/// @title Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network \\n/// @author Victor Gillibert\\n/// @notice This contract should work with any vault on Arbitrum network\\n/// @dev Improvement to do :\\n/// @dev Allow not only USDC and create functions to handle tokens authorized \\n/// @dev Allow to modify leverage \\n/// @dev See if oracle price works better on mainnet\\n/// @custom:experimental This is an experimental contract.\\ncontract GMX_controller is Ownable {\\n    address public gmxVault =0x489ee077994B6658eAfA855C308275EAd8097C4A;\\n    address public gmxRouter =0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064;\\n    address public gmxPositionRouter =0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868;\\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\\n    uint256 public GMXexecutionFee ;\\n    address public vault;\\n\\n    constructor(address _vault) {\\n        vault = _vault;\\n        IGMXRouter(gmxRouter).approvePlugin(gmxPositionRouter);\\n        GMXexecutionFee = IGMXPositionRouter(gmxPositionRouter).minExecutionFee();\\n    }\\n\\n    modifier onlyMyVault {\\n        require(msg.sender == vault, \\\"Not vault\\\");\\n        _;\\n    }\\n    function setVaultOwner(address _addr) external onlyOwner {\\n        vault=_addr;\\n    }\\n    function getVaultOwner() public view returns(address) {\\n        return vault;\\n    }\\n    function setGMXexecutionFees(uint256 _newFees) external onlyOwner{\\n        GMXexecutionFee = _newFees;\\n    }\\n    function getGMXexecutionFees() public view returns(uint256) {\\n        return GMXexecutionFee;\\n    }\\n\\n    /// @notice Increase positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable onlyMyVault{\\n        IERC20(USDC).transferFrom(vault, address(this), tokenAmount);\\n        IERC20(USDC).approve(gmxRouter, tokenAmount);\\n        uint256 positionSize = ((tokenAmount * 1e24 * 110)/100); // 1.1x leverage \\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert USDC to WETH\\n            path[0] = USDC;\\n            path[1] = WETH;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030 / 10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(\\n                path,\\n                WETH,\\n                tokenAmount,\\n                0,\\n                positionSize,\\n                isLong,\\n                acceptablePrice,\\n                GMXexecutionFee,\\n                0x6d79726566657272616c4d6176696e6967690000000000000000000000000000,\\n                address(0)\\n            );            \\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(path, WETH, tokenAmount, 0, positionSize, isLong, acceptablePrice, GMXexecutionFee, 0x0, address(0));\\n        }\\n    }\\n\\n    /// @notice Decrease positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param _to receiver of the funds \\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100);\\n\\n        // uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100) * (tokenAmount*1e24 +GMXexecutionFee*10**18)/(tokenAmount*1e24);\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong, _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong,  _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n    /// @notice Liquidates positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param isLong true for Long, False for Short\\n    function liquidatePosition(bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2); //[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), WETH, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), USDC, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x6a2a84e363abd15258c513f759388e19478b0c18357ff5ccb39675ea012a7467\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IGMXRouter":{"abi":[{"inputs":[{"internalType":"address","name":"_plugin","type":"address"}],"name":"approvePlugin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"address","name":"_collateralToken","type":"address"},{"internalType":"address","name":"_indexToken","type":"address"},{"internalType":"uint256","name":"_sizeDelta","type":"uint256"},{"internalType":"bool","name":"_isLong","type":"bool"}],"name":"increasePosition","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approvePlugin(address)":"38c74dd9","increasePosition(address,address,address,uint256,bool)":"48d91abf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_plugin\",\"type\":\"address\"}],\"name\":\"approvePlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"increasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GMX_controller.sol\":\"IGMXRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/GMX_controller.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IGMXReader {\\n    function getPositions(address _vault, address _account, address[] memory _collateralTokens, address[] memory _indexTokens, bool[] memory _isLong) external ;\\n}\\ninterface IGMXVault {\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\\n}\\ninterface IGMXRouter {\\n    function approvePlugin(address _plugin) external;\\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external payable ;\\n}\\ninterface IGMXPositionRouter {\\n    function createIncreasePosition(address[] memory _path, address _indexToken, uint256 _amountIn, uint256 _minOut, uint256 _sizeDelta, bool _isLong, uint256 _acceptablePrice, uint256 _executionFee, bytes32 _referralCode, address _callbackTarget) external payable;\\n    function createDecreasePosition(address[] memory _path, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver, uint256 _acceptablePrice, uint256 _minOut, uint256 _executionFee, bool _withdrawETH, address _callbackTarget) external payable;\\n    function minExecutionFee() external view returns (uint256);\\n}\\n\\n\\n/// @title Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network \\n/// @author Victor Gillibert\\n/// @notice This contract should work with any vault on Arbitrum network\\n/// @dev Improvement to do :\\n/// @dev Allow not only USDC and create functions to handle tokens authorized \\n/// @dev Allow to modify leverage \\n/// @dev See if oracle price works better on mainnet\\n/// @custom:experimental This is an experimental contract.\\ncontract GMX_controller is Ownable {\\n    address public gmxVault =0x489ee077994B6658eAfA855C308275EAd8097C4A;\\n    address public gmxRouter =0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064;\\n    address public gmxPositionRouter =0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868;\\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\\n    uint256 public GMXexecutionFee ;\\n    address public vault;\\n\\n    constructor(address _vault) {\\n        vault = _vault;\\n        IGMXRouter(gmxRouter).approvePlugin(gmxPositionRouter);\\n        GMXexecutionFee = IGMXPositionRouter(gmxPositionRouter).minExecutionFee();\\n    }\\n\\n    modifier onlyMyVault {\\n        require(msg.sender == vault, \\\"Not vault\\\");\\n        _;\\n    }\\n    function setVaultOwner(address _addr) external onlyOwner {\\n        vault=_addr;\\n    }\\n    function getVaultOwner() public view returns(address) {\\n        return vault;\\n    }\\n    function setGMXexecutionFees(uint256 _newFees) external onlyOwner{\\n        GMXexecutionFee = _newFees;\\n    }\\n    function getGMXexecutionFees() public view returns(uint256) {\\n        return GMXexecutionFee;\\n    }\\n\\n    /// @notice Increase positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable onlyMyVault{\\n        IERC20(USDC).transferFrom(vault, address(this), tokenAmount);\\n        IERC20(USDC).approve(gmxRouter, tokenAmount);\\n        uint256 positionSize = ((tokenAmount * 1e24 * 110)/100); // 1.1x leverage \\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert USDC to WETH\\n            path[0] = USDC;\\n            path[1] = WETH;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030 / 10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(\\n                path,\\n                WETH,\\n                tokenAmount,\\n                0,\\n                positionSize,\\n                isLong,\\n                acceptablePrice,\\n                GMXexecutionFee,\\n                0x6d79726566657272616c4d6176696e6967690000000000000000000000000000,\\n                address(0)\\n            );            \\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(path, WETH, tokenAmount, 0, positionSize, isLong, acceptablePrice, GMXexecutionFee, 0x0, address(0));\\n        }\\n    }\\n\\n    /// @notice Decrease positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param _to receiver of the funds \\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100);\\n\\n        // uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100) * (tokenAmount*1e24 +GMXexecutionFee*10**18)/(tokenAmount*1e24);\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong, _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong,  _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n    /// @notice Liquidates positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param isLong true for Long, False for Short\\n    function liquidatePosition(bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2); //[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), WETH, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), USDC, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x6a2a84e363abd15258c513f759388e19478b0c18357ff5ccb39675ea012a7467\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IGMXVault":{"abi":[{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getMaxPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getMinPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"address","name":"_collateralToken","type":"address"},{"internalType":"address","name":"_indexToken","type":"address"},{"internalType":"bool","name":"_isLong","type":"bool"}],"name":"getPosition","outputs":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"uint256","name":"collateral","type":"uint256"},{"internalType":"uint256","name":"averagePrice","type":"uint256"},{"internalType":"uint256","name":"entryFundingRate","type":"uint256"},{"internalType":"uint256","name":"reserveAmount","type":"uint256"},{"internalType":"uint256","name":"realisedPnl","type":"uint256"},{"internalType":"bool","name":"realisedPnLPositive","type":"bool"},{"internalType":"uint256","name":"lastIncreasedTime","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"address","name":"_collateralToken","type":"address"},{"internalType":"address","name":"_indexToken","type":"address"},{"internalType":"bool","name":"_isLong","type":"bool"}],"name":"getPositionDelta","outputs":[{"internalType":"bool","name":"hasprofit","type":"bool"},{"internalType":"uint256","name":"lastIncreasedTime","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getMaxPrice(address)":"e124e6d2","getMinPrice(address)":"81a612d6","getPosition(address,address,address,bool)":"4a3f088d","getPositionDelta(address,address,address,bool)":"45a6f370"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getMaxPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getMinPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryFundingRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"realisedPnl\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"realisedPnLPositive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastIncreasedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPositionDelta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasprofit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastIncreasedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GMX_controller.sol\":\"IGMXVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/GMX_controller.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IGMXReader {\\n    function getPositions(address _vault, address _account, address[] memory _collateralTokens, address[] memory _indexTokens, bool[] memory _isLong) external ;\\n}\\ninterface IGMXVault {\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\\n}\\ninterface IGMXRouter {\\n    function approvePlugin(address _plugin) external;\\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external payable ;\\n}\\ninterface IGMXPositionRouter {\\n    function createIncreasePosition(address[] memory _path, address _indexToken, uint256 _amountIn, uint256 _minOut, uint256 _sizeDelta, bool _isLong, uint256 _acceptablePrice, uint256 _executionFee, bytes32 _referralCode, address _callbackTarget) external payable;\\n    function createDecreasePosition(address[] memory _path, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver, uint256 _acceptablePrice, uint256 _minOut, uint256 _executionFee, bool _withdrawETH, address _callbackTarget) external payable;\\n    function minExecutionFee() external view returns (uint256);\\n}\\n\\n\\n/// @title Contract controlled by the vault that interacts with GMX perpetual exchange on Arbitrum network \\n/// @author Victor Gillibert\\n/// @notice This contract should work with any vault on Arbitrum network\\n/// @dev Improvement to do :\\n/// @dev Allow not only USDC and create functions to handle tokens authorized \\n/// @dev Allow to modify leverage \\n/// @dev See if oracle price works better on mainnet\\n/// @custom:experimental This is an experimental contract.\\ncontract GMX_controller is Ownable {\\n    address public gmxVault =0x489ee077994B6658eAfA855C308275EAd8097C4A;\\n    address public gmxRouter =0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064;\\n    address public gmxPositionRouter =0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868;\\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\\n    uint256 public GMXexecutionFee ;\\n    address public vault;\\n\\n    constructor(address _vault) {\\n        vault = _vault;\\n        IGMXRouter(gmxRouter).approvePlugin(gmxPositionRouter);\\n        GMXexecutionFee = IGMXPositionRouter(gmxPositionRouter).minExecutionFee();\\n    }\\n\\n    modifier onlyMyVault {\\n        require(msg.sender == vault, \\\"Not vault\\\");\\n        _;\\n    }\\n    function setVaultOwner(address _addr) external onlyOwner {\\n        vault=_addr;\\n    }\\n    function getVaultOwner() public view returns(address) {\\n        return vault;\\n    }\\n    function setGMXexecutionFees(uint256 _newFees) external onlyOwner{\\n        GMXexecutionFee = _newFees;\\n    }\\n    function getGMXexecutionFees() public view returns(uint256) {\\n        return GMXexecutionFee;\\n    }\\n\\n    /// @notice Increase positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable onlyMyVault{\\n        IERC20(USDC).transferFrom(vault, address(this), tokenAmount);\\n        IERC20(USDC).approve(gmxRouter, tokenAmount);\\n        uint256 positionSize = ((tokenAmount * 1e24 * 110)/100); // 1.1x leverage \\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert USDC to WETH\\n            path[0] = USDC;\\n            path[1] = WETH;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030 / 10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(\\n                path,\\n                WETH,\\n                tokenAmount,\\n                0,\\n                positionSize,\\n                isLong,\\n                acceptablePrice,\\n                GMXexecutionFee,\\n                0x6d79726566657272616c4d6176696e6967690000000000000000000000000000,\\n                address(0)\\n            );            \\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// GMX uses 30 bps tolerance\\n            IGMXPositionRouter(gmxPositionRouter).createIncreasePosition{value: msg.value}(path, WETH, tokenAmount, 0, positionSize, isLong, acceptablePrice, GMXexecutionFee, 0x0, address(0));\\n        }\\n    }\\n\\n    /// @notice Decrease positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param _to receiver of the funds \\n    /// @param tokenAmount amount to withdraw in USDC [10**6]\\n    /// @param isLong true for Long, False for Short\\n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100);\\n\\n        // uint256 collateralDelta = ((tokenAmount * 1e24 * 110) / 100) * (tokenAmount*1e24 +GMXexecutionFee*10**18)/(tokenAmount*1e24);\\n        if (isLong) {\\n            address[] memory path = new address[](2);//[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong, _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, tokenAmount* 1e24, collateralDelta, isLong,  _to, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n    /// @notice Liquidates positions on GMX - only the vault can call this function\\n    /// @dev USDC only -> see if on public net better to use oracle -> // (,int price,,,) = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419).latestRoundData();\\n    /// @param isLong true for Long, False for Short\\n    function liquidatePosition(bool isLong) external payable onlyMyVault {\\n        uint256 acceptablePrice = 0;\\n        if (isLong) {\\n            address[] memory path = new address[](2); //[2] because GMX has to convert WETH back in USDC\\n            path[0] = WETH;\\n            path[1] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), WETH, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMinPrice(WETH)*9970/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        } else {\\n            address[] memory path = new address[](1);\\n            path[0] = USDC;\\n            (uint256 sizeDelta,,,,,,,) = IGMXVault(gmxVault).getPosition(address(this), USDC, WETH, isLong);\\n            acceptablePrice = IGMXVault(gmxVault).getMaxPrice(WETH)*10030/10000;// 0.3% slippage\\n            IGMXPositionRouter(gmxPositionRouter).createDecreasePosition{value: msg.value}(path, WETH, 0, sizeDelta, isLong, msg.sender, acceptablePrice, 0, GMXexecutionFee, false, address(0));\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x6a2a84e363abd15258c513f759388e19478b0c18357ff5ccb39675ea012a7467\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MyVault.sol":{"IGMXController":{"abi":[{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"bool","name":"isLong","type":"bool"}],"name":"decreasePosition","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"bool","name":"isLong","type":"bool"}],"name":"increasePosition","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bool","name":"isLong","type":"bool"}],"name":"liquidatePosition","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decreasePosition(address,uint256,bool)":"c5dac33b","increasePosition(uint256,bool)":"1c5ecc06","liquidatePosition(bool)":"7cb17597"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"decreasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"increasePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"}],\"name\":\"liquidatePosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyVault.sol\":\"IGMXController\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/MyVault.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n\\ninterface IGMXController {\\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable ; \\n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable ; \\n    function liquidatePosition(bool isLong) external payable ; \\n}\\n\\ninterface IGMXVault {\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\\n}\\n\\n/// @title Vault contract to receive funds and rebalance on GMX thanks to controller according to exposition strategy\\n/// @author Victor Gillibert\\n/// @notice It works as a fund manager, send token as shares of the vault according to the value in it, send back USDC when token are given back\\n/// @dev Improvement to do :\\n/// @dev Add fees to compensate for transaction fees paid when position need to be modified\\n/// @dev Allow other token to be added\\n/// @custom:experimental This is an experimental contract.\\ncontract MyVault is Ownable, ERC20, ReentrancyGuard {\\n    // ::::::::::::: VARIABLE AND EVENT ::::::::::::: //\\n    address public GMX_controller;\\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\\n    address public gmxVault = 0x489ee077994B6658eAfA855C308275EAd8097C4A;\\n    uint256 public netAssetValue;\\n    uint8 public exposition; //0 neutral - 1 Long ETH - 2 short ETH\\n\\n    mapping(address => bool) public tokenAccepted;\\n    event NewTokenAdded(address tokenAddress);\\n    event TokenRemoved(address tokenAddress);\\n    event expoEvent(uint256 when, uint8 oldexpo, uint8 newexpo);\\n    event depositEvent(\\n        address indexed account,\\n        uint256 when,\\n        address token_deposited,\\n        uint256 amount,\\n        uint256 PLPissued\\n    );\\n    event withdrawEvent(\\n        address indexed account,\\n        uint256 when,\\n        uint256 amount,\\n        uint256 nav,\\n        uint256 preop_supply\\n    );\\n    event navEvent(\\n        uint256 when,\\n        uint8 exposition,\\n        uint256 oldNAV,\\n        uint256 NAV,\\n        uint256 usdcNAV,\\n        uint256 longNAV,\\n        uint256 shortNAV,\\n        uint256 totalsupply\\n    );\\n\\n    // ::::::::::::: CONSTRUCTOR ::::::::::::: //\\n\\n    constructor() ERC20(\\\"Polyplus\\\", \\\"PLP\\\") {\\n        exposition = 0;\\n        netAssetValue = 1;\\n    }\\n\\n    // ::::::::::::: HANDLING TOKEN LISTS ACCEPTED ::::::::::::: //\\n\\n    //Gestion des tokens accept\\u00e9s [until now stable only with USDC]\\n    /// @notice whitelist the token accepted in the vault, allow a better control\\n    /// @dev until now, only USDC deposit are handled\\n    /// @param tokenAddress arbitrum address of the ERC20 token\\n    function acceptToken(address tokenAddress) external onlyOwner {\\n        require(!tokenAccepted[tokenAddress], \\\"Token already added\\\");\\n        tokenAccepted[tokenAddress] = true;\\n        emit NewTokenAdded(tokenAddress);\\n    }\\n    function removeToken(address tokenAddress) external onlyOwner {\\n        require(tokenAccepted[tokenAddress], \\\"Token not yet added\\\");\\n        tokenAccepted[tokenAddress] = false;\\n        emit TokenRemoved(tokenAddress);\\n    }\\n    function isAccepted(address tokenAddress) external view returns (bool) {\\n        return tokenAccepted[tokenAddress];\\n    }\\n\\n    // ::::::::::::: GMX CONTROLLER AND FEES::::::::::::: //\\n\\n    /// @notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\\n    /// @dev only the owner can call this function\\n    /// @param _addr address of the controller to add\\n    function setGMX_controller(address _addr) external onlyOwner {\\n        GMX_controller = _addr;\\n    }\\n    function getGMX_controller() public view returns (address) {\\n        return GMX_controller;\\n    }\\n\\n    // ::::::::::::: STRATEGY EXPOSITION AND GLOBAL TX ::::::::::::: //\\n\\n    /// @notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\\n    /// @dev only the owner can call this function\\n    /// @param _exposition 0 for neutral | 1 Long | 2 Short\\n    function setExposition(uint8 _exposition) external onlyOwner {\\n        require(\\n            _exposition == 0 || _exposition == 1 || _exposition == 2,\\n            \\\"Value must be 0 for neutral, 1 for Long or 2 for Short\\\"\\n        );\\n        require(\\n            exposition != _exposition,\\n            \\\"Reverted because exposition has not changed\\\"\\n        );\\n        uint8 oldexposition = exposition;\\n        exposition = _exposition;\\n        emit expoEvent(block.timestamp, oldexposition, exposition);\\n    }\\n    function getExposition() external view returns (uint8) {\\n        return exposition;\\n    }\\n    function openPosition() external payable onlyOwner {\\n        bool isLong = (exposition == 1 ? true : false);\\n        IERC20(USDC).approve(\\n            GMX_controller,\\n            IERC20(USDC).balanceOf(address(this))\\n        );\\n        IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n            IERC20(USDC).balanceOf(address(this)),\\n            isLong\\n        );\\n    }\\n    function liquidateLongPositions() external payable onlyOwner {\\n        IGMXController(GMX_controller).liquidatePosition{value: msg.value}(\\n            true\\n        );\\n    }\\n    function liquidateShortPositions() external payable onlyOwner {\\n        IGMXController(GMX_controller).liquidatePosition{value: msg.value}(\\n            false\\n        );\\n    }\\n\\n    // ::::::::::::: NET ASSET VALUE OF THE FUNDS ::::::::::::: //\\n   \\n    function updateNetAssetValue() external onlyOwner {\\n        _updateNAV();\\n    }\\n    //decimals 10**30\\n    function _updateNAV() private {\\n        uint256 oldNAV = netAssetValue;\\n        uint256 _deltavalueLong = 0;\\n        uint256 _deltavalueShort = 0;\\n        uint256 usdcBal = ERC20(USDC).balanceOf(address(this)) * 10**24; ///10**18 met USDC 6 decimals donc 10**12\\n        (, uint256 _collateralLong, , , , , , ) = IGMXVault(gmxVault)\\n            .getPosition(GMX_controller, WETH, WETH, true);\\n        if (_collateralLong > 0) {\\n            (, _deltavalueLong) = IGMXVault(gmxVault).getPositionDelta(\\n                GMX_controller,\\n                WETH,\\n                WETH,\\n                true\\n            );\\n        }\\n        uint256 posLong = (_collateralLong + _deltavalueLong);\\n        (, uint256 _collateralShort, , , , , , ) = IGMXVault(gmxVault)\\n            .getPosition(GMX_controller, USDC, WETH, false);\\n        if (_collateralShort > 0) {\\n            (, _deltavalueShort) = IGMXVault(gmxVault).getPositionDelta(\\n                GMX_controller,\\n                USDC,\\n                WETH,\\n                false\\n            );\\n        }\\n        uint256 posShort = (_collateralShort - _deltavalueShort);\\n        netAssetValue = usdcBal + posLong + posShort;\\n        emit navEvent(\\n            block.timestamp,\\n            exposition,\\n            oldNAV,\\n            netAssetValue,\\n            usdcBal,\\n            posLong,\\n            posShort,\\n            this.totalSupply()\\n        );\\n    }\\n    function getNetAssetValue() external view returns (uint256) {\\n        return netAssetValue;\\n    }\\n\\n    // ::::::::::::: USER INTERFACE ::::::::::::: //\\n\\n    /// @notice Function that handles the deposit of fund in USDC and sent back PLP token \\n    /// @dev take USDC and send back PLP according to current vault value and price per share;\\n    /// @param tokenAddress USDC address only for the moment, but keeping the possibility to add other token\\n    /// @param _amount amount of USDC decimals 10**6\\n    function deposit(address tokenAddress, uint256 _amount) external payable nonReentrant {\\n        require(tokenAccepted[tokenAddress], \\\"Token not yet supported\\\");\\n        require(_amount > 0, \\\"Amount to deposit is mandatory\\\");\\n        uint256 amountToken = _amount - _amount / 100; //1% entry fees paid to GMX [0.1% entry fees + 0.8% swap fees]\\n        uint256 amountPLPToken;\\n        if (this.totalSupply() == 0) {\\n            amountPLPToken = _amount * (10**12); //10**18 / 10**6 decimals PLP / decimals USDC\\n        } else {\\n            _updateNAV();\\n            if (exposition == 0) {\\n                amountPLPToken = (((10**24) * _amount * this.totalSupply()) /\\n                    netAssetValue);\\n            } else {\\n                amountPLPToken = (((10**24) *\\n                    amountToken *\\n                    this.totalSupply()) / netAssetValue); //10**30 decimals net asset value / 10**6 USDC\\n            }\\n        }\\n        _mint(msg.sender, amountPLPToken);\\n        IERC20(tokenAddress).transferFrom(msg.sender, address(this), _amount);\\n        IERC20(tokenAddress).approve(GMX_controller, _amount);\\n        if (exposition == 1) {\\n            IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n                _amount,\\n                true\\n            );\\n        } else if (exposition == 2) {\\n            IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n                _amount,\\n                false\\n            );\\n        }\\n        emit depositEvent(\\n            msg.sender,\\n            block.timestamp,\\n            tokenAddress,\\n            _amount,\\n            amountPLPToken\\n        );\\n    }\\n\\n    /// @notice Function to withdraw funds from the vault\\n    /// @notice Function that handles the withdraw of fund\\n    /// @dev take PLP and send back USDC according to current price per share;\\n    /// @param _amount amount of PLP decimals 10**18\\n    function withdraw(uint256 _amount) external payable nonReentrant {\\n        require(_amount > 0);\\n        require(\\n            this.balanceOf(msg.sender) >= _amount,\\n            \\\"Surprisingly you cannot withdraw token you have not bought\\\"\\n        );\\n        bool isLong = (exposition == 1 ? true : false);\\n        _updateNAV();\\n        uint256 preop_supply = this.totalSupply();\\n        _burn(msg.sender, _amount);\\n        \\n        if (exposition == 0) {\\n            IERC20(USDC).transfer(msg.sender,(10**6*_amount *netAssetValue)/(preop_supply*10**30));\\n        } else {\\n            IGMXController(GMX_controller).decreasePosition{value: msg.value}(\\n                msg.sender,\\n                (99*10**4*_amount *netAssetValue)/(preop_supply*10**30), // [decimals USDC] * (#PLP / [decimals PLP]) * (NAV / [decimals NAV]) * ([decimals TS] / TS)) | 99% pour prendre en compte l'effet dillutif des frais GMX \\u00e0 la sortie\\n                isLong\\n            );\\n        } \\n        emit withdrawEvent(msg.sender, block.timestamp, _amount, netAssetValue, preop_supply);\\n    }\\n}\\n\",\"keccak256\":\"0xaf588eb0f8d9b53a0fd1662b26229133f4ec962a004d67bed263a2fcb41926dc\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IGMXVault":{"abi":[{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getMaxPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getMinPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"address","name":"_collateralToken","type":"address"},{"internalType":"address","name":"_indexToken","type":"address"},{"internalType":"bool","name":"_isLong","type":"bool"}],"name":"getPosition","outputs":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"uint256","name":"collateral","type":"uint256"},{"internalType":"uint256","name":"averagePrice","type":"uint256"},{"internalType":"uint256","name":"entryFundingRate","type":"uint256"},{"internalType":"uint256","name":"reserveAmount","type":"uint256"},{"internalType":"uint256","name":"realisedPnl","type":"uint256"},{"internalType":"bool","name":"realisedPnLPositive","type":"bool"},{"internalType":"uint256","name":"lastIncreasedTime","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"address","name":"_collateralToken","type":"address"},{"internalType":"address","name":"_indexToken","type":"address"},{"internalType":"bool","name":"_isLong","type":"bool"}],"name":"getPositionDelta","outputs":[{"internalType":"bool","name":"hasprofit","type":"bool"},{"internalType":"uint256","name":"lastIncreasedTime","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getMaxPrice(address)":"e124e6d2","getMinPrice(address)":"81a612d6","getPosition(address,address,address,bool)":"4a3f088d","getPositionDelta(address,address,address,bool)":"45a6f370"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getMaxPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getMinPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"averagePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryFundingRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"realisedPnl\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"realisedPnLPositive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastIncreasedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"getPositionDelta\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasprofit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastIncreasedTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyVault.sol\":\"IGMXVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/MyVault.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n\\ninterface IGMXController {\\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable ; \\n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable ; \\n    function liquidatePosition(bool isLong) external payable ; \\n}\\n\\ninterface IGMXVault {\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\\n}\\n\\n/// @title Vault contract to receive funds and rebalance on GMX thanks to controller according to exposition strategy\\n/// @author Victor Gillibert\\n/// @notice It works as a fund manager, send token as shares of the vault according to the value in it, send back USDC when token are given back\\n/// @dev Improvement to do :\\n/// @dev Add fees to compensate for transaction fees paid when position need to be modified\\n/// @dev Allow other token to be added\\n/// @custom:experimental This is an experimental contract.\\ncontract MyVault is Ownable, ERC20, ReentrancyGuard {\\n    // ::::::::::::: VARIABLE AND EVENT ::::::::::::: //\\n    address public GMX_controller;\\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\\n    address public gmxVault = 0x489ee077994B6658eAfA855C308275EAd8097C4A;\\n    uint256 public netAssetValue;\\n    uint8 public exposition; //0 neutral - 1 Long ETH - 2 short ETH\\n\\n    mapping(address => bool) public tokenAccepted;\\n    event NewTokenAdded(address tokenAddress);\\n    event TokenRemoved(address tokenAddress);\\n    event expoEvent(uint256 when, uint8 oldexpo, uint8 newexpo);\\n    event depositEvent(\\n        address indexed account,\\n        uint256 when,\\n        address token_deposited,\\n        uint256 amount,\\n        uint256 PLPissued\\n    );\\n    event withdrawEvent(\\n        address indexed account,\\n        uint256 when,\\n        uint256 amount,\\n        uint256 nav,\\n        uint256 preop_supply\\n    );\\n    event navEvent(\\n        uint256 when,\\n        uint8 exposition,\\n        uint256 oldNAV,\\n        uint256 NAV,\\n        uint256 usdcNAV,\\n        uint256 longNAV,\\n        uint256 shortNAV,\\n        uint256 totalsupply\\n    );\\n\\n    // ::::::::::::: CONSTRUCTOR ::::::::::::: //\\n\\n    constructor() ERC20(\\\"Polyplus\\\", \\\"PLP\\\") {\\n        exposition = 0;\\n        netAssetValue = 1;\\n    }\\n\\n    // ::::::::::::: HANDLING TOKEN LISTS ACCEPTED ::::::::::::: //\\n\\n    //Gestion des tokens accept\\u00e9s [until now stable only with USDC]\\n    /// @notice whitelist the token accepted in the vault, allow a better control\\n    /// @dev until now, only USDC deposit are handled\\n    /// @param tokenAddress arbitrum address of the ERC20 token\\n    function acceptToken(address tokenAddress) external onlyOwner {\\n        require(!tokenAccepted[tokenAddress], \\\"Token already added\\\");\\n        tokenAccepted[tokenAddress] = true;\\n        emit NewTokenAdded(tokenAddress);\\n    }\\n    function removeToken(address tokenAddress) external onlyOwner {\\n        require(tokenAccepted[tokenAddress], \\\"Token not yet added\\\");\\n        tokenAccepted[tokenAddress] = false;\\n        emit TokenRemoved(tokenAddress);\\n    }\\n    function isAccepted(address tokenAddress) external view returns (bool) {\\n        return tokenAccepted[tokenAddress];\\n    }\\n\\n    // ::::::::::::: GMX CONTROLLER AND FEES::::::::::::: //\\n\\n    /// @notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\\n    /// @dev only the owner can call this function\\n    /// @param _addr address of the controller to add\\n    function setGMX_controller(address _addr) external onlyOwner {\\n        GMX_controller = _addr;\\n    }\\n    function getGMX_controller() public view returns (address) {\\n        return GMX_controller;\\n    }\\n\\n    // ::::::::::::: STRATEGY EXPOSITION AND GLOBAL TX ::::::::::::: //\\n\\n    /// @notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\\n    /// @dev only the owner can call this function\\n    /// @param _exposition 0 for neutral | 1 Long | 2 Short\\n    function setExposition(uint8 _exposition) external onlyOwner {\\n        require(\\n            _exposition == 0 || _exposition == 1 || _exposition == 2,\\n            \\\"Value must be 0 for neutral, 1 for Long or 2 for Short\\\"\\n        );\\n        require(\\n            exposition != _exposition,\\n            \\\"Reverted because exposition has not changed\\\"\\n        );\\n        uint8 oldexposition = exposition;\\n        exposition = _exposition;\\n        emit expoEvent(block.timestamp, oldexposition, exposition);\\n    }\\n    function getExposition() external view returns (uint8) {\\n        return exposition;\\n    }\\n    function openPosition() external payable onlyOwner {\\n        bool isLong = (exposition == 1 ? true : false);\\n        IERC20(USDC).approve(\\n            GMX_controller,\\n            IERC20(USDC).balanceOf(address(this))\\n        );\\n        IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n            IERC20(USDC).balanceOf(address(this)),\\n            isLong\\n        );\\n    }\\n    function liquidateLongPositions() external payable onlyOwner {\\n        IGMXController(GMX_controller).liquidatePosition{value: msg.value}(\\n            true\\n        );\\n    }\\n    function liquidateShortPositions() external payable onlyOwner {\\n        IGMXController(GMX_controller).liquidatePosition{value: msg.value}(\\n            false\\n        );\\n    }\\n\\n    // ::::::::::::: NET ASSET VALUE OF THE FUNDS ::::::::::::: //\\n   \\n    function updateNetAssetValue() external onlyOwner {\\n        _updateNAV();\\n    }\\n    //decimals 10**30\\n    function _updateNAV() private {\\n        uint256 oldNAV = netAssetValue;\\n        uint256 _deltavalueLong = 0;\\n        uint256 _deltavalueShort = 0;\\n        uint256 usdcBal = ERC20(USDC).balanceOf(address(this)) * 10**24; ///10**18 met USDC 6 decimals donc 10**12\\n        (, uint256 _collateralLong, , , , , , ) = IGMXVault(gmxVault)\\n            .getPosition(GMX_controller, WETH, WETH, true);\\n        if (_collateralLong > 0) {\\n            (, _deltavalueLong) = IGMXVault(gmxVault).getPositionDelta(\\n                GMX_controller,\\n                WETH,\\n                WETH,\\n                true\\n            );\\n        }\\n        uint256 posLong = (_collateralLong + _deltavalueLong);\\n        (, uint256 _collateralShort, , , , , , ) = IGMXVault(gmxVault)\\n            .getPosition(GMX_controller, USDC, WETH, false);\\n        if (_collateralShort > 0) {\\n            (, _deltavalueShort) = IGMXVault(gmxVault).getPositionDelta(\\n                GMX_controller,\\n                USDC,\\n                WETH,\\n                false\\n            );\\n        }\\n        uint256 posShort = (_collateralShort - _deltavalueShort);\\n        netAssetValue = usdcBal + posLong + posShort;\\n        emit navEvent(\\n            block.timestamp,\\n            exposition,\\n            oldNAV,\\n            netAssetValue,\\n            usdcBal,\\n            posLong,\\n            posShort,\\n            this.totalSupply()\\n        );\\n    }\\n    function getNetAssetValue() external view returns (uint256) {\\n        return netAssetValue;\\n    }\\n\\n    // ::::::::::::: USER INTERFACE ::::::::::::: //\\n\\n    /// @notice Function that handles the deposit of fund in USDC and sent back PLP token \\n    /// @dev take USDC and send back PLP according to current vault value and price per share;\\n    /// @param tokenAddress USDC address only for the moment, but keeping the possibility to add other token\\n    /// @param _amount amount of USDC decimals 10**6\\n    function deposit(address tokenAddress, uint256 _amount) external payable nonReentrant {\\n        require(tokenAccepted[tokenAddress], \\\"Token not yet supported\\\");\\n        require(_amount > 0, \\\"Amount to deposit is mandatory\\\");\\n        uint256 amountToken = _amount - _amount / 100; //1% entry fees paid to GMX [0.1% entry fees + 0.8% swap fees]\\n        uint256 amountPLPToken;\\n        if (this.totalSupply() == 0) {\\n            amountPLPToken = _amount * (10**12); //10**18 / 10**6 decimals PLP / decimals USDC\\n        } else {\\n            _updateNAV();\\n            if (exposition == 0) {\\n                amountPLPToken = (((10**24) * _amount * this.totalSupply()) /\\n                    netAssetValue);\\n            } else {\\n                amountPLPToken = (((10**24) *\\n                    amountToken *\\n                    this.totalSupply()) / netAssetValue); //10**30 decimals net asset value / 10**6 USDC\\n            }\\n        }\\n        _mint(msg.sender, amountPLPToken);\\n        IERC20(tokenAddress).transferFrom(msg.sender, address(this), _amount);\\n        IERC20(tokenAddress).approve(GMX_controller, _amount);\\n        if (exposition == 1) {\\n            IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n                _amount,\\n                true\\n            );\\n        } else if (exposition == 2) {\\n            IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n                _amount,\\n                false\\n            );\\n        }\\n        emit depositEvent(\\n            msg.sender,\\n            block.timestamp,\\n            tokenAddress,\\n            _amount,\\n            amountPLPToken\\n        );\\n    }\\n\\n    /// @notice Function to withdraw funds from the vault\\n    /// @notice Function that handles the withdraw of fund\\n    /// @dev take PLP and send back USDC according to current price per share;\\n    /// @param _amount amount of PLP decimals 10**18\\n    function withdraw(uint256 _amount) external payable nonReentrant {\\n        require(_amount > 0);\\n        require(\\n            this.balanceOf(msg.sender) >= _amount,\\n            \\\"Surprisingly you cannot withdraw token you have not bought\\\"\\n        );\\n        bool isLong = (exposition == 1 ? true : false);\\n        _updateNAV();\\n        uint256 preop_supply = this.totalSupply();\\n        _burn(msg.sender, _amount);\\n        \\n        if (exposition == 0) {\\n            IERC20(USDC).transfer(msg.sender,(10**6*_amount *netAssetValue)/(preop_supply*10**30));\\n        } else {\\n            IGMXController(GMX_controller).decreasePosition{value: msg.value}(\\n                msg.sender,\\n                (99*10**4*_amount *netAssetValue)/(preop_supply*10**30), // [decimals USDC] * (#PLP / [decimals PLP]) * (NAV / [decimals NAV]) * ([decimals TS] / TS)) | 99% pour prendre en compte l'effet dillutif des frais GMX \\u00e0 la sortie\\n                isLong\\n            );\\n        } \\n        emit withdrawEvent(msg.sender, block.timestamp, _amount, netAssetValue, preop_supply);\\n    }\\n}\\n\",\"keccak256\":\"0xaf588eb0f8d9b53a0fd1662b26229133f4ec962a004d67bed263a2fcb41926dc\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"MyVault":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenAddress","type":"address"}],"name":"NewTokenAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenAddress","type":"address"}],"name":"TokenRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"when","type":"uint256"},{"indexed":false,"internalType":"address","name":"token_deposited","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"PLPissued","type":"uint256"}],"name":"depositEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"when","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"oldexpo","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"newexpo","type":"uint8"}],"name":"expoEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"when","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"exposition","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"oldNAV","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"NAV","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"usdcNAV","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"longNAV","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shortNAV","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalsupply","type":"uint256"}],"name":"navEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"when","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nav","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preop_supply","type":"uint256"}],"name":"withdrawEvent","type":"event"},{"inputs":[],"name":"GMX_controller","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"acceptToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"exposition","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getExposition","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGMX_controller","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNetAssetValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gmxVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"isAccepted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidateLongPositions","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"liquidateShortPositions","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"netAssetValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"openPosition","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"removeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"_exposition","type":"uint8"}],"name":"setExposition","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"setGMX_controller","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenAccepted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"updateNetAssetValue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"author":"Victor Gillibert","custom:experimental":"This is an experimental contract.","details":"Improvement to do :Add fees to compensate for transaction fees paid when position need to be modifiedAllow other token to be added","kind":"dev","methods":{"acceptToken(address)":{"details":"until now, only USDC deposit are handled","params":{"tokenAddress":"arbitrum address of the ERC20 token"}},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"deposit(address,uint256)":{"details":"take USDC and send back PLP according to current vault value and price per share;","params":{"_amount":"amount of USDC decimals 10**6","tokenAddress":"USDC address only for the moment, but keeping the possibility to add other token"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setExposition(uint8)":{"details":"only the owner can call this function","params":{"_exposition":"0 for neutral | 1 Long | 2 Short"}},"setGMX_controller(address)":{"details":"only the owner can call this function","params":{"_addr":"address of the controller to add"}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdraw(uint256)":{"details":"take PLP and send back USDC according to current price per share;","params":{"_amount":"amount of PLP decimals 10**18"}}},"title":"Vault contract to receive funds and rebalance on GMX thanks to controller according to exposition strategy","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1787":{"entryPoint":null,"id":1787,"parameterSlots":0,"returnSlots":0},"@_2463":{"entryPoint":null,"id":2463,"parameterSlots":0,"returnSlots":0},"@_2649":{"entryPoint":null,"id":2649,"parameterSlots":0,"returnSlots":0},"@_2729":{"entryPoint":null,"id":2729,"parameterSlots":2,"returnSlots":0},"@_msgSender_3283":{"entryPoint":265,"id":3283,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_2551":{"entryPoint":269,"id":2551,"parameterSlots":1,"returnSlots":0},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":431,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":514,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":371,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":349,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2732:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:14"},"nodeType":"YulFunctionCall","src":"66:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:14"},"nodeType":"YulFunctionCall","src":"56:31:14"},"nodeType":"YulExpressionStatement","src":"56:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:14"},"nodeType":"YulFunctionCall","src":"96:15:14"},"nodeType":"YulExpressionStatement","src":"96:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:14"},"nodeType":"YulFunctionCall","src":"120:15:14"},"nodeType":"YulExpressionStatement","src":"120:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:14"},{"body":{"nodeType":"YulBlock","src":"201:325:14","statements":[{"nodeType":"YulAssignment","src":"211:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:14"},"nodeType":"YulFunctionCall","src":"221:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:14"},"nodeType":"YulFunctionCall","src":"268:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:14","statements":[{"nodeType":"YulAssignment","src":"321:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:14"},"nodeType":"YulFunctionCall","src":"331:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:14"},"nodeType":"YulFunctionCall","src":"292:26:14"},"nodeType":"YulIf","src":"289:61:14"},{"body":{"nodeType":"YulBlock","src":"409:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:14"},"nodeType":"YulFunctionCall","src":"433:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:14"},"nodeType":"YulFunctionCall","src":"423:31:14"},"nodeType":"YulExpressionStatement","src":"423:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:14"},"nodeType":"YulFunctionCall","src":"467:15:14"},"nodeType":"YulExpressionStatement","src":"467:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:14"},"nodeType":"YulFunctionCall","src":"495:15:14"},"nodeType":"YulExpressionStatement","src":"495:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:14"},"nodeType":"YulFunctionCall","src":"385:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:14"},"nodeType":"YulFunctionCall","src":"362:38:14"},"nodeType":"YulIf","src":"359:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:14","type":""}],"src":"146:380:14"},{"body":{"nodeType":"YulBlock","src":"587:65:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:14","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:14"},"nodeType":"YulFunctionCall","src":"597:14:14"},"nodeType":"YulExpressionStatement","src":"597:14:14"},{"nodeType":"YulAssignment","src":"620:26:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:14"},"nodeType":"YulFunctionCall","src":"628:18:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:14"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:14","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:14","type":""}],"src":"531:121:14"},{"body":{"nodeType":"YulBlock","src":"738:464:14","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:14","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:14","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:14","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:14","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:14"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:14"},"nodeType":"YulFunctionCall","src":"809:17:14"},"nodeType":"YulExpressionStatement","src":"809:17:14"},{"nodeType":"YulVariableDeclaration","src":"839:31:14","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:14"},"nodeType":"YulFunctionCall","src":"851:19:14"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:14","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:14"},"nodeType":"YulFunctionCall","src":"919:19:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:14"},"nodeType":"YulFunctionCall","src":"912:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:14"},"nodeType":"YulFunctionCall","src":"902:38:14"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:14","statements":[{"nodeType":"YulAssignment","src":"979:19:14","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:14"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:14","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:14"},"nodeType":"YulFunctionCall","src":"956:20:14"},"nodeType":"YulIf","src":"953:47:14"},{"nodeType":"YulVariableDeclaration","src":"1013:41:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:14","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:14"},"nodeType":"YulFunctionCall","src":"1040:12:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:14"},"nodeType":"YulFunctionCall","src":"1033:20:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:14"},"nodeType":"YulFunctionCall","src":"1023:31:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:14","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:14"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:14","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:14"},"nodeType":"YulFunctionCall","src":"1167:17:14"},"nodeType":"YulExpressionStatement","src":"1167:17:14"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:14"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:14"},"nodeType":"YulFunctionCall","src":"1112:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:14","statements":[{"nodeType":"YulAssignment","src":"1128:22:14","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:14"},"nodeType":"YulFunctionCall","src":"1137:13:14"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:14","statements":[]},"src":"1104:82:14"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:14"},"nodeType":"YulFunctionCall","src":"751:11:14"},"nodeType":"YulIf","src":"748:448:14"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:14","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:14","type":""}],"src":"657:545:14"},{"body":{"nodeType":"YulBlock","src":"1292:81:14","statements":[{"nodeType":"YulAssignment","src":"1302:65:14","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:14"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:14","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:14"},"nodeType":"YulFunctionCall","src":"1331:11:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:14"},"nodeType":"YulFunctionCall","src":"1344:6:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:14"},"nodeType":"YulFunctionCall","src":"1327:24:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:14"},"nodeType":"YulFunctionCall","src":"1323:29:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:14"},"nodeType":"YulFunctionCall","src":"1313:40:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:14","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:14"},"nodeType":"YulFunctionCall","src":"1355:11:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:14"},"nodeType":"YulFunctionCall","src":"1310:57:14"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:14","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:14","type":""}],"src":"1207:166:14"},{"body":{"nodeType":"YulBlock","src":"1474:1256:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:14"},"nodeType":"YulFunctionCall","src":"1498:10:14"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:14"},"nodeType":"YulFunctionCall","src":"1553:18:14"},"nodeType":"YulExpressionStatement","src":"1553:18:14"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:14","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:14"},"nodeType":"YulFunctionCall","src":"1535:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:14"},"nodeType":"YulFunctionCall","src":"1531:18:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:14"},"nodeType":"YulFunctionCall","src":"1520:30:14"},"nodeType":"YulIf","src":"1517:56:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:14"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:14"},"nodeType":"YulFunctionCall","src":"1658:11:14"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:14"},"nodeType":"YulFunctionCall","src":"1632:38:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:14"},"nodeType":"YulFunctionCall","src":"1582:97:14"},"nodeType":"YulExpressionStatement","src":"1582:97:14"},{"nodeType":"YulVariableDeclaration","src":"1688:18:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:14","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:14","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:14","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:14"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:14","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:14"},"nodeType":"YulFunctionCall","src":"1858:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:14"},"nodeType":"YulFunctionCall","src":"1846:20:14"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:14","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:14"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:14"},"nodeType":"YulFunctionCall","src":"1893:35:14"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:14"},"nodeType":"YulFunctionCall","src":"2067:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:14"},"nodeType":"YulFunctionCall","src":"2061:26:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:14"},"nodeType":"YulFunctionCall","src":"2046:42:14"},"nodeType":"YulExpressionStatement","src":"2046:42:14"},{"nodeType":"YulAssignment","src":"2105:24:14","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:14"},"nodeType":"YulFunctionCall","src":"2115:14:14"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:14"}]},{"nodeType":"YulAssignment","src":"2146:40:14","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:14"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:14"},"nodeType":"YulFunctionCall","src":"2159:27:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:14"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:14"},"nodeType":"YulFunctionCall","src":"1972:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:14","statements":[{"nodeType":"YulAssignment","src":"1989:24:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:14"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:14"},"nodeType":"YulFunctionCall","src":"1994:19:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:14","statements":[]},"src":"1964:236:14"},{"body":{"nodeType":"YulBlock","src":"2248:166:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:14"},"nodeType":"YulFunctionCall","src":"2289:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:14"},"nodeType":"YulFunctionCall","src":"2283:26:14"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:14"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:14"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:14","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:14"},"nodeType":"YulFunctionCall","src":"2368:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:14","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:14"},"nodeType":"YulFunctionCall","src":"2364:24:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:14"},"nodeType":"YulFunctionCall","src":"2390:6:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:14"},"nodeType":"YulFunctionCall","src":"2360:37:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:14"},"nodeType":"YulFunctionCall","src":"2356:42:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:14"},"nodeType":"YulFunctionCall","src":"2341:58:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:14"},"nodeType":"YulFunctionCall","src":"2326:74:14"},"nodeType":"YulExpressionStatement","src":"2326:74:14"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:14"},"nodeType":"YulFunctionCall","src":"2216:19:14"},"nodeType":"YulIf","src":"2213:201:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:14","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:14"},"nodeType":"YulFunctionCall","src":"2444:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:14"},"nodeType":"YulFunctionCall","src":"2440:22:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:14"},"nodeType":"YulFunctionCall","src":"2427:36:14"},"nodeType":"YulExpressionStatement","src":"2427:36:14"}]},"nodeType":"YulCase","src":"1810:663:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:14","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:14","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:14","statements":[{"nodeType":"YulAssignment","src":"2571:35:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:14"},"nodeType":"YulFunctionCall","src":"2586:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:14"},"nodeType":"YulFunctionCall","src":"2580:26:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:14"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:14"},"nodeType":"YulIf","src":"2531:89:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:14"},"nodeType":"YulFunctionCall","src":"2646:67:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:14"},"nodeType":"YulFunctionCall","src":"2633:81:14"},"nodeType":"YulExpressionStatement","src":"2633:81:14"}]},"nodeType":"YulCase","src":"2482:242:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:14"},"nodeType":"YulFunctionCall","src":"1787:14:14"},"nodeType":"YulSwitch","src":"1780:944:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:14","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:14","type":""}],"src":"1378:1352:14"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052600880546001600160a01b03199081167382af49447d8a07e3bd95bd0d56f35241523fbab11790915560098054821673ff970a61a04b1ca14834a43f5de4533ebddb5cc8179055600a805490911673489ee077994b6658eafa855c308275ead8097c4a1790553480156200007757600080fd5b5060405180604001604052806008815260200167506f6c79706c757360c01b815250604051806040016040528060038152602001620504c560ec1b815250620000cf620000c96200010960201b60201c565b6200010d565b6004620000dd838262000202565b506005620000ec828262000202565b505060016006819055600c805460ff19169055600b5550620002ce565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018857607f821691505b602082108103620001a957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001fd57600081815260208120601f850160051c81016020861015620001d85750805b601f850160051c820191505b81811015620001f957828155600101620001e4565b5050505b505050565b81516001600160401b038111156200021e576200021e6200015d565b62000236816200022f845462000173565b84620001af565b602080601f8311600181146200026e5760008415620002555750858301515b600019600386901b1c1916600185901b178555620001f9565b600085815260208120601f198616915b828110156200029f578886015182559484019460019091019084016200027e565b5085821015620002be5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61237480620002de6000396000f3fe6080604052600436106101c45760003560e01c806370a08231116100f8578063a9059cbb11610090578063a9059cbb146104b3578063ad5c4648146104d3578063aedf795e146104f3578063b3b3453e14610523578063dd62ed3e14610543578063de9257cd14610563578063e6f091f91461057b578063ed61f4a1146105b4578063f2fde38b146105c957600080fd5b806370a082311461039f578063715018a6146103d557806389a30271146103ea5780638cd3f0641461040a5780638da5cb5b1461042a57806395d89b41146104485780639ecbfa421461045d578063a3673b381461047d578063a457c2d71461049357600080fd5b80632e1a7d4d1161016b5780632e1a7d4d146102e05780633027ac22146102f3578063313ce567146102fb578063350245c21461030f578063395093511461031757806347e7ef2414610337578063481d6ee91461034a5780635fa7b5841461036a5780636639a81d1461038a57600080fd5b80630677a2a5146101c957806306fdde03146101f9578063095ea7b31461021b57806311af7d951461024b57806318160ddd1461026d5780631cd2f7c81461028c57806323b872dd146102b857806328250e0d146102d8575b600080fd5b3480156101d557600080fd5b506007546001600160a01b03165b6040516101f09190611fe1565b60405180910390f35b34801561020557600080fd5b5061020e6105e9565b6040516101f09190611ff5565b34801561022757600080fd5b5061023b61023636600461205f565b61067b565b60405190151581526020016101f0565b34801561025757600080fd5b5061026b610266366004612089565b610695565b005b34801561027957600080fd5b506003545b6040519081526020016101f0565b34801561029857600080fd5b50600c546102a69060ff1681565b60405160ff90911681526020016101f0565b3480156102c457600080fd5b5061023b6102d33660046120ab565b6106bf565b61026b6106e3565b61026b6102ee3660046120e7565b61074e565b61026b610aa8565b34801561030757600080fd5b5060126102a6565b61026b610ae3565b34801561032357600080fd5b5061023b61033236600461205f565b610cc4565b61026b61034536600461205f565b610ce6565b34801561035657600080fd5b5061026b610365366004612100565b6111b6565b34801561037657600080fd5b5061026b610385366004612089565b611311565b34801561039657600080fd5b50600b5461027e565b3480156103ab57600080fd5b5061027e6103ba366004612089565b6001600160a01b031660009081526001602052604090205490565b3480156103e157600080fd5b5061026b6113d2565b3480156103f657600080fd5b506009546101e3906001600160a01b031681565b34801561041657600080fd5b5061026b610425366004612089565b6113e6565b34801561043657600080fd5b506000546001600160a01b03166101e3565b34801561045457600080fd5b5061020e6114a0565b34801561046957600080fd5b506007546101e3906001600160a01b031681565b34801561048957600080fd5b5061027e600b5481565b34801561049f57600080fd5b5061023b6104ae36600461205f565b6114af565b3480156104bf57600080fd5b5061023b6104ce36600461205f565b61152a565b3480156104df57600080fd5b506008546101e3906001600160a01b031681565b3480156104ff57600080fd5b5061023b61050e366004612089565b600d6020526000908152604090205460ff1681565b34801561052f57600080fd5b50600a546101e3906001600160a01b031681565b34801561054f57600080fd5b5061027e61055e366004612123565b611538565b34801561056f57600080fd5b50600c5460ff166102a6565b34801561058757600080fd5b5061023b610596366004612089565b6001600160a01b03166000908152600d602052604090205460ff1690565b3480156105c057600080fd5b5061026b611563565b3480156105d557600080fd5b5061026b6105e4366004612089565b611573565b6060600480546105f890612156565b80601f016020809104026020016040519081016040528092919081815260200182805461062490612156565b80156106715780601f1061064657610100808354040283529160200191610671565b820191906000526020600020905b81548152906001019060200180831161065457829003601f168201915b5050505050905090565b6000336106898185856115e9565b60019150505b92915050565b61069d61170e565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000336106cd858285611768565b6106d88585856117e2565b506001949350505050565b6106eb61170e565b600754604051637cb1759760e01b8152600160048201526001600160a01b0390911690637cb175979034906024015b6000604051808303818588803b15801561073357600080fd5b505af1158015610747573d6000803e3d6000fd5b5050505050565b61075661197b565b6000811161076357600080fd5b6040516370a0823160e01b8152819030906370a0823190610788903390600401611fe1565b602060405180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190612190565b10156108425760405162461bcd60e51b815260206004820152603a60248201527f53757270726973696e676c7920796f752063616e6e6f7420776974686472617760448201527f20746f6b656e20796f752068617665206e6f7420626f7567687400000000000060648201526084015b60405180910390fd5b600c5460009060ff1660011461085957600061085c565b60015b90506108666119d4565b6000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ca9190612190565b90506108d63384611dc8565b600c5460ff16600003610996576009546001600160a01b031663a9059cbb3361090c846c0c9f2c9cd04674edea400000006121bf565b600b5461091c88620f42406121bf565b61092691906121bf565b61093091906121d6565b6040518363ffffffff1660e01b815260040161094d9291906121f8565b6020604051808303816000875af115801561096c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109909190612221565b50610a4b565b6007546001600160a01b031663c5dac33b34336109c0856c0c9f2c9cd04674edea400000006121bf565b600b546109d089620f1b306121bf565b6109da91906121bf565b6109e491906121d6565b6040516001600160e01b031960e086901b1681526001600160a01b039092166004830152602482015285151560448201526064016000604051808303818588803b158015610a3157600080fd5b505af1158015610a45573d6000803e3d6000fd5b50505050505b600b546040805142815260208101869052908101919091526060810182905233907f7d655f729e74749ef66079e8380b356147309a7161212c83e699b8e7fb78781c9060800160405180910390a25050610aa56001600655565b50565b610ab061170e565b600754604051637cb1759760e01b8152600060048201526001600160a01b0390911690637cb1759790349060240161071a565b610aeb61170e565b600c5460009060ff16600114610b02576000610b05565b60015b6009546007546040516370a0823160e01b81529293506001600160a01b039182169263095ea7b3929091169083906370a0823190610b47903090600401611fe1565b602060405180830381865afa158015610b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b889190612190565b6040518363ffffffff1660e01b8152600401610ba59291906121f8565b6020604051808303816000875af1158015610bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be89190612221565b506007546009546040516370a0823160e01b81526001600160a01b0392831692631c5ecc069234929116906370a0823190610c27903090600401611fe1565b602060405180830381865afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190612190565b6040516001600160e01b031960e085901b168152600481019190915284151560248201526044016000604051808303818588803b158015610ca857600080fd5b505af1158015610cbc573d6000803e3d6000fd5b505050505050565b600033610689818585610cd78383611538565b610ce1919061223c565b6115e9565b610cee61197b565b6001600160a01b0382166000908152600d602052604090205460ff16610d505760405162461bcd60e51b8152602060048201526017602482015276151bdad95b881b9bdd081e595d081cdd5c1c1bdc9d1959604a1b6044820152606401610839565b60008111610da05760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e7420746f206465706f736974206973206d616e6461746f727900006044820152606401610839565b6000610dad6064836121d6565b610db7908361224f565b90506000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610df9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1d9190612190565b600003610e3a57610e338364e8d4a510006121bf565b9050610f6c565b610e426119d4565b600c5460ff16600003610edc57600b54306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb49190612190565b610ec88569d3c21bcecceda10000006121bf565b610ed291906121bf565b610e3391906121d6565b600b54306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f419190612190565b610f558469d3c21bcecceda10000006121bf565b610f5f91906121bf565b610f6991906121d6565b90505b610f763382611ee2565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610fc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fed9190612221565b5060075460405163095ea7b360e01b81526001600160a01b038681169263095ea7b392611022929091169087906004016121f8565b6020604051808303816000875af1158015611041573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110659190612221565b50600c5460ff166001036110df57600754604051630e2f660360e11b815260048101859052600160248201526001600160a01b0390911690631c5ecc069034906044016000604051808303818588803b1580156110c157600080fd5b505af11580156110d5573d6000803e3d6000fd5b5050505050611154565b600c5460ff1660020361115457600754604051630e2f660360e11b815260048101859052600060248201526001600160a01b0390911690631c5ecc069034906044016000604051808303818588803b15801561113a57600080fd5b505af115801561114e573d6000803e3d6000fd5b50505050505b604080514281526001600160a01b03861660208201529081018490526060810182905233907fc43285a6e98e6524bf49b1c1bdda72f38b968b31d2861d4422c0716e89b131819060800160405180910390a250506111b26001600655565b5050565b6111be61170e565b60ff811615806111d157508060ff166001145b806111df57508060ff166002145b61124a5760405162461bcd60e51b815260206004820152603660248201527f56616c7565206d757374206265203020666f72206e65757472616c2c203120666044820152751bdc88131bdb99c81bdc880c88199bdc8814da1bdc9d60521b6064820152608401610839565b600c5460ff8083169116036112b55760405162461bcd60e51b815260206004820152602b60248201527f52657665727465642062656361757365206578706f736974696f6e206861732060448201526a1b9bdd0818da185b99d95960aa1b6064820152608401610839565b600c805460ff19811660ff84811691821790935560408051428152939092166020840181905291830152907ffa0731d6f72a8f51cd2381cdd6778ccea1323c89d9b49a780eb07d809e4ce1699060600160405180910390a15050565b61131961170e565b6001600160a01b0381166000908152600d602052604090205460ff166113775760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081e595d081859191959606a1b6044820152606401610839565b6001600160a01b0381166000908152600d602052604090819020805460ff19169055517f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3906113c7908390611fe1565b60405180910390a150565b6113da61170e565b6113e46000611f91565b565b6113ee61170e565b6001600160a01b0381166000908152600d602052604090205460ff161561144d5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610839565b6001600160a01b0381166000908152600d602052604090819020805460ff19166001179055517fae340411f33c346ae24187433a8df6e508be40cf0deb3949d51cea12df7fa021906113c7908390611fe1565b6060600580546105f890612156565b600033816114bd8286611538565b90508381101561151d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610839565b6106d882868684036115e9565b6000336106898185856117e2565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61156b61170e565b6113e46119d4565b61157b61170e565b6001600160a01b0381166115e05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610839565b610aa581611f91565b6001600160a01b03831661164b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610839565b6001600160a01b0382166116ac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610839565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000546001600160a01b031633146113e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610839565b60006117748484611538565b905060001981146117dc57818110156117cf5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610839565b6117dc84848484036115e9565b50505050565b6001600160a01b0383166118465760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610839565b6001600160a01b0382166118a85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610839565b6001600160a01b038316600090815260016020526040902054818110156119205760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610839565b6001600160a01b03808516600081815260016020526040808220868603905592861680825290839020805486019055915160008051602061231f8339815191529061196e9086815260200190565b60405180910390a36117dc565b6002600654036119cd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610839565b6002600655565b600b546009546040516370a0823160e01b8152600091829182916001600160a01b0316906370a0823190611a0c903090600401611fe1565b602060405180830381865afa158015611a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4d9190612190565b611a619069d3c21bcecceda10000006121bf565b600a54600754600854604051634a3f088d60e01b81529394506000936001600160a01b0393841693634a3f088d93611aa793908216929116908190600190600401612262565b610100604051808303816000875af1158015611ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aeb919061228c565b5050505050509150506000811115611b8357600a5460075460085460405163045a6f3760e41b81526001600160a01b03938416936345a6f37093611b3d93908216929116908190600190600401612262565b60408051808303816000875af1158015611b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7f91906122f2565b9450505b6000611b8f858361223c565b600a54600754600954600854604051634a3f088d60e01b81529495506000946001600160a01b0394851694634a3f088d94611bd99490821693908216929116908790600401612262565b610100604051808303816000875af1158015611bf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1d919061228c565b5050505050509150506000811115611cba57600a5460075460095460085460405163045a6f3760e41b81526001600160a01b03948516946345a6f37094611c74949082169390821692911690600090600401612262565b60408051808303816000875af1158015611c92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb691906122f2565b9550505b6000611cc6868361224f565b905080611cd3848761223c565b611cdd919061223c565b600b819055507f059d0701380a5813cc605b68bc8aae0c943d3aecbfa3d35e11f8396e056eb6cc42600c60009054906101000a900460ff168a600b54898887306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7e9190612190565b6040805198895260ff9097166020890152958701949094526060860192909252608085015260a084015260c083015260e08201526101000160405180910390a15050505050505050565b6001600160a01b038216611e285760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610839565b6001600160a01b03821660009081526001602052604090205481811015611e9c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610839565b6001600160a01b038316600081815260016020908152604080832086860390556003805487900390555185815291929160008051602061231f8339815191529101611701565b6001600160a01b038216611f385760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610839565b8060036000828254611f4a919061223c565b90915550506001600160a01b03821660008181526001602090815260408083208054860190555184815260008051602061231f833981519152910160405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0391909116815260200190565b600060208083528351808285015260005b8181101561202257858101830151858201604001528201612006565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461205a57600080fd5b919050565b6000806040838503121561207257600080fd5b61207b83612043565b946020939093013593505050565b60006020828403121561209b57600080fd5b6120a482612043565b9392505050565b6000806000606084860312156120c057600080fd5b6120c984612043565b92506120d760208501612043565b9150604084013590509250925092565b6000602082840312156120f957600080fd5b5035919050565b60006020828403121561211257600080fd5b813560ff811681146120a457600080fd5b6000806040838503121561213657600080fd5b61213f83612043565b915061214d60208401612043565b90509250929050565b600181811c9082168061216a57607f821691505b60208210810361218a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156121a257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761068f5761068f6121a9565b6000826121f357634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03929092168252602082015260400190565b8051801515811461205a57600080fd5b60006020828403121561223357600080fd5b6120a482612211565b8082018082111561068f5761068f6121a9565b8181038181111561068f5761068f6121a9565b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b600080600080600080600080610100898b0312156122a957600080fd5b885197506020890151965060408901519550606089015194506080890151935060a089015192506122dc60c08a01612211565b915060e089015190509295985092959890939650565b6000806040838503121561230557600080fd5b61230e83612211565b915060208301519050925092905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122047b8c68e053c0b01a377d9dbfb08d147c5437f7b11c6444c87789e45468e78f164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x82AF49447D8A07E3BD95BD0D56F35241523FBAB1 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 AND PUSH20 0xFF970A61A04B1CA14834A43F5DE4533EBDDB5CC8 OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x489EE077994B6658EAFA855C308275EAD8097C4A OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x506F6C79706C7573 PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x504C5 PUSH1 0xEC SHL DUP2 MSTORE POP PUSH3 0xCF PUSH3 0xC9 PUSH3 0x109 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x10D JUMP JUMPDEST PUSH1 0x4 PUSH3 0xDD DUP4 DUP3 PUSH3 0x202 JUMP JUMPDEST POP PUSH1 0x5 PUSH3 0xEC DUP3 DUP3 PUSH3 0x202 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0xB SSTORE POP PUSH3 0x2CE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x188 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1FD JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1D8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1F9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1E4 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x21E JUMPI PUSH3 0x21E PUSH3 0x15D JUMP JUMPDEST PUSH3 0x236 DUP2 PUSH3 0x22F DUP5 SLOAD PUSH3 0x173 JUMP JUMPDEST DUP5 PUSH3 0x1AF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x26E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x255 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1F9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x29F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x27E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2BE JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2374 DUP1 PUSH3 0x2DE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x90 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xAEDF795E EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xB3B3453E EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xDE9257CD EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0xE6F091F9 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xED61F4A1 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x8CD3F064 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x9ECBFA42 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xA3673B38 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x16B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x3027AC22 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x350245C2 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x481D6EE9 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x6639A81D EQ PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x677A2A5 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x11AF7D95 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x1CD2F7C8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x28250E0D EQ PUSH2 0x2D8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1FF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x20AB JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x26B PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH2 0x26B PUSH2 0xAA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x26B PUSH2 0xAE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0xCE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x2100 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x1311 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x27E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x13D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x13E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x14A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0x14AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x4CE CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0x152A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x50E CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x2123 JUMP JUMPDEST PUSH2 0x1538 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x596 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x1563 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x5E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5F8 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x624 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x671 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x646 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x671 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x654 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x689 DUP2 DUP6 DUP6 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69D PUSH2 0x170E JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6CD DUP6 DUP3 DUP6 PUSH2 0x1768 JUMP JUMPDEST PUSH2 0x6D8 DUP6 DUP6 DUP6 PUSH2 0x17E2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x6EB PUSH2 0x170E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7CB17597 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7CB17597 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x756 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x788 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST LT ISZERO PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53757270726973696E676C7920796F752063616E6E6F74207769746864726177 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20746F6B656E20796F752068617665206E6F7420626F75676874000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x859 JUMPI PUSH1 0x0 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x866 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST SWAP1 POP PUSH2 0x8D6 CALLER DUP5 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x996 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH2 0x90C DUP5 PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x91C DUP9 PUSH3 0xF4240 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x930 SWAP2 SWAP1 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94D SWAP3 SWAP2 SWAP1 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x990 SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST POP PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC5DAC33B CALLVALUE CALLER PUSH2 0x9C0 DUP6 PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x9D0 DUP10 PUSH3 0xF1B30 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP6 ISZERO ISZERO PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x7D655F729E74749EF66079E8380B356147309A7161212C83E699B8E7FB78781C SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xAA5 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7CB17597 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7CB17597 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH2 0x71A JUMP JUMPDEST PUSH2 0xAEB PUSH2 0x170E JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0xB02 JUMPI PUSH1 0x0 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xB47 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB88 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP3 SWAP2 SWAP1 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE8 SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x1C5ECC06 SWAP3 CALLVALUE SWAP3 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xC27 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x689 DUP2 DUP6 DUP6 PUSH2 0xCD7 DUP4 DUP4 PUSH2 0x1538 JUMP JUMPDEST PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x223C JUMP JUMPDEST PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0xCEE PUSH2 0x197B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x151BDAD95B881B9BDD081E595D081CDD5C1C1BDC9D1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xDA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F206465706F736974206973206D616E6461746F72790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD PUSH1 0x64 DUP4 PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0xDB7 SWAP1 DUP4 PUSH2 0x224F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE1D SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x0 SUB PUSH2 0xE3A JUMPI PUSH2 0xE33 DUP4 PUSH5 0xE8D4A51000 PUSH2 0x21BF JUMP JUMPDEST SWAP1 POP PUSH2 0xF6C JUMP JUMPDEST PUSH2 0xE42 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0xEDC JUMPI PUSH1 0xB SLOAD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0xEC8 DUP6 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0xED2 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0xB SLOAD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF41 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0xF55 DUP5 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0xF69 SWAP2 SWAP1 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xF76 CALLER DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFED SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x1022 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1041 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1065 SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x1 SUB PUSH2 0x10DF JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE2F6603 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x1C5ECC06 SWAP1 CALLVALUE SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1154 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 SUB PUSH2 0x1154 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE2F6603 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x1C5ECC06 SWAP1 CALLVALUE SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x114E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0xC43285A6E98E6524BF49B1C1BDDA72F38B968B31D2861D4422C0716E89B13181 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x11B2 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11BE PUSH2 0x170E JUMP JUMPDEST PUSH1 0xFF DUP2 AND ISZERO DUP1 PUSH2 0x11D1 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST DUP1 PUSH2 0x11DF JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x2 EQ JUMPDEST PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C7565206D757374206265203020666F72206E65757472616C2C20312066 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1BDC88131BDB99C81BDC880C88199BDC8814DA1BDC9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP2 AND SUB PUSH2 0x12B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657665727465642062656361757365206578706F736974696F6E2068617320 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1B9BDD0818DA185B99D959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 DUP4 ADD MSTORE SWAP1 PUSH32 0xFA0731D6F72A8F51CD2381CDD6778CCEA1323C89D9B49A780EB07D809E4CE169 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1319 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1377 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881B9BDD081E595D081859191959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x4C910B69FE65A61F7531B9C5042B2329CA7179C77290AA7E2EB3AFA3C8511FD3 SWAP1 PUSH2 0x13C7 SWAP1 DUP4 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x13DA PUSH2 0x170E JUMP JUMPDEST PUSH2 0x13E4 PUSH1 0x0 PUSH2 0x1F91 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13EE PUSH2 0x170E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x144D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B88185B1C9958591E481859191959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xAE340411F33C346AE24187433A8DF6E508BE40CF0DEB3949D51CEA12DF7FA021 SWAP1 PUSH2 0x13C7 SWAP1 DUP4 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x5F8 SWAP1 PUSH2 0x2156 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x14BD DUP3 DUP7 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x151D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH2 0x6D8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x689 DUP2 DUP6 DUP6 PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x156B PUSH2 0x170E JUMP JUMPDEST PUSH2 0x13E4 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0x157B PUSH2 0x170E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH2 0xAA5 DUP2 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x164B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1774 DUP5 DUP5 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x17DC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x17CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH2 0x17DC DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x15E9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1846 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x196E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x19CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1A0C SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A4D SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0x1A61 SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A3F088D PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP5 POP PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0x4A3F088D SWAP4 PUSH2 0x1AA7 SWAP4 SWAP1 DUP3 AND SWAP3 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2262 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AEB SWAP2 SWAP1 PUSH2 0x228C JUMP JUMPDEST POP POP POP POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1B83 JUMPI PUSH1 0xA SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x45A6F37 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0x45A6F370 SWAP4 PUSH2 0x1B3D SWAP4 SWAP1 DUP3 AND SWAP3 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B5B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B7F SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST SWAP5 POP POP JUMPDEST PUSH1 0x0 PUSH2 0x1B8F DUP6 DUP4 PUSH2 0x223C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A3F088D PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP6 POP PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x4A3F088D SWAP5 PUSH2 0x1BD9 SWAP5 SWAP1 DUP3 AND SWAP4 SWAP1 DUP3 AND SWAP3 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2262 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C1D SWAP2 SWAP1 PUSH2 0x228C JUMP JUMPDEST POP POP POP POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1CBA JUMPI PUSH1 0xA SLOAD PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x45A6F37 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x45A6F370 SWAP5 PUSH2 0x1C74 SWAP5 SWAP1 DUP3 AND SWAP4 SWAP1 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CB6 SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST SWAP6 POP POP JUMPDEST PUSH1 0x0 PUSH2 0x1CC6 DUP7 DUP4 PUSH2 0x224F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1CD3 DUP5 DUP8 PUSH2 0x223C JUMP JUMPDEST PUSH2 0x1CDD SWAP2 SWAP1 PUSH2 0x223C JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0x59D0701380A5813CC605B68BC8AAE0C943D3AECBFA3D35E11F8396E056EB6CC TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH1 0xB SLOAD DUP10 DUP9 DUP8 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0xFF SWAP1 SWAP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1E9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F4A SWAP2 SWAP1 PUSH2 0x223C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2022 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2006 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x205A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2072 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x207B DUP4 PUSH2 0x2043 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x209B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A4 DUP3 PUSH2 0x2043 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20C9 DUP5 PUSH2 0x2043 JUMP JUMPDEST SWAP3 POP PUSH2 0x20D7 PUSH1 0x20 DUP6 ADD PUSH2 0x2043 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x20A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213F DUP4 PUSH2 0x2043 JUMP JUMPDEST SWAP2 POP PUSH2 0x214D PUSH1 0x20 DUP5 ADD PUSH2 0x2043 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x216A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x218A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x68F JUMPI PUSH2 0x68F PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x205A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A4 DUP3 PUSH2 0x2211 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x68F JUMPI PUSH2 0x68F PUSH2 0x21A9 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x68F JUMPI PUSH2 0x68F PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x22A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 MLOAD SWAP8 POP PUSH1 0x20 DUP10 ADD MLOAD SWAP7 POP PUSH1 0x40 DUP10 ADD MLOAD SWAP6 POP PUSH1 0x60 DUP10 ADD MLOAD SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD MLOAD SWAP3 POP PUSH2 0x22DC PUSH1 0xC0 DUP11 ADD PUSH2 0x2211 JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x230E DUP4 PUSH2 0x2211 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB8 0xC6 DUP15 SDIV EXTCODECOPY SIGNEXTEND ADD LOG3 PUSH24 0xD9DBFB08D147C5437F7B11C6444C87789E45468E78F16473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"1790:9528:7:-:0;;;1940:64;;;-1:-1:-1;;;;;;1940:64:7;;;1962:42;1940:64;;;;2010;;;;;2032:42;2010:64;;;2080:68;;;;;;2106:42;2080:68;;;3072:97;;;;;;;;;;1976:113:10;;;;;;;;;;;;;-1:-1:-1;;;1976:113:10;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:10;;;936:32:8;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;2042:5:10;:13;2050:5;2042;:13;:::i;:::-;-1:-1:-1;2065:7:10;:17;2075:7;2065;:17;:::i;:::-;-1:-1:-1;;1716:1:9;1821:7;:22;;;3121:10:7::1;:14:::0;;-1:-1:-1;;3121:14:7::1;::::0;;3145:13:::1;:17:::0;-1:-1:-1;1790:9528:7;;640:96:13;719:10;;640:96::o;2433:187:8:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:8;;;-1:-1:-1;;;;;;2541:17:8;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:127:14:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:14;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:14;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:14;;;2580:26;2531:89;-1:-1:-1;;1335:1:14;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:14;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:14;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:14;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:14:o;:::-;1790:9528:7;;;;;;"},"deployedBytecode":{"functionDebugData":{"@GMX_controller_1696":{"entryPoint":null,"id":1696,"parameterSlots":0,"returnSlots":0},"@USDC_1702":{"entryPoint":null,"id":1702,"parameterSlots":0,"returnSlots":0},"@WETH_1699":{"entryPoint":null,"id":1699,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_3270":{"entryPoint":null,"id":3270,"parameterSlots":3,"returnSlots":0},"@_approve_3205":{"entryPoint":5609,"id":3205,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_3259":{"entryPoint":null,"id":3259,"parameterSlots":3,"returnSlots":0},"@_burn_3160":{"entryPoint":7624,"id":3160,"parameterSlots":2,"returnSlots":0},"@_checkOwner_2494":{"entryPoint":5902,"id":2494,"parameterSlots":0,"returnSlots":0},"@_mint_3088":{"entryPoint":7906,"id":3088,"parameterSlots":2,"returnSlots":0},"@_msgSender_3283":{"entryPoint":null,"id":3283,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_2683":{"entryPoint":null,"id":2683,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_2675":{"entryPoint":6523,"id":2675,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_3248":{"entryPoint":5992,"id":3248,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_2551":{"entryPoint":8081,"id":2551,"parameterSlots":1,"returnSlots":0},"@_transfer_3031":{"entryPoint":6114,"id":3031,"parameterSlots":3,"returnSlots":0},"@_updateNAV_2146":{"entryPoint":6612,"id":2146,"parameterSlots":0,"returnSlots":0},"@acceptToken_1814":{"entryPoint":5094,"id":1814,"parameterSlots":1,"returnSlots":0},"@allowance_2826":{"entryPoint":5432,"id":2826,"parameterSlots":2,"returnSlots":1},"@approve_2851":{"entryPoint":1659,"id":2851,"parameterSlots":2,"returnSlots":1},"@balanceOf_2783":{"entryPoint":null,"id":2783,"parameterSlots":1,"returnSlots":1},"@decimals_2759":{"entryPoint":null,"id":2759,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_2954":{"entryPoint":5295,"id":2954,"parameterSlots":2,"returnSlots":1},"@deposit_2319":{"entryPoint":3302,"id":2319,"parameterSlots":2,"returnSlots":0},"@exposition_1709":{"entryPoint":null,"id":1709,"parameterSlots":0,"returnSlots":0},"@getExposition_1926":{"entryPoint":null,"id":1926,"parameterSlots":0,"returnSlots":1},"@getGMX_controller_1872":{"entryPoint":null,"id":1872,"parameterSlots":0,"returnSlots":1},"@getNetAssetValue_2154":{"entryPoint":null,"id":2154,"parameterSlots":0,"returnSlots":1},"@gmxVault_1705":{"entryPoint":null,"id":1705,"parameterSlots":0,"returnSlots":0},"@increaseAllowance_2913":{"entryPoint":3268,"id":2913,"parameterSlots":2,"returnSlots":1},"@isAccepted_1851":{"entryPoint":null,"id":1851,"parameterSlots":1,"returnSlots":1},"@liquidateLongPositions_1993":{"entryPoint":1763,"id":1993,"parameterSlots":0,"returnSlots":0},"@liquidateShortPositions_2009":{"entryPoint":2728,"id":2009,"parameterSlots":0,"returnSlots":0},"@name_2739":{"entryPoint":1513,"id":2739,"parameterSlots":0,"returnSlots":1},"@netAssetValue_1707":{"entryPoint":null,"id":1707,"parameterSlots":0,"returnSlots":0},"@openPosition_1977":{"entryPoint":2787,"id":1977,"parameterSlots":0,"returnSlots":0},"@owner_2480":{"entryPoint":null,"id":2480,"parameterSlots":0,"returnSlots":1},"@removeToken_1839":{"entryPoint":4881,"id":1839,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_2508":{"entryPoint":5074,"id":2508,"parameterSlots":0,"returnSlots":0},"@setExposition_1918":{"entryPoint":4534,"id":1918,"parameterSlots":1,"returnSlots":0},"@setGMX_controller_1864":{"entryPoint":1685,"id":1864,"parameterSlots":1,"returnSlots":0},"@symbol_2749":{"entryPoint":5280,"id":2749,"parameterSlots":0,"returnSlots":1},"@tokenAccepted_1713":{"entryPoint":null,"id":1713,"parameterSlots":0,"returnSlots":0},"@totalSupply_2769":{"entryPoint":null,"id":2769,"parameterSlots":0,"returnSlots":1},"@transferFrom_2884":{"entryPoint":1727,"id":2884,"parameterSlots":3,"returnSlots":1},"@transferOwnership_2531":{"entryPoint":5491,"id":2531,"parameterSlots":1,"returnSlots":0},"@transfer_2808":{"entryPoint":5418,"id":2808,"parameterSlots":2,"returnSlots":1},"@updateNetAssetValue_2018":{"entryPoint":5475,"id":2018,"parameterSlots":0,"returnSlots":0},"@withdraw_2438":{"entryPoint":1870,"id":2438,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":8259,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":8721,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8329,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8483,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8363,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8287,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":8737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_boolt_uint256_fromMemory":{"entryPoint":8946,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":8423,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":8592,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_boolt_uint256_fromMemory":{"entryPoint":8844,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint8":{"entryPoint":8448,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed":{"entryPoint":8802,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":8696,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8181,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52d90a938daabda05345b9aef9e7779cbd5d6bc0180cee74cefd48169a1ef171__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5afa3c68da99f9c706d4cfbb3e913b69eb39756da071000ff92271256228d823__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_696c342f151b66dcdb26f32ec1a6f12351d8d6902ae815ec1ce92b973d52a75e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6faa7cc3f5a0b3b09fdfe3c4762b2201fc2409af009c169306b02a5773520d47__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_723d2dc24cdf3c05f0d5e97afb39e416e5e033aeca8107200eff0271fb221805__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_827abac9121d6a19f7fbad0bf16d0482f475e2c96ee41db78cf0eda460234622__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint8_t_uint8__to_t_uint256_t_uint8_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8764,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8662,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8639,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8783,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":8534,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8617,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17018:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:14","statements":[{"nodeType":"YulAssignment","src":"125:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:14"},"nodeType":"YulFunctionCall","src":"133:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:14"},"nodeType":"YulFunctionCall","src":"194:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:14"},"nodeType":"YulFunctionCall","src":"190:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:14"},"nodeType":"YulFunctionCall","src":"178:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:14"},"nodeType":"YulFunctionCall","src":"160:51:14"},"nodeType":"YulExpressionStatement","src":"160:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:14","type":""}],"src":"14:203:14"},{"body":{"nodeType":"YulBlock","src":"343:427:14","statements":[{"nodeType":"YulVariableDeclaration","src":"353:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"363:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"357:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"381:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"392:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"374:6:14"},"nodeType":"YulFunctionCall","src":"374:21:14"},"nodeType":"YulExpressionStatement","src":"374:21:14"},{"nodeType":"YulVariableDeclaration","src":"404:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"424:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"418:5:14"},"nodeType":"YulFunctionCall","src":"418:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"408:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"451:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"462:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"447:3:14"},"nodeType":"YulFunctionCall","src":"447:18:14"},{"name":"length","nodeType":"YulIdentifier","src":"467:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"440:6:14"},"nodeType":"YulFunctionCall","src":"440:34:14"},"nodeType":"YulExpressionStatement","src":"440:34:14"},{"nodeType":"YulVariableDeclaration","src":"483:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"492:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"487:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"552:90:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"581:9:14"},{"name":"i","nodeType":"YulIdentifier","src":"592:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"577:3:14"},"nodeType":"YulFunctionCall","src":"577:17:14"},{"kind":"number","nodeType":"YulLiteral","src":"596:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"573:3:14"},"nodeType":"YulFunctionCall","src":"573:26:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"615:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"623:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:14"},"nodeType":"YulFunctionCall","src":"611:14:14"},{"name":"_1","nodeType":"YulIdentifier","src":"627:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"607:3:14"},"nodeType":"YulFunctionCall","src":"607:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"601:5:14"},"nodeType":"YulFunctionCall","src":"601:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"566:6:14"},"nodeType":"YulFunctionCall","src":"566:66:14"},"nodeType":"YulExpressionStatement","src":"566:66:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"513:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"510:2:14"},"nodeType":"YulFunctionCall","src":"510:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"524:19:14","statements":[{"nodeType":"YulAssignment","src":"526:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"535:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"538:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"531:3:14"},"nodeType":"YulFunctionCall","src":"531:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"526:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"506:3:14","statements":[]},"src":"502:140:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"666:9:14"},{"name":"length","nodeType":"YulIdentifier","src":"677:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"662:3:14"},"nodeType":"YulFunctionCall","src":"662:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"686:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"658:3:14"},"nodeType":"YulFunctionCall","src":"658:31:14"},{"kind":"number","nodeType":"YulLiteral","src":"691:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"651:6:14"},"nodeType":"YulFunctionCall","src":"651:42:14"},"nodeType":"YulExpressionStatement","src":"651:42:14"},{"nodeType":"YulAssignment","src":"702:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"718:9:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"737:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"745:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:14"},"nodeType":"YulFunctionCall","src":"733:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"754:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"750:3:14"},"nodeType":"YulFunctionCall","src":"750:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"729:3:14"},"nodeType":"YulFunctionCall","src":"729:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"714:3:14"},"nodeType":"YulFunctionCall","src":"714:45:14"},{"kind":"number","nodeType":"YulLiteral","src":"761:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"710:3:14"},"nodeType":"YulFunctionCall","src":"710:54:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"702:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"312:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"323:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"334:4:14","type":""}],"src":"222:548:14"},{"body":{"nodeType":"YulBlock","src":"824:124:14","statements":[{"nodeType":"YulAssignment","src":"834:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"856:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"843:12:14"},"nodeType":"YulFunctionCall","src":"843:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"834:5:14"}]},{"body":{"nodeType":"YulBlock","src":"926:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"938:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"928:6:14"},"nodeType":"YulFunctionCall","src":"928:12:14"},"nodeType":"YulExpressionStatement","src":"928:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"885:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"896:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"911:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"916:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"907:3:14"},"nodeType":"YulFunctionCall","src":"907:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"920:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"903:3:14"},"nodeType":"YulFunctionCall","src":"903:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"892:3:14"},"nodeType":"YulFunctionCall","src":"892:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"882:2:14"},"nodeType":"YulFunctionCall","src":"882:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"875:6:14"},"nodeType":"YulFunctionCall","src":"875:50:14"},"nodeType":"YulIf","src":"872:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"803:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"814:5:14","type":""}],"src":"775:173:14"},{"body":{"nodeType":"YulBlock","src":"1040:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"1086:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1095:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1098:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1088:6:14"},"nodeType":"YulFunctionCall","src":"1088:12:14"},"nodeType":"YulExpressionStatement","src":"1088:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1061:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1070:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1057:3:14"},"nodeType":"YulFunctionCall","src":"1057:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1082:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1053:3:14"},"nodeType":"YulFunctionCall","src":"1053:32:14"},"nodeType":"YulIf","src":"1050:52:14"},{"nodeType":"YulAssignment","src":"1111:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1140:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1121:18:14"},"nodeType":"YulFunctionCall","src":"1121:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1111:6:14"}]},{"nodeType":"YulAssignment","src":"1159:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1186:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1197:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1182:3:14"},"nodeType":"YulFunctionCall","src":"1182:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1169:12:14"},"nodeType":"YulFunctionCall","src":"1169:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1159:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"998:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1009:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1021:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1029:6:14","type":""}],"src":"953:254:14"},{"body":{"nodeType":"YulBlock","src":"1307:92:14","statements":[{"nodeType":"YulAssignment","src":"1317:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1329:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1340:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1325:3:14"},"nodeType":"YulFunctionCall","src":"1325:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1317:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1359:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1384:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1377:6:14"},"nodeType":"YulFunctionCall","src":"1377:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1370:6:14"},"nodeType":"YulFunctionCall","src":"1370:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1352:6:14"},"nodeType":"YulFunctionCall","src":"1352:41:14"},"nodeType":"YulExpressionStatement","src":"1352:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1276:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1287:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1298:4:14","type":""}],"src":"1212:187:14"},{"body":{"nodeType":"YulBlock","src":"1474:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"1520:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1529:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1532:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1522:6:14"},"nodeType":"YulFunctionCall","src":"1522:12:14"},"nodeType":"YulExpressionStatement","src":"1522:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1495:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1504:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1491:3:14"},"nodeType":"YulFunctionCall","src":"1491:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1516:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1487:3:14"},"nodeType":"YulFunctionCall","src":"1487:32:14"},"nodeType":"YulIf","src":"1484:52:14"},{"nodeType":"YulAssignment","src":"1545:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1574:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1555:18:14"},"nodeType":"YulFunctionCall","src":"1555:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1545:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1440:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1451:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1463:6:14","type":""}],"src":"1404:186:14"},{"body":{"nodeType":"YulBlock","src":"1696:76:14","statements":[{"nodeType":"YulAssignment","src":"1706:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1718:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1729:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1714:3:14"},"nodeType":"YulFunctionCall","src":"1714:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1706:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1748:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"1759:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1741:6:14"},"nodeType":"YulFunctionCall","src":"1741:25:14"},"nodeType":"YulExpressionStatement","src":"1741:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1665:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1676:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1687:4:14","type":""}],"src":"1595:177:14"},{"body":{"nodeType":"YulBlock","src":"1874:87:14","statements":[{"nodeType":"YulAssignment","src":"1884:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1896:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1907:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1892:3:14"},"nodeType":"YulFunctionCall","src":"1892:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1884:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1926:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1941:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1937:3:14"},"nodeType":"YulFunctionCall","src":"1937:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1919:6:14"},"nodeType":"YulFunctionCall","src":"1919:36:14"},"nodeType":"YulExpressionStatement","src":"1919:36:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1843:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1854:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1865:4:14","type":""}],"src":"1777:184:14"},{"body":{"nodeType":"YulBlock","src":"2070:224:14","statements":[{"body":{"nodeType":"YulBlock","src":"2116:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2125:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2128:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2118:6:14"},"nodeType":"YulFunctionCall","src":"2118:12:14"},"nodeType":"YulExpressionStatement","src":"2118:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2091:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2100:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2087:3:14"},"nodeType":"YulFunctionCall","src":"2087:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2112:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2083:3:14"},"nodeType":"YulFunctionCall","src":"2083:32:14"},"nodeType":"YulIf","src":"2080:52:14"},{"nodeType":"YulAssignment","src":"2141:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2170:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2151:18:14"},"nodeType":"YulFunctionCall","src":"2151:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2141:6:14"}]},{"nodeType":"YulAssignment","src":"2189:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2222:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2233:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2218:3:14"},"nodeType":"YulFunctionCall","src":"2218:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2199:18:14"},"nodeType":"YulFunctionCall","src":"2199:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2189:6:14"}]},{"nodeType":"YulAssignment","src":"2246:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2273:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2284:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2269:3:14"},"nodeType":"YulFunctionCall","src":"2269:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2256:12:14"},"nodeType":"YulFunctionCall","src":"2256:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2246:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2020:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2031:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2043:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2051:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2059:6:14","type":""}],"src":"1966:328:14"},{"body":{"nodeType":"YulBlock","src":"2369:110:14","statements":[{"body":{"nodeType":"YulBlock","src":"2415:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2424:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2427:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2417:6:14"},"nodeType":"YulFunctionCall","src":"2417:12:14"},"nodeType":"YulExpressionStatement","src":"2417:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2390:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2399:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2386:3:14"},"nodeType":"YulFunctionCall","src":"2386:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2411:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2382:3:14"},"nodeType":"YulFunctionCall","src":"2382:32:14"},"nodeType":"YulIf","src":"2379:52:14"},{"nodeType":"YulAssignment","src":"2440:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2463:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2450:12:14"},"nodeType":"YulFunctionCall","src":"2450:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2440:6:14"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2335:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2346:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2358:6:14","type":""}],"src":"2299:180:14"},{"body":{"nodeType":"YulBlock","src":"2552:201:14","statements":[{"body":{"nodeType":"YulBlock","src":"2598:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2607:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2610:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2600:6:14"},"nodeType":"YulFunctionCall","src":"2600:12:14"},"nodeType":"YulExpressionStatement","src":"2600:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2573:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2582:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2569:3:14"},"nodeType":"YulFunctionCall","src":"2569:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2594:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2565:3:14"},"nodeType":"YulFunctionCall","src":"2565:32:14"},"nodeType":"YulIf","src":"2562:52:14"},{"nodeType":"YulVariableDeclaration","src":"2623:36:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2649:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2636:12:14"},"nodeType":"YulFunctionCall","src":"2636:23:14"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2627:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2707:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2716:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2719:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2709:6:14"},"nodeType":"YulFunctionCall","src":"2709:12:14"},"nodeType":"YulExpressionStatement","src":"2709:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2681:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2692:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2699:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2688:3:14"},"nodeType":"YulFunctionCall","src":"2688:16:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2678:2:14"},"nodeType":"YulFunctionCall","src":"2678:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2671:6:14"},"nodeType":"YulFunctionCall","src":"2671:35:14"},"nodeType":"YulIf","src":"2668:55:14"},{"nodeType":"YulAssignment","src":"2732:15:14","value":{"name":"value","nodeType":"YulIdentifier","src":"2742:5:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2732:6:14"}]}]},"name":"abi_decode_tuple_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2518:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2529:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2541:6:14","type":""}],"src":"2484:269:14"},{"body":{"nodeType":"YulBlock","src":"2845:173:14","statements":[{"body":{"nodeType":"YulBlock","src":"2891:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2900:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2903:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2893:6:14"},"nodeType":"YulFunctionCall","src":"2893:12:14"},"nodeType":"YulExpressionStatement","src":"2893:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2866:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2875:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2862:3:14"},"nodeType":"YulFunctionCall","src":"2862:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2887:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2858:3:14"},"nodeType":"YulFunctionCall","src":"2858:32:14"},"nodeType":"YulIf","src":"2855:52:14"},{"nodeType":"YulAssignment","src":"2916:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2945:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2926:18:14"},"nodeType":"YulFunctionCall","src":"2926:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2916:6:14"}]},{"nodeType":"YulAssignment","src":"2964:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2997:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3008:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2993:3:14"},"nodeType":"YulFunctionCall","src":"2993:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2974:18:14"},"nodeType":"YulFunctionCall","src":"2974:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2964:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2803:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2814:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2826:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2834:6:14","type":""}],"src":"2758:260:14"},{"body":{"nodeType":"YulBlock","src":"3078:325:14","statements":[{"nodeType":"YulAssignment","src":"3088:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3102:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3105:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3098:3:14"},"nodeType":"YulFunctionCall","src":"3098:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3088:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"3119:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3149:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"3155:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3145:3:14"},"nodeType":"YulFunctionCall","src":"3145:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3123:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3196:31:14","statements":[{"nodeType":"YulAssignment","src":"3198:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3212:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3220:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3208:3:14"},"nodeType":"YulFunctionCall","src":"3208:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3198:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3176:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3169:6:14"},"nodeType":"YulFunctionCall","src":"3169:26:14"},"nodeType":"YulIf","src":"3166:61:14"},{"body":{"nodeType":"YulBlock","src":"3286:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3307:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3314:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3319:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3310:3:14"},"nodeType":"YulFunctionCall","src":"3310:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3300:6:14"},"nodeType":"YulFunctionCall","src":"3300:31:14"},"nodeType":"YulExpressionStatement","src":"3300:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3351:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3354:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3344:6:14"},"nodeType":"YulFunctionCall","src":"3344:15:14"},"nodeType":"YulExpressionStatement","src":"3344:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3379:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3382:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3372:6:14"},"nodeType":"YulFunctionCall","src":"3372:15:14"},"nodeType":"YulExpressionStatement","src":"3372:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3242:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3265:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3273:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3262:2:14"},"nodeType":"YulFunctionCall","src":"3262:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3239:2:14"},"nodeType":"YulFunctionCall","src":"3239:38:14"},"nodeType":"YulIf","src":"3236:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3058:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3067:6:14","type":""}],"src":"3023:380:14"},{"body":{"nodeType":"YulBlock","src":"3489:103:14","statements":[{"body":{"nodeType":"YulBlock","src":"3535:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3544:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3547:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3537:6:14"},"nodeType":"YulFunctionCall","src":"3537:12:14"},"nodeType":"YulExpressionStatement","src":"3537:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3510:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3519:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3506:3:14"},"nodeType":"YulFunctionCall","src":"3506:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3531:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3502:3:14"},"nodeType":"YulFunctionCall","src":"3502:32:14"},"nodeType":"YulIf","src":"3499:52:14"},{"nodeType":"YulAssignment","src":"3560:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3576:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3570:5:14"},"nodeType":"YulFunctionCall","src":"3570:16:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3560:6:14"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3455:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3466:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3478:6:14","type":""}],"src":"3408:184:14"},{"body":{"nodeType":"YulBlock","src":"3771:248:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3788:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3799:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3781:6:14"},"nodeType":"YulFunctionCall","src":"3781:21:14"},"nodeType":"YulExpressionStatement","src":"3781:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3822:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3833:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3818:3:14"},"nodeType":"YulFunctionCall","src":"3818:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3838:2:14","type":"","value":"58"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3811:6:14"},"nodeType":"YulFunctionCall","src":"3811:30:14"},"nodeType":"YulExpressionStatement","src":"3811:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3861:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3872:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3857:3:14"},"nodeType":"YulFunctionCall","src":"3857:18:14"},{"hexValue":"53757270726973696e676c7920796f752063616e6e6f74207769746864726177","kind":"string","nodeType":"YulLiteral","src":"3877:34:14","type":"","value":"Surprisingly you cannot withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3850:6:14"},"nodeType":"YulFunctionCall","src":"3850:62:14"},"nodeType":"YulExpressionStatement","src":"3850:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3932:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3943:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3928:3:14"},"nodeType":"YulFunctionCall","src":"3928:18:14"},{"hexValue":"20746f6b656e20796f752068617665206e6f7420626f75676874","kind":"string","nodeType":"YulLiteral","src":"3948:28:14","type":"","value":" token you have not bought"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3921:6:14"},"nodeType":"YulFunctionCall","src":"3921:56:14"},"nodeType":"YulExpressionStatement","src":"3921:56:14"},{"nodeType":"YulAssignment","src":"3986:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4009:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3994:3:14"},"nodeType":"YulFunctionCall","src":"3994:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3986:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_827abac9121d6a19f7fbad0bf16d0482f475e2c96ee41db78cf0eda460234622__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3748:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3762:4:14","type":""}],"src":"3597:422:14"},{"body":{"nodeType":"YulBlock","src":"4056:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4073:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4085:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4076:3:14"},"nodeType":"YulFunctionCall","src":"4076:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4066:6:14"},"nodeType":"YulFunctionCall","src":"4066:31:14"},"nodeType":"YulExpressionStatement","src":"4066:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4113:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4116:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4106:6:14"},"nodeType":"YulFunctionCall","src":"4106:15:14"},"nodeType":"YulExpressionStatement","src":"4106:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4137:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4140:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4130:6:14"},"nodeType":"YulFunctionCall","src":"4130:15:14"},"nodeType":"YulExpressionStatement","src":"4130:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4024:127:14"},{"body":{"nodeType":"YulBlock","src":"4208:116:14","statements":[{"nodeType":"YulAssignment","src":"4218:20:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4233:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"4236:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4229:3:14"},"nodeType":"YulFunctionCall","src":"4229:9:14"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"4218:7:14"}]},{"body":{"nodeType":"YulBlock","src":"4296:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4298:16:14"},"nodeType":"YulFunctionCall","src":"4298:18:14"},"nodeType":"YulExpressionStatement","src":"4298:18:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4267:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4260:6:14"},"nodeType":"YulFunctionCall","src":"4260:9:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4274:1:14"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"4281:7:14"},{"name":"x","nodeType":"YulIdentifier","src":"4290:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4277:3:14"},"nodeType":"YulFunctionCall","src":"4277:15:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4271:2:14"},"nodeType":"YulFunctionCall","src":"4271:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4257:2:14"},"nodeType":"YulFunctionCall","src":"4257:37:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4250:6:14"},"nodeType":"YulFunctionCall","src":"4250:45:14"},"nodeType":"YulIf","src":"4247:71:14"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4187:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"4190:1:14","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"4196:7:14","type":""}],"src":"4156:168:14"},{"body":{"nodeType":"YulBlock","src":"4375:171:14","statements":[{"body":{"nodeType":"YulBlock","src":"4406:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4427:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4434:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4439:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4430:3:14"},"nodeType":"YulFunctionCall","src":"4430:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4420:6:14"},"nodeType":"YulFunctionCall","src":"4420:31:14"},"nodeType":"YulExpressionStatement","src":"4420:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4471:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4474:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4464:6:14"},"nodeType":"YulFunctionCall","src":"4464:15:14"},"nodeType":"YulExpressionStatement","src":"4464:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4499:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4502:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4492:6:14"},"nodeType":"YulFunctionCall","src":"4492:15:14"},"nodeType":"YulExpressionStatement","src":"4492:15:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4395:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4388:6:14"},"nodeType":"YulFunctionCall","src":"4388:9:14"},"nodeType":"YulIf","src":"4385:132:14"},{"nodeType":"YulAssignment","src":"4526:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4535:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"4538:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4531:3:14"},"nodeType":"YulFunctionCall","src":"4531:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4526:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4360:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"4363:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"4369:1:14","type":""}],"src":"4329:217:14"},{"body":{"nodeType":"YulBlock","src":"4680:145:14","statements":[{"nodeType":"YulAssignment","src":"4690:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4702:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4713:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4698:3:14"},"nodeType":"YulFunctionCall","src":"4698:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4690:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4732:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4747:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4763:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4768:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4759:3:14"},"nodeType":"YulFunctionCall","src":"4759:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"4772:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4755:3:14"},"nodeType":"YulFunctionCall","src":"4755:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4743:3:14"},"nodeType":"YulFunctionCall","src":"4743:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4725:6:14"},"nodeType":"YulFunctionCall","src":"4725:51:14"},"nodeType":"YulExpressionStatement","src":"4725:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4796:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4807:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4792:3:14"},"nodeType":"YulFunctionCall","src":"4792:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"4812:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4785:6:14"},"nodeType":"YulFunctionCall","src":"4785:34:14"},"nodeType":"YulExpressionStatement","src":"4785:34:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4641:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4652:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4660:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4671:4:14","type":""}],"src":"4551:274:14"},{"body":{"nodeType":"YulBlock","src":"4887:107:14","statements":[{"nodeType":"YulAssignment","src":"4897:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4912:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4906:5:14"},"nodeType":"YulFunctionCall","src":"4906:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4897:5:14"}]},{"body":{"nodeType":"YulBlock","src":"4972:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4981:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4984:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4974:6:14"},"nodeType":"YulFunctionCall","src":"4974:12:14"},"nodeType":"YulExpressionStatement","src":"4974:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4941:5:14"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4962:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4955:6:14"},"nodeType":"YulFunctionCall","src":"4955:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4948:6:14"},"nodeType":"YulFunctionCall","src":"4948:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4938:2:14"},"nodeType":"YulFunctionCall","src":"4938:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4931:6:14"},"nodeType":"YulFunctionCall","src":"4931:40:14"},"nodeType":"YulIf","src":"4928:60:14"}]},"name":"abi_decode_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4866:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4877:5:14","type":""}],"src":"4830:164:14"},{"body":{"nodeType":"YulBlock","src":"5077:124:14","statements":[{"body":{"nodeType":"YulBlock","src":"5123:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5132:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5135:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5125:6:14"},"nodeType":"YulFunctionCall","src":"5125:12:14"},"nodeType":"YulExpressionStatement","src":"5125:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5098:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5107:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5094:3:14"},"nodeType":"YulFunctionCall","src":"5094:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5119:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5090:3:14"},"nodeType":"YulFunctionCall","src":"5090:32:14"},"nodeType":"YulIf","src":"5087:52:14"},{"nodeType":"YulAssignment","src":"5148:47:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:14"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"5158:26:14"},"nodeType":"YulFunctionCall","src":"5158:37:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5148:6:14"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5043:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5054:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5066:6:14","type":""}],"src":"4999:202:14"},{"body":{"nodeType":"YulBlock","src":"5357:204:14","statements":[{"nodeType":"YulAssignment","src":"5367:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5379:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5390:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5375:3:14"},"nodeType":"YulFunctionCall","src":"5375:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5367:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5409:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5424:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5440:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5445:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5436:3:14"},"nodeType":"YulFunctionCall","src":"5436:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"5449:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5432:3:14"},"nodeType":"YulFunctionCall","src":"5432:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5420:3:14"},"nodeType":"YulFunctionCall","src":"5420:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5402:6:14"},"nodeType":"YulFunctionCall","src":"5402:51:14"},"nodeType":"YulExpressionStatement","src":"5402:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5473:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5484:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5469:3:14"},"nodeType":"YulFunctionCall","src":"5469:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"5489:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5462:6:14"},"nodeType":"YulFunctionCall","src":"5462:34:14"},"nodeType":"YulExpressionStatement","src":"5462:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5516:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5527:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5512:3:14"},"nodeType":"YulFunctionCall","src":"5512:18:14"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5546:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5539:6:14"},"nodeType":"YulFunctionCall","src":"5539:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5532:6:14"},"nodeType":"YulFunctionCall","src":"5532:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5505:6:14"},"nodeType":"YulFunctionCall","src":"5505:50:14"},"nodeType":"YulExpressionStatement","src":"5505:50:14"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5310:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5321:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5329:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5337:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5348:4:14","type":""}],"src":"5206:355:14"},{"body":{"nodeType":"YulBlock","src":"5751:206:14","statements":[{"nodeType":"YulAssignment","src":"5761:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5773:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5784:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5769:3:14"},"nodeType":"YulFunctionCall","src":"5769:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5761:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5804:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"5815:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5797:6:14"},"nodeType":"YulFunctionCall","src":"5797:25:14"},"nodeType":"YulExpressionStatement","src":"5797:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5842:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5853:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5838:3:14"},"nodeType":"YulFunctionCall","src":"5838:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"5858:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5831:6:14"},"nodeType":"YulFunctionCall","src":"5831:34:14"},"nodeType":"YulExpressionStatement","src":"5831:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5885:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5896:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5881:3:14"},"nodeType":"YulFunctionCall","src":"5881:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"5901:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5874:6:14"},"nodeType":"YulFunctionCall","src":"5874:34:14"},"nodeType":"YulExpressionStatement","src":"5874:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5928:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5939:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5924:3:14"},"nodeType":"YulFunctionCall","src":"5924:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"5944:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5917:6:14"},"nodeType":"YulFunctionCall","src":"5917:34:14"},"nodeType":"YulExpressionStatement","src":"5917:34:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5696:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5707:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5715:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5723:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5731:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5742:4:14","type":""}],"src":"5566:391:14"},{"body":{"nodeType":"YulBlock","src":"6085:135:14","statements":[{"nodeType":"YulAssignment","src":"6095:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6107:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6118:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6103:3:14"},"nodeType":"YulFunctionCall","src":"6103:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6095:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6137:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"6148:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6130:6:14"},"nodeType":"YulFunctionCall","src":"6130:25:14"},"nodeType":"YulExpressionStatement","src":"6130:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6186:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:14"},"nodeType":"YulFunctionCall","src":"6171:18:14"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6205:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6198:6:14"},"nodeType":"YulFunctionCall","src":"6198:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6191:6:14"},"nodeType":"YulFunctionCall","src":"6191:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6164:6:14"},"nodeType":"YulFunctionCall","src":"6164:50:14"},"nodeType":"YulExpressionStatement","src":"6164:50:14"}]},"name":"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6046:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6057:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6065:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6076:4:14","type":""}],"src":"5962:258:14"},{"body":{"nodeType":"YulBlock","src":"6273:77:14","statements":[{"nodeType":"YulAssignment","src":"6283:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6294:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"6297:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6290:3:14"},"nodeType":"YulFunctionCall","src":"6290:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6283:3:14"}]},{"body":{"nodeType":"YulBlock","src":"6322:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6324:16:14"},"nodeType":"YulFunctionCall","src":"6324:18:14"},"nodeType":"YulExpressionStatement","src":"6324:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6314:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"6317:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6311:2:14"},"nodeType":"YulFunctionCall","src":"6311:10:14"},"nodeType":"YulIf","src":"6308:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6256:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"6259:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6265:3:14","type":""}],"src":"6225:125:14"},{"body":{"nodeType":"YulBlock","src":"6529:173:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6546:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6557:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6539:6:14"},"nodeType":"YulFunctionCall","src":"6539:21:14"},"nodeType":"YulExpressionStatement","src":"6539:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6580:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6591:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6576:3:14"},"nodeType":"YulFunctionCall","src":"6576:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"6596:2:14","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6569:6:14"},"nodeType":"YulFunctionCall","src":"6569:30:14"},"nodeType":"YulExpressionStatement","src":"6569:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6619:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6630:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6615:3:14"},"nodeType":"YulFunctionCall","src":"6615:18:14"},{"hexValue":"546f6b656e206e6f742079657420737570706f72746564","kind":"string","nodeType":"YulLiteral","src":"6635:25:14","type":"","value":"Token not yet supported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6608:6:14"},"nodeType":"YulFunctionCall","src":"6608:53:14"},"nodeType":"YulExpressionStatement","src":"6608:53:14"},{"nodeType":"YulAssignment","src":"6670:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6682:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6693:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6678:3:14"},"nodeType":"YulFunctionCall","src":"6678:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6670:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_5afa3c68da99f9c706d4cfbb3e913b69eb39756da071000ff92271256228d823__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6506:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6520:4:14","type":""}],"src":"6355:347:14"},{"body":{"nodeType":"YulBlock","src":"6881:180:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6898:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6909:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6891:6:14"},"nodeType":"YulFunctionCall","src":"6891:21:14"},"nodeType":"YulExpressionStatement","src":"6891:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6932:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6943:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6928:3:14"},"nodeType":"YulFunctionCall","src":"6928:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"6948:2:14","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6921:6:14"},"nodeType":"YulFunctionCall","src":"6921:30:14"},"nodeType":"YulExpressionStatement","src":"6921:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6971:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6982:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6967:3:14"},"nodeType":"YulFunctionCall","src":"6967:18:14"},{"hexValue":"416d6f756e7420746f206465706f736974206973206d616e6461746f7279","kind":"string","nodeType":"YulLiteral","src":"6987:32:14","type":"","value":"Amount to deposit is mandatory"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6960:6:14"},"nodeType":"YulFunctionCall","src":"6960:60:14"},"nodeType":"YulExpressionStatement","src":"6960:60:14"},{"nodeType":"YulAssignment","src":"7029:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7041:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7052:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7037:3:14"},"nodeType":"YulFunctionCall","src":"7037:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7029:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_52d90a938daabda05345b9aef9e7779cbd5d6bc0180cee74cefd48169a1ef171__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6858:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6872:4:14","type":""}],"src":"6707:354:14"},{"body":{"nodeType":"YulBlock","src":"7115:79:14","statements":[{"nodeType":"YulAssignment","src":"7125:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7137:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"7140:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7133:3:14"},"nodeType":"YulFunctionCall","src":"7133:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7125:4:14"}]},{"body":{"nodeType":"YulBlock","src":"7166:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7168:16:14"},"nodeType":"YulFunctionCall","src":"7168:18:14"},"nodeType":"YulExpressionStatement","src":"7168:18:14"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"7157:4:14"},{"name":"x","nodeType":"YulIdentifier","src":"7163:1:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7154:2:14"},"nodeType":"YulFunctionCall","src":"7154:11:14"},"nodeType":"YulIf","src":"7151:37:14"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7097:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"7100:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7106:4:14","type":""}],"src":"7066:128:14"},{"body":{"nodeType":"YulBlock","src":"7356:218:14","statements":[{"nodeType":"YulAssignment","src":"7366:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7378:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7389:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7374:3:14"},"nodeType":"YulFunctionCall","src":"7374:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7366:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"7401:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7419:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7424:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7415:3:14"},"nodeType":"YulFunctionCall","src":"7415:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"7428:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7411:3:14"},"nodeType":"YulFunctionCall","src":"7411:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7405:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7446:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7461:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"7469:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7457:3:14"},"nodeType":"YulFunctionCall","src":"7457:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7439:6:14"},"nodeType":"YulFunctionCall","src":"7439:34:14"},"nodeType":"YulExpressionStatement","src":"7439:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7493:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7504:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7489:3:14"},"nodeType":"YulFunctionCall","src":"7489:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7513:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"7521:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7509:3:14"},"nodeType":"YulFunctionCall","src":"7509:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7482:6:14"},"nodeType":"YulFunctionCall","src":"7482:43:14"},"nodeType":"YulExpressionStatement","src":"7482:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7545:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7556:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7541:3:14"},"nodeType":"YulFunctionCall","src":"7541:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"7561:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7534:6:14"},"nodeType":"YulFunctionCall","src":"7534:34:14"},"nodeType":"YulExpressionStatement","src":"7534:34:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7309:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7320:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7328:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7336:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7347:4:14","type":""}],"src":"7199:375:14"},{"body":{"nodeType":"YulBlock","src":"7764:232:14","statements":[{"nodeType":"YulAssignment","src":"7774:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7786:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7797:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:14"},"nodeType":"YulFunctionCall","src":"7782:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7774:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7817:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"7828:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7810:6:14"},"nodeType":"YulFunctionCall","src":"7810:25:14"},"nodeType":"YulExpressionStatement","src":"7810:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7855:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7866:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7851:3:14"},"nodeType":"YulFunctionCall","src":"7851:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7875:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7891:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7896:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7887:3:14"},"nodeType":"YulFunctionCall","src":"7887:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"7900:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7883:3:14"},"nodeType":"YulFunctionCall","src":"7883:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7871:3:14"},"nodeType":"YulFunctionCall","src":"7871:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7844:6:14"},"nodeType":"YulFunctionCall","src":"7844:60:14"},"nodeType":"YulExpressionStatement","src":"7844:60:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7924:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7935:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7920:3:14"},"nodeType":"YulFunctionCall","src":"7920:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"7940:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7913:6:14"},"nodeType":"YulFunctionCall","src":"7913:34:14"},"nodeType":"YulExpressionStatement","src":"7913:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7967:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7978:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7963:3:14"},"nodeType":"YulFunctionCall","src":"7963:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"7983:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7956:6:14"},"nodeType":"YulFunctionCall","src":"7956:34:14"},"nodeType":"YulExpressionStatement","src":"7956:34:14"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7709:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7720:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7728:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7736:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7744:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7755:4:14","type":""}],"src":"7579:417:14"},{"body":{"nodeType":"YulBlock","src":"8175:244:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8192:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8203:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8185:6:14"},"nodeType":"YulFunctionCall","src":"8185:21:14"},"nodeType":"YulExpressionStatement","src":"8185:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8226:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8237:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8222:3:14"},"nodeType":"YulFunctionCall","src":"8222:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"8242:2:14","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8215:6:14"},"nodeType":"YulFunctionCall","src":"8215:30:14"},"nodeType":"YulExpressionStatement","src":"8215:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8265:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8276:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8261:3:14"},"nodeType":"YulFunctionCall","src":"8261:18:14"},{"hexValue":"56616c7565206d757374206265203020666f72206e65757472616c2c20312066","kind":"string","nodeType":"YulLiteral","src":"8281:34:14","type":"","value":"Value must be 0 for neutral, 1 f"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8254:6:14"},"nodeType":"YulFunctionCall","src":"8254:62:14"},"nodeType":"YulExpressionStatement","src":"8254:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8336:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8347:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8332:3:14"},"nodeType":"YulFunctionCall","src":"8332:18:14"},{"hexValue":"6f72204c6f6e67206f72203220666f722053686f7274","kind":"string","nodeType":"YulLiteral","src":"8352:24:14","type":"","value":"or Long or 2 for Short"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8325:6:14"},"nodeType":"YulFunctionCall","src":"8325:52:14"},"nodeType":"YulExpressionStatement","src":"8325:52:14"},{"nodeType":"YulAssignment","src":"8386:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8398:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8409:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8394:3:14"},"nodeType":"YulFunctionCall","src":"8394:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8386:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6faa7cc3f5a0b3b09fdfe3c4762b2201fc2409af009c169306b02a5773520d47__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8152:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8166:4:14","type":""}],"src":"8001:418:14"},{"body":{"nodeType":"YulBlock","src":"8598:233:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8615:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8626:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8608:6:14"},"nodeType":"YulFunctionCall","src":"8608:21:14"},"nodeType":"YulExpressionStatement","src":"8608:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8649:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8660:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8645:3:14"},"nodeType":"YulFunctionCall","src":"8645:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"8665:2:14","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8638:6:14"},"nodeType":"YulFunctionCall","src":"8638:30:14"},"nodeType":"YulExpressionStatement","src":"8638:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8688:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8699:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8684:3:14"},"nodeType":"YulFunctionCall","src":"8684:18:14"},{"hexValue":"52657665727465642062656361757365206578706f736974696f6e2068617320","kind":"string","nodeType":"YulLiteral","src":"8704:34:14","type":"","value":"Reverted because exposition has "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8677:6:14"},"nodeType":"YulFunctionCall","src":"8677:62:14"},"nodeType":"YulExpressionStatement","src":"8677:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8759:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8770:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8755:3:14"},"nodeType":"YulFunctionCall","src":"8755:18:14"},{"hexValue":"6e6f74206368616e676564","kind":"string","nodeType":"YulLiteral","src":"8775:13:14","type":"","value":"not changed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8748:6:14"},"nodeType":"YulFunctionCall","src":"8748:41:14"},"nodeType":"YulExpressionStatement","src":"8748:41:14"},{"nodeType":"YulAssignment","src":"8798:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8810:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8821:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8806:3:14"},"nodeType":"YulFunctionCall","src":"8806:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8798:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_696c342f151b66dcdb26f32ec1a6f12351d8d6902ae815ec1ce92b973d52a75e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8575:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8589:4:14","type":""}],"src":"8424:407:14"},{"body":{"nodeType":"YulBlock","src":"8985:184:14","statements":[{"nodeType":"YulAssignment","src":"8995:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9007:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9018:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9003:3:14"},"nodeType":"YulFunctionCall","src":"9003:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8995:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9037:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"9048:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9030:6:14"},"nodeType":"YulFunctionCall","src":"9030:25:14"},"nodeType":"YulExpressionStatement","src":"9030:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9075:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9086:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9071:3:14"},"nodeType":"YulFunctionCall","src":"9071:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9095:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9103:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9091:3:14"},"nodeType":"YulFunctionCall","src":"9091:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9064:6:14"},"nodeType":"YulFunctionCall","src":"9064:45:14"},"nodeType":"YulExpressionStatement","src":"9064:45:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9129:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9140:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9125:3:14"},"nodeType":"YulFunctionCall","src":"9125:18:14"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9149:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9157:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9145:3:14"},"nodeType":"YulFunctionCall","src":"9145:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9118:6:14"},"nodeType":"YulFunctionCall","src":"9118:45:14"},"nodeType":"YulExpressionStatement","src":"9118:45:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint8_t_uint8__to_t_uint256_t_uint8_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8938:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8949:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8957:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8965:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8976:4:14","type":""}],"src":"8836:333:14"},{"body":{"nodeType":"YulBlock","src":"9348:169:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9365:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9376:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9358:6:14"},"nodeType":"YulFunctionCall","src":"9358:21:14"},"nodeType":"YulExpressionStatement","src":"9358:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9399:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9410:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9395:3:14"},"nodeType":"YulFunctionCall","src":"9395:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"9415:2:14","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9388:6:14"},"nodeType":"YulFunctionCall","src":"9388:30:14"},"nodeType":"YulExpressionStatement","src":"9388:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9438:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9449:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9434:3:14"},"nodeType":"YulFunctionCall","src":"9434:18:14"},{"hexValue":"546f6b656e206e6f7420796574206164646564","kind":"string","nodeType":"YulLiteral","src":"9454:21:14","type":"","value":"Token not yet added"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9427:6:14"},"nodeType":"YulFunctionCall","src":"9427:49:14"},"nodeType":"YulExpressionStatement","src":"9427:49:14"},{"nodeType":"YulAssignment","src":"9485:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9497:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9508:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9493:3:14"},"nodeType":"YulFunctionCall","src":"9493:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9485:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_723d2dc24cdf3c05f0d5e97afb39e416e5e033aeca8107200eff0271fb221805__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9325:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9339:4:14","type":""}],"src":"9174:343:14"},{"body":{"nodeType":"YulBlock","src":"9696:169:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9713:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9724:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9706:6:14"},"nodeType":"YulFunctionCall","src":"9706:21:14"},"nodeType":"YulExpressionStatement","src":"9706:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9747:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9758:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9743:3:14"},"nodeType":"YulFunctionCall","src":"9743:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"9763:2:14","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9736:6:14"},"nodeType":"YulFunctionCall","src":"9736:30:14"},"nodeType":"YulExpressionStatement","src":"9736:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9786:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9797:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9782:3:14"},"nodeType":"YulFunctionCall","src":"9782:18:14"},{"hexValue":"546f6b656e20616c7265616479206164646564","kind":"string","nodeType":"YulLiteral","src":"9802:21:14","type":"","value":"Token already added"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9775:6:14"},"nodeType":"YulFunctionCall","src":"9775:49:14"},"nodeType":"YulExpressionStatement","src":"9775:49:14"},{"nodeType":"YulAssignment","src":"9833:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9845:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9856:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9841:3:14"},"nodeType":"YulFunctionCall","src":"9841:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9833:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9673:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9687:4:14","type":""}],"src":"9522:343:14"},{"body":{"nodeType":"YulBlock","src":"10044:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10061:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10072:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10054:6:14"},"nodeType":"YulFunctionCall","src":"10054:21:14"},"nodeType":"YulExpressionStatement","src":"10054:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10095:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10106:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10091:3:14"},"nodeType":"YulFunctionCall","src":"10091:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"10111:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10084:6:14"},"nodeType":"YulFunctionCall","src":"10084:30:14"},"nodeType":"YulExpressionStatement","src":"10084:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10134:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10145:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10130:3:14"},"nodeType":"YulFunctionCall","src":"10130:18:14"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"10150:34:14","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10123:6:14"},"nodeType":"YulFunctionCall","src":"10123:62:14"},"nodeType":"YulExpressionStatement","src":"10123:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10205:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10216:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10201:3:14"},"nodeType":"YulFunctionCall","src":"10201:18:14"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"10221:7:14","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10194:6:14"},"nodeType":"YulFunctionCall","src":"10194:35:14"},"nodeType":"YulExpressionStatement","src":"10194:35:14"},{"nodeType":"YulAssignment","src":"10238:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10250:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10261:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10246:3:14"},"nodeType":"YulFunctionCall","src":"10246:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10238:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10021:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10035:4:14","type":""}],"src":"9870:401:14"},{"body":{"nodeType":"YulBlock","src":"10450:228:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10467:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10478:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10460:6:14"},"nodeType":"YulFunctionCall","src":"10460:21:14"},"nodeType":"YulExpressionStatement","src":"10460:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10501:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10512:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10497:3:14"},"nodeType":"YulFunctionCall","src":"10497:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"10517:2:14","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10490:6:14"},"nodeType":"YulFunctionCall","src":"10490:30:14"},"nodeType":"YulExpressionStatement","src":"10490:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10540:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10551:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10536:3:14"},"nodeType":"YulFunctionCall","src":"10536:18:14"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"10556:34:14","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10529:6:14"},"nodeType":"YulFunctionCall","src":"10529:62:14"},"nodeType":"YulExpressionStatement","src":"10529:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10611:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10622:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10607:3:14"},"nodeType":"YulFunctionCall","src":"10607:18:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"10627:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10600:6:14"},"nodeType":"YulFunctionCall","src":"10600:36:14"},"nodeType":"YulExpressionStatement","src":"10600:36:14"},{"nodeType":"YulAssignment","src":"10645:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10657:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10668:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10653:3:14"},"nodeType":"YulFunctionCall","src":"10653:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10645:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10427:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10441:4:14","type":""}],"src":"10276:402:14"},{"body":{"nodeType":"YulBlock","src":"10857:226:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10874:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10885:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10867:6:14"},"nodeType":"YulFunctionCall","src":"10867:21:14"},"nodeType":"YulExpressionStatement","src":"10867:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10908:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10919:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10904:3:14"},"nodeType":"YulFunctionCall","src":"10904:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"10924:2:14","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10897:6:14"},"nodeType":"YulFunctionCall","src":"10897:30:14"},"nodeType":"YulExpressionStatement","src":"10897:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10947:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10958:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10943:3:14"},"nodeType":"YulFunctionCall","src":"10943:18:14"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"10963:34:14","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10936:6:14"},"nodeType":"YulFunctionCall","src":"10936:62:14"},"nodeType":"YulExpressionStatement","src":"10936:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11018:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11029:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11014:3:14"},"nodeType":"YulFunctionCall","src":"11014:18:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"11034:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11007:6:14"},"nodeType":"YulFunctionCall","src":"11007:34:14"},"nodeType":"YulExpressionStatement","src":"11007:34:14"},{"nodeType":"YulAssignment","src":"11050:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11062:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11073:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11058:3:14"},"nodeType":"YulFunctionCall","src":"11058:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11050:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10834:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10848:4:14","type":""}],"src":"10683:400:14"},{"body":{"nodeType":"YulBlock","src":"11262:224:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11279:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11290:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11272:6:14"},"nodeType":"YulFunctionCall","src":"11272:21:14"},"nodeType":"YulExpressionStatement","src":"11272:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11313:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11324:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11309:3:14"},"nodeType":"YulFunctionCall","src":"11309:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"11329:2:14","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11302:6:14"},"nodeType":"YulFunctionCall","src":"11302:30:14"},"nodeType":"YulExpressionStatement","src":"11302:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11352:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11363:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11348:3:14"},"nodeType":"YulFunctionCall","src":"11348:18:14"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"11368:34:14","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11341:6:14"},"nodeType":"YulFunctionCall","src":"11341:62:14"},"nodeType":"YulExpressionStatement","src":"11341:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11423:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11434:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11419:3:14"},"nodeType":"YulFunctionCall","src":"11419:18:14"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"11439:4:14","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11412:6:14"},"nodeType":"YulFunctionCall","src":"11412:32:14"},"nodeType":"YulExpressionStatement","src":"11412:32:14"},{"nodeType":"YulAssignment","src":"11453:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11465:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11476:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11461:3:14"},"nodeType":"YulFunctionCall","src":"11461:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11453:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11239:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11253:4:14","type":""}],"src":"11088:398:14"},{"body":{"nodeType":"YulBlock","src":"11665:182:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11682:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11693:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11675:6:14"},"nodeType":"YulFunctionCall","src":"11675:21:14"},"nodeType":"YulExpressionStatement","src":"11675:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11716:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11727:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11712:3:14"},"nodeType":"YulFunctionCall","src":"11712:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"11732:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11705:6:14"},"nodeType":"YulFunctionCall","src":"11705:30:14"},"nodeType":"YulExpressionStatement","src":"11705:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11755:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11766:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11751:3:14"},"nodeType":"YulFunctionCall","src":"11751:18:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11771:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11744:6:14"},"nodeType":"YulFunctionCall","src":"11744:62:14"},"nodeType":"YulExpressionStatement","src":"11744:62:14"},{"nodeType":"YulAssignment","src":"11815:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11827:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11838:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11823:3:14"},"nodeType":"YulFunctionCall","src":"11823:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11815:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11642:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11656:4:14","type":""}],"src":"11491:356:14"},{"body":{"nodeType":"YulBlock","src":"12026:179:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12043:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12054:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12036:6:14"},"nodeType":"YulFunctionCall","src":"12036:21:14"},"nodeType":"YulExpressionStatement","src":"12036:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12077:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12088:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12073:3:14"},"nodeType":"YulFunctionCall","src":"12073:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"12093:2:14","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12066:6:14"},"nodeType":"YulFunctionCall","src":"12066:30:14"},"nodeType":"YulExpressionStatement","src":"12066:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12116:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12127:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12112:3:14"},"nodeType":"YulFunctionCall","src":"12112:18:14"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"12132:31:14","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12105:6:14"},"nodeType":"YulFunctionCall","src":"12105:59:14"},"nodeType":"YulExpressionStatement","src":"12105:59:14"},{"nodeType":"YulAssignment","src":"12173:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12185:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12196:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12181:3:14"},"nodeType":"YulFunctionCall","src":"12181:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12173:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12003:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12017:4:14","type":""}],"src":"11852:353:14"},{"body":{"nodeType":"YulBlock","src":"12384:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12401:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12412:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12394:6:14"},"nodeType":"YulFunctionCall","src":"12394:21:14"},"nodeType":"YulExpressionStatement","src":"12394:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12435:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12446:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12431:3:14"},"nodeType":"YulFunctionCall","src":"12431:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"12451:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12424:6:14"},"nodeType":"YulFunctionCall","src":"12424:30:14"},"nodeType":"YulExpressionStatement","src":"12424:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12474:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12485:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12470:3:14"},"nodeType":"YulFunctionCall","src":"12470:18:14"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"12490:34:14","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12463:6:14"},"nodeType":"YulFunctionCall","src":"12463:62:14"},"nodeType":"YulExpressionStatement","src":"12463:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12545:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12556:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12541:3:14"},"nodeType":"YulFunctionCall","src":"12541:18:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"12561:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12534:6:14"},"nodeType":"YulFunctionCall","src":"12534:35:14"},"nodeType":"YulExpressionStatement","src":"12534:35:14"},{"nodeType":"YulAssignment","src":"12578:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12590:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12601:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12586:3:14"},"nodeType":"YulFunctionCall","src":"12586:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12578:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12361:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12375:4:14","type":""}],"src":"12210:401:14"},{"body":{"nodeType":"YulBlock","src":"12790:225:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12807:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12818:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12800:6:14"},"nodeType":"YulFunctionCall","src":"12800:21:14"},"nodeType":"YulExpressionStatement","src":"12800:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12841:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12852:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12837:3:14"},"nodeType":"YulFunctionCall","src":"12837:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"12857:2:14","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12830:6:14"},"nodeType":"YulFunctionCall","src":"12830:30:14"},"nodeType":"YulExpressionStatement","src":"12830:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12880:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12891:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12876:3:14"},"nodeType":"YulFunctionCall","src":"12876:18:14"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"12896:34:14","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12869:6:14"},"nodeType":"YulFunctionCall","src":"12869:62:14"},"nodeType":"YulExpressionStatement","src":"12869:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12951:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12962:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12947:3:14"},"nodeType":"YulFunctionCall","src":"12947:18:14"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12967:5:14","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12940:6:14"},"nodeType":"YulFunctionCall","src":"12940:33:14"},"nodeType":"YulExpressionStatement","src":"12940:33:14"},{"nodeType":"YulAssignment","src":"12982:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12994:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13005:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12990:3:14"},"nodeType":"YulFunctionCall","src":"12990:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12982:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12767:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12781:4:14","type":""}],"src":"12616:399:14"},{"body":{"nodeType":"YulBlock","src":"13194:228:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13211:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13222:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13204:6:14"},"nodeType":"YulFunctionCall","src":"13204:21:14"},"nodeType":"YulExpressionStatement","src":"13204:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13245:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13256:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13241:3:14"},"nodeType":"YulFunctionCall","src":"13241:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"13261:2:14","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13234:6:14"},"nodeType":"YulFunctionCall","src":"13234:30:14"},"nodeType":"YulExpressionStatement","src":"13234:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13284:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13295:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13280:3:14"},"nodeType":"YulFunctionCall","src":"13280:18:14"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"13300:34:14","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13273:6:14"},"nodeType":"YulFunctionCall","src":"13273:62:14"},"nodeType":"YulExpressionStatement","src":"13273:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13355:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13366:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13351:3:14"},"nodeType":"YulFunctionCall","src":"13351:18:14"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"13371:8:14","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13344:6:14"},"nodeType":"YulFunctionCall","src":"13344:36:14"},"nodeType":"YulExpressionStatement","src":"13344:36:14"},{"nodeType":"YulAssignment","src":"13389:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13401:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13412:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13397:3:14"},"nodeType":"YulFunctionCall","src":"13397:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13389:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13171:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13185:4:14","type":""}],"src":"13020:402:14"},{"body":{"nodeType":"YulBlock","src":"13601:181:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13618:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13629:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13611:6:14"},"nodeType":"YulFunctionCall","src":"13611:21:14"},"nodeType":"YulExpressionStatement","src":"13611:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13652:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13663:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13648:3:14"},"nodeType":"YulFunctionCall","src":"13648:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"13668:2:14","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13641:6:14"},"nodeType":"YulFunctionCall","src":"13641:30:14"},"nodeType":"YulExpressionStatement","src":"13641:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13691:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13702:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13687:3:14"},"nodeType":"YulFunctionCall","src":"13687:18:14"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"13707:33:14","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13680:6:14"},"nodeType":"YulFunctionCall","src":"13680:61:14"},"nodeType":"YulExpressionStatement","src":"13680:61:14"},{"nodeType":"YulAssignment","src":"13750:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13762:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13773:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13758:3:14"},"nodeType":"YulFunctionCall","src":"13758:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13750:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13578:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13592:4:14","type":""}],"src":"13427:355:14"},{"body":{"nodeType":"YulBlock","src":"13966:287:14","statements":[{"nodeType":"YulAssignment","src":"13976:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13988:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13999:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13984:3:14"},"nodeType":"YulFunctionCall","src":"13984:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13976:4:14"}]},{"nodeType":"YulVariableDeclaration","src":"14012:29:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14030:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14035:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14026:3:14"},"nodeType":"YulFunctionCall","src":"14026:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"14039:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14022:3:14"},"nodeType":"YulFunctionCall","src":"14022:19:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14016:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14057:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14072:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"14080:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14068:3:14"},"nodeType":"YulFunctionCall","src":"14068:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14050:6:14"},"nodeType":"YulFunctionCall","src":"14050:34:14"},"nodeType":"YulExpressionStatement","src":"14050:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14104:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14115:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14100:3:14"},"nodeType":"YulFunctionCall","src":"14100:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14124:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"14132:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14120:3:14"},"nodeType":"YulFunctionCall","src":"14120:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14093:6:14"},"nodeType":"YulFunctionCall","src":"14093:43:14"},"nodeType":"YulExpressionStatement","src":"14093:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14156:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14167:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14152:3:14"},"nodeType":"YulFunctionCall","src":"14152:18:14"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14176:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"14184:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14172:3:14"},"nodeType":"YulFunctionCall","src":"14172:15:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14145:6:14"},"nodeType":"YulFunctionCall","src":"14145:43:14"},"nodeType":"YulExpressionStatement","src":"14145:43:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14208:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14219:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14204:3:14"},"nodeType":"YulFunctionCall","src":"14204:18:14"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14238:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14231:6:14"},"nodeType":"YulFunctionCall","src":"14231:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14224:6:14"},"nodeType":"YulFunctionCall","src":"14224:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14197:6:14"},"nodeType":"YulFunctionCall","src":"14197:50:14"},"nodeType":"YulExpressionStatement","src":"14197:50:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13911:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13922:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13930:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13938:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13946:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13957:4:14","type":""}],"src":"13787:466:14"},{"body":{"nodeType":"YulBlock","src":"14455:437:14","statements":[{"body":{"nodeType":"YulBlock","src":"14502:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14511:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14514:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14504:6:14"},"nodeType":"YulFunctionCall","src":"14504:12:14"},"nodeType":"YulExpressionStatement","src":"14504:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14476:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14485:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14472:3:14"},"nodeType":"YulFunctionCall","src":"14472:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"14497:3:14","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14468:3:14"},"nodeType":"YulFunctionCall","src":"14468:33:14"},"nodeType":"YulIf","src":"14465:53:14"},{"nodeType":"YulAssignment","src":"14527:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14543:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14537:5:14"},"nodeType":"YulFunctionCall","src":"14537:16:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14527:6:14"}]},{"nodeType":"YulAssignment","src":"14562:35:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14582:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14593:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14578:3:14"},"nodeType":"YulFunctionCall","src":"14578:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14572:5:14"},"nodeType":"YulFunctionCall","src":"14572:25:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14562:6:14"}]},{"nodeType":"YulAssignment","src":"14606:35:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14626:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14637:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14622:3:14"},"nodeType":"YulFunctionCall","src":"14622:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14616:5:14"},"nodeType":"YulFunctionCall","src":"14616:25:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14606:6:14"}]},{"nodeType":"YulAssignment","src":"14650:35:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14670:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14681:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14666:3:14"},"nodeType":"YulFunctionCall","src":"14666:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14660:5:14"},"nodeType":"YulFunctionCall","src":"14660:25:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14650:6:14"}]},{"nodeType":"YulAssignment","src":"14694:36:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14714:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14725:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14710:3:14"},"nodeType":"YulFunctionCall","src":"14710:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14704:5:14"},"nodeType":"YulFunctionCall","src":"14704:26:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"14694:6:14"}]},{"nodeType":"YulAssignment","src":"14739:36:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14759:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14770:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14755:3:14"},"nodeType":"YulFunctionCall","src":"14755:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14749:5:14"},"nodeType":"YulFunctionCall","src":"14749:26:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"14739:6:14"}]},{"nodeType":"YulAssignment","src":"14784:57:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14825:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14836:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14821:3:14"},"nodeType":"YulFunctionCall","src":"14821:19:14"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"14794:26:14"},"nodeType":"YulFunctionCall","src":"14794:47:14"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"14784:6:14"}]},{"nodeType":"YulAssignment","src":"14850:36:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14870:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14881:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14866:3:14"},"nodeType":"YulFunctionCall","src":"14866:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14860:5:14"},"nodeType":"YulFunctionCall","src":"14860:26:14"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"14850:6:14"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_boolt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14365:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14376:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14388:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14396:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14404:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14412:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14420:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"14428:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"14436:6:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"14444:6:14","type":""}],"src":"14258:634:14"},{"body":{"nodeType":"YulBlock","src":"14992:168:14","statements":[{"body":{"nodeType":"YulBlock","src":"15038:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15047:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15050:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15040:6:14"},"nodeType":"YulFunctionCall","src":"15040:12:14"},"nodeType":"YulExpressionStatement","src":"15040:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15013:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15022:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15009:3:14"},"nodeType":"YulFunctionCall","src":"15009:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"15034:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15005:3:14"},"nodeType":"YulFunctionCall","src":"15005:32:14"},"nodeType":"YulIf","src":"15002:52:14"},{"nodeType":"YulAssignment","src":"15063:47:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15100:9:14"}],"functionName":{"name":"abi_decode_bool_fromMemory","nodeType":"YulIdentifier","src":"15073:26:14"},"nodeType":"YulFunctionCall","src":"15073:37:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15063:6:14"}]},{"nodeType":"YulAssignment","src":"15119:35:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15139:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15150:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15135:3:14"},"nodeType":"YulFunctionCall","src":"15135:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15129:5:14"},"nodeType":"YulFunctionCall","src":"15129:25:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15119:6:14"}]}]},"name":"abi_decode_tuple_t_boolt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14950:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14961:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14973:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14981:6:14","type":""}],"src":"14897:263:14"},{"body":{"nodeType":"YulBlock","src":"15458:393:14","statements":[{"nodeType":"YulAssignment","src":"15468:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15480:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15491:3:14","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15476:3:14"},"nodeType":"YulFunctionCall","src":"15476:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15468:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15511:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"15522:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15504:6:14"},"nodeType":"YulFunctionCall","src":"15504:25:14"},"nodeType":"YulExpressionStatement","src":"15504:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15549:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15560:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15545:3:14"},"nodeType":"YulFunctionCall","src":"15545:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15569:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15577:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15565:3:14"},"nodeType":"YulFunctionCall","src":"15565:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15538:6:14"},"nodeType":"YulFunctionCall","src":"15538:45:14"},"nodeType":"YulExpressionStatement","src":"15538:45:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15603:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15614:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15599:3:14"},"nodeType":"YulFunctionCall","src":"15599:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"15619:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15592:6:14"},"nodeType":"YulFunctionCall","src":"15592:34:14"},"nodeType":"YulExpressionStatement","src":"15592:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15646:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15657:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15642:3:14"},"nodeType":"YulFunctionCall","src":"15642:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"15662:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15635:6:14"},"nodeType":"YulFunctionCall","src":"15635:34:14"},"nodeType":"YulExpressionStatement","src":"15635:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15689:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15700:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15685:3:14"},"nodeType":"YulFunctionCall","src":"15685:19:14"},{"name":"value4","nodeType":"YulIdentifier","src":"15706:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15678:6:14"},"nodeType":"YulFunctionCall","src":"15678:35:14"},"nodeType":"YulExpressionStatement","src":"15678:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15733:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15744:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15729:3:14"},"nodeType":"YulFunctionCall","src":"15729:19:14"},{"name":"value5","nodeType":"YulIdentifier","src":"15750:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15722:6:14"},"nodeType":"YulFunctionCall","src":"15722:35:14"},"nodeType":"YulExpressionStatement","src":"15722:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15777:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15788:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15773:3:14"},"nodeType":"YulFunctionCall","src":"15773:19:14"},{"name":"value6","nodeType":"YulIdentifier","src":"15794:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15766:6:14"},"nodeType":"YulFunctionCall","src":"15766:35:14"},"nodeType":"YulExpressionStatement","src":"15766:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15821:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15832:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15817:3:14"},"nodeType":"YulFunctionCall","src":"15817:19:14"},{"name":"value7","nodeType":"YulIdentifier","src":"15838:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15810:6:14"},"nodeType":"YulFunctionCall","src":"15810:35:14"},"nodeType":"YulExpressionStatement","src":"15810:35:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15371:9:14","type":""},{"name":"value7","nodeType":"YulTypedName","src":"15382:6:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"15390:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"15398:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15406:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15414:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15422:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15430:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15438:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15449:4:14","type":""}],"src":"15165:686:14"},{"body":{"nodeType":"YulBlock","src":"16030:223:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16047:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16058:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16040:6:14"},"nodeType":"YulFunctionCall","src":"16040:21:14"},"nodeType":"YulExpressionStatement","src":"16040:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16081:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16092:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16077:3:14"},"nodeType":"YulFunctionCall","src":"16077:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"16097:2:14","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16070:6:14"},"nodeType":"YulFunctionCall","src":"16070:30:14"},"nodeType":"YulExpressionStatement","src":"16070:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16120:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16131:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16116:3:14"},"nodeType":"YulFunctionCall","src":"16116:18:14"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"16136:34:14","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16109:6:14"},"nodeType":"YulFunctionCall","src":"16109:62:14"},"nodeType":"YulExpressionStatement","src":"16109:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16191:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16202:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16187:3:14"},"nodeType":"YulFunctionCall","src":"16187:18:14"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"16207:3:14","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16180:6:14"},"nodeType":"YulFunctionCall","src":"16180:31:14"},"nodeType":"YulExpressionStatement","src":"16180:31:14"},{"nodeType":"YulAssignment","src":"16220:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16232:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16243:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16228:3:14"},"nodeType":"YulFunctionCall","src":"16228:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16220:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16007:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16021:4:14","type":""}],"src":"15856:397:14"},{"body":{"nodeType":"YulBlock","src":"16432:224:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16449:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16460:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16442:6:14"},"nodeType":"YulFunctionCall","src":"16442:21:14"},"nodeType":"YulExpressionStatement","src":"16442:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16483:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16494:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16479:3:14"},"nodeType":"YulFunctionCall","src":"16479:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"16499:2:14","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16472:6:14"},"nodeType":"YulFunctionCall","src":"16472:30:14"},"nodeType":"YulExpressionStatement","src":"16472:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16522:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16533:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16518:3:14"},"nodeType":"YulFunctionCall","src":"16518:18:14"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"16538:34:14","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16511:6:14"},"nodeType":"YulFunctionCall","src":"16511:62:14"},"nodeType":"YulExpressionStatement","src":"16511:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16593:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16604:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16589:3:14"},"nodeType":"YulFunctionCall","src":"16589:18:14"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"16609:4:14","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16582:6:14"},"nodeType":"YulFunctionCall","src":"16582:32:14"},"nodeType":"YulExpressionStatement","src":"16582:32:14"},{"nodeType":"YulAssignment","src":"16623:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16635:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16646:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16631:3:14"},"nodeType":"YulFunctionCall","src":"16631:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16623:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16409:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16423:4:14","type":""}],"src":"16258:398:14"},{"body":{"nodeType":"YulBlock","src":"16835:181:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16852:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16863:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16845:6:14"},"nodeType":"YulFunctionCall","src":"16845:21:14"},"nodeType":"YulExpressionStatement","src":"16845:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16886:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16897:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16882:3:14"},"nodeType":"YulFunctionCall","src":"16882:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"16902:2:14","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16875:6:14"},"nodeType":"YulFunctionCall","src":"16875:30:14"},"nodeType":"YulExpressionStatement","src":"16875:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16925:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16936:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16921:3:14"},"nodeType":"YulFunctionCall","src":"16921:18:14"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"16941:33:14","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16914:6:14"},"nodeType":"YulFunctionCall","src":"16914:61:14"},"nodeType":"YulExpressionStatement","src":"16914:61:14"},{"nodeType":"YulAssignment","src":"16984:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16996:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17007:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16992:3:14"},"nodeType":"YulFunctionCall","src":"16992:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16984:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16812:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16826:4:14","type":""}],"src":"16661:355:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_827abac9121d6a19f7fbad0bf16d0482f475e2c96ee41db78cf0eda460234622__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Surprisingly you cannot withdraw\")\n        mstore(add(headStart, 96), \" token you have not bought\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_bool_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_5afa3c68da99f9c706d4cfbb3e913b69eb39756da071000ff92271256228d823__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Token not yet supported\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_52d90a938daabda05345b9aef9e7779cbd5d6bc0180cee74cefd48169a1ef171__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Amount to deposit is mandatory\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_6faa7cc3f5a0b3b09fdfe3c4762b2201fc2409af009c169306b02a5773520d47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Value must be 0 for neutral, 1 f\")\n        mstore(add(headStart, 96), \"or Long or 2 for Short\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_696c342f151b66dcdb26f32ec1a6f12351d8d6902ae815ec1ce92b973d52a75e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Reverted because exposition has \")\n        mstore(add(headStart, 96), \"not changed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint8_t_uint8__to_t_uint256_t_uint8_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_723d2dc24cdf3c05f0d5e97afb39e416e5e033aeca8107200eff0271fb221805__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Token not yet added\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Token already added\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_bool__to_t_address_t_address_t_address_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        value6 := abi_decode_bool_fromMemory(add(headStart, 192))\n        value7 := mload(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bool_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101c45760003560e01c806370a08231116100f8578063a9059cbb11610090578063a9059cbb146104b3578063ad5c4648146104d3578063aedf795e146104f3578063b3b3453e14610523578063dd62ed3e14610543578063de9257cd14610563578063e6f091f91461057b578063ed61f4a1146105b4578063f2fde38b146105c957600080fd5b806370a082311461039f578063715018a6146103d557806389a30271146103ea5780638cd3f0641461040a5780638da5cb5b1461042a57806395d89b41146104485780639ecbfa421461045d578063a3673b381461047d578063a457c2d71461049357600080fd5b80632e1a7d4d1161016b5780632e1a7d4d146102e05780633027ac22146102f3578063313ce567146102fb578063350245c21461030f578063395093511461031757806347e7ef2414610337578063481d6ee91461034a5780635fa7b5841461036a5780636639a81d1461038a57600080fd5b80630677a2a5146101c957806306fdde03146101f9578063095ea7b31461021b57806311af7d951461024b57806318160ddd1461026d5780631cd2f7c81461028c57806323b872dd146102b857806328250e0d146102d8575b600080fd5b3480156101d557600080fd5b506007546001600160a01b03165b6040516101f09190611fe1565b60405180910390f35b34801561020557600080fd5b5061020e6105e9565b6040516101f09190611ff5565b34801561022757600080fd5b5061023b61023636600461205f565b61067b565b60405190151581526020016101f0565b34801561025757600080fd5b5061026b610266366004612089565b610695565b005b34801561027957600080fd5b506003545b6040519081526020016101f0565b34801561029857600080fd5b50600c546102a69060ff1681565b60405160ff90911681526020016101f0565b3480156102c457600080fd5b5061023b6102d33660046120ab565b6106bf565b61026b6106e3565b61026b6102ee3660046120e7565b61074e565b61026b610aa8565b34801561030757600080fd5b5060126102a6565b61026b610ae3565b34801561032357600080fd5b5061023b61033236600461205f565b610cc4565b61026b61034536600461205f565b610ce6565b34801561035657600080fd5b5061026b610365366004612100565b6111b6565b34801561037657600080fd5b5061026b610385366004612089565b611311565b34801561039657600080fd5b50600b5461027e565b3480156103ab57600080fd5b5061027e6103ba366004612089565b6001600160a01b031660009081526001602052604090205490565b3480156103e157600080fd5b5061026b6113d2565b3480156103f657600080fd5b506009546101e3906001600160a01b031681565b34801561041657600080fd5b5061026b610425366004612089565b6113e6565b34801561043657600080fd5b506000546001600160a01b03166101e3565b34801561045457600080fd5b5061020e6114a0565b34801561046957600080fd5b506007546101e3906001600160a01b031681565b34801561048957600080fd5b5061027e600b5481565b34801561049f57600080fd5b5061023b6104ae36600461205f565b6114af565b3480156104bf57600080fd5b5061023b6104ce36600461205f565b61152a565b3480156104df57600080fd5b506008546101e3906001600160a01b031681565b3480156104ff57600080fd5b5061023b61050e366004612089565b600d6020526000908152604090205460ff1681565b34801561052f57600080fd5b50600a546101e3906001600160a01b031681565b34801561054f57600080fd5b5061027e61055e366004612123565b611538565b34801561056f57600080fd5b50600c5460ff166102a6565b34801561058757600080fd5b5061023b610596366004612089565b6001600160a01b03166000908152600d602052604090205460ff1690565b3480156105c057600080fd5b5061026b611563565b3480156105d557600080fd5b5061026b6105e4366004612089565b611573565b6060600480546105f890612156565b80601f016020809104026020016040519081016040528092919081815260200182805461062490612156565b80156106715780601f1061064657610100808354040283529160200191610671565b820191906000526020600020905b81548152906001019060200180831161065457829003601f168201915b5050505050905090565b6000336106898185856115e9565b60019150505b92915050565b61069d61170e565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000336106cd858285611768565b6106d88585856117e2565b506001949350505050565b6106eb61170e565b600754604051637cb1759760e01b8152600160048201526001600160a01b0390911690637cb175979034906024015b6000604051808303818588803b15801561073357600080fd5b505af1158015610747573d6000803e3d6000fd5b5050505050565b61075661197b565b6000811161076357600080fd5b6040516370a0823160e01b8152819030906370a0823190610788903390600401611fe1565b602060405180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190612190565b10156108425760405162461bcd60e51b815260206004820152603a60248201527f53757270726973696e676c7920796f752063616e6e6f7420776974686472617760448201527f20746f6b656e20796f752068617665206e6f7420626f7567687400000000000060648201526084015b60405180910390fd5b600c5460009060ff1660011461085957600061085c565b60015b90506108666119d4565b6000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ca9190612190565b90506108d63384611dc8565b600c5460ff16600003610996576009546001600160a01b031663a9059cbb3361090c846c0c9f2c9cd04674edea400000006121bf565b600b5461091c88620f42406121bf565b61092691906121bf565b61093091906121d6565b6040518363ffffffff1660e01b815260040161094d9291906121f8565b6020604051808303816000875af115801561096c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109909190612221565b50610a4b565b6007546001600160a01b031663c5dac33b34336109c0856c0c9f2c9cd04674edea400000006121bf565b600b546109d089620f1b306121bf565b6109da91906121bf565b6109e491906121d6565b6040516001600160e01b031960e086901b1681526001600160a01b039092166004830152602482015285151560448201526064016000604051808303818588803b158015610a3157600080fd5b505af1158015610a45573d6000803e3d6000fd5b50505050505b600b546040805142815260208101869052908101919091526060810182905233907f7d655f729e74749ef66079e8380b356147309a7161212c83e699b8e7fb78781c9060800160405180910390a25050610aa56001600655565b50565b610ab061170e565b600754604051637cb1759760e01b8152600060048201526001600160a01b0390911690637cb1759790349060240161071a565b610aeb61170e565b600c5460009060ff16600114610b02576000610b05565b60015b6009546007546040516370a0823160e01b81529293506001600160a01b039182169263095ea7b3929091169083906370a0823190610b47903090600401611fe1565b602060405180830381865afa158015610b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b889190612190565b6040518363ffffffff1660e01b8152600401610ba59291906121f8565b6020604051808303816000875af1158015610bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be89190612221565b506007546009546040516370a0823160e01b81526001600160a01b0392831692631c5ecc069234929116906370a0823190610c27903090600401611fe1565b602060405180830381865afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190612190565b6040516001600160e01b031960e085901b168152600481019190915284151560248201526044016000604051808303818588803b158015610ca857600080fd5b505af1158015610cbc573d6000803e3d6000fd5b505050505050565b600033610689818585610cd78383611538565b610ce1919061223c565b6115e9565b610cee61197b565b6001600160a01b0382166000908152600d602052604090205460ff16610d505760405162461bcd60e51b8152602060048201526017602482015276151bdad95b881b9bdd081e595d081cdd5c1c1bdc9d1959604a1b6044820152606401610839565b60008111610da05760405162461bcd60e51b815260206004820152601e60248201527f416d6f756e7420746f206465706f736974206973206d616e6461746f727900006044820152606401610839565b6000610dad6064836121d6565b610db7908361224f565b90506000306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610df9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1d9190612190565b600003610e3a57610e338364e8d4a510006121bf565b9050610f6c565b610e426119d4565b600c5460ff16600003610edc57600b54306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb49190612190565b610ec88569d3c21bcecceda10000006121bf565b610ed291906121bf565b610e3391906121d6565b600b54306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f419190612190565b610f558469d3c21bcecceda10000006121bf565b610f5f91906121bf565b610f6991906121d6565b90505b610f763382611ee2565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610fc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fed9190612221565b5060075460405163095ea7b360e01b81526001600160a01b038681169263095ea7b392611022929091169087906004016121f8565b6020604051808303816000875af1158015611041573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110659190612221565b50600c5460ff166001036110df57600754604051630e2f660360e11b815260048101859052600160248201526001600160a01b0390911690631c5ecc069034906044016000604051808303818588803b1580156110c157600080fd5b505af11580156110d5573d6000803e3d6000fd5b5050505050611154565b600c5460ff1660020361115457600754604051630e2f660360e11b815260048101859052600060248201526001600160a01b0390911690631c5ecc069034906044016000604051808303818588803b15801561113a57600080fd5b505af115801561114e573d6000803e3d6000fd5b50505050505b604080514281526001600160a01b03861660208201529081018490526060810182905233907fc43285a6e98e6524bf49b1c1bdda72f38b968b31d2861d4422c0716e89b131819060800160405180910390a250506111b26001600655565b5050565b6111be61170e565b60ff811615806111d157508060ff166001145b806111df57508060ff166002145b61124a5760405162461bcd60e51b815260206004820152603660248201527f56616c7565206d757374206265203020666f72206e65757472616c2c203120666044820152751bdc88131bdb99c81bdc880c88199bdc8814da1bdc9d60521b6064820152608401610839565b600c5460ff8083169116036112b55760405162461bcd60e51b815260206004820152602b60248201527f52657665727465642062656361757365206578706f736974696f6e206861732060448201526a1b9bdd0818da185b99d95960aa1b6064820152608401610839565b600c805460ff19811660ff84811691821790935560408051428152939092166020840181905291830152907ffa0731d6f72a8f51cd2381cdd6778ccea1323c89d9b49a780eb07d809e4ce1699060600160405180910390a15050565b61131961170e565b6001600160a01b0381166000908152600d602052604090205460ff166113775760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081e595d081859191959606a1b6044820152606401610839565b6001600160a01b0381166000908152600d602052604090819020805460ff19169055517f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3906113c7908390611fe1565b60405180910390a150565b6113da61170e565b6113e46000611f91565b565b6113ee61170e565b6001600160a01b0381166000908152600d602052604090205460ff161561144d5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610839565b6001600160a01b0381166000908152600d602052604090819020805460ff19166001179055517fae340411f33c346ae24187433a8df6e508be40cf0deb3949d51cea12df7fa021906113c7908390611fe1565b6060600580546105f890612156565b600033816114bd8286611538565b90508381101561151d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610839565b6106d882868684036115e9565b6000336106898185856117e2565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61156b61170e565b6113e46119d4565b61157b61170e565b6001600160a01b0381166115e05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610839565b610aa581611f91565b6001600160a01b03831661164b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610839565b6001600160a01b0382166116ac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610839565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000546001600160a01b031633146113e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610839565b60006117748484611538565b905060001981146117dc57818110156117cf5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610839565b6117dc84848484036115e9565b50505050565b6001600160a01b0383166118465760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610839565b6001600160a01b0382166118a85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610839565b6001600160a01b038316600090815260016020526040902054818110156119205760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610839565b6001600160a01b03808516600081815260016020526040808220868603905592861680825290839020805486019055915160008051602061231f8339815191529061196e9086815260200190565b60405180910390a36117dc565b6002600654036119cd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610839565b6002600655565b600b546009546040516370a0823160e01b8152600091829182916001600160a01b0316906370a0823190611a0c903090600401611fe1565b602060405180830381865afa158015611a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4d9190612190565b611a619069d3c21bcecceda10000006121bf565b600a54600754600854604051634a3f088d60e01b81529394506000936001600160a01b0393841693634a3f088d93611aa793908216929116908190600190600401612262565b610100604051808303816000875af1158015611ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aeb919061228c565b5050505050509150506000811115611b8357600a5460075460085460405163045a6f3760e41b81526001600160a01b03938416936345a6f37093611b3d93908216929116908190600190600401612262565b60408051808303816000875af1158015611b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7f91906122f2565b9450505b6000611b8f858361223c565b600a54600754600954600854604051634a3f088d60e01b81529495506000946001600160a01b0394851694634a3f088d94611bd99490821693908216929116908790600401612262565b610100604051808303816000875af1158015611bf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1d919061228c565b5050505050509150506000811115611cba57600a5460075460095460085460405163045a6f3760e41b81526001600160a01b03948516946345a6f37094611c74949082169390821692911690600090600401612262565b60408051808303816000875af1158015611c92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb691906122f2565b9550505b6000611cc6868361224f565b905080611cd3848761223c565b611cdd919061223c565b600b819055507f059d0701380a5813cc605b68bc8aae0c943d3aecbfa3d35e11f8396e056eb6cc42600c60009054906101000a900460ff168a600b54898887306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7e9190612190565b6040805198895260ff9097166020890152958701949094526060860192909252608085015260a084015260c083015260e08201526101000160405180910390a15050505050505050565b6001600160a01b038216611e285760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610839565b6001600160a01b03821660009081526001602052604090205481811015611e9c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610839565b6001600160a01b038316600081815260016020908152604080832086860390556003805487900390555185815291929160008051602061231f8339815191529101611701565b6001600160a01b038216611f385760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610839565b8060036000828254611f4a919061223c565b90915550506001600160a01b03821660008181526001602090815260408083208054860190555184815260008051602061231f833981519152910160405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0391909116815260200190565b600060208083528351808285015260005b8181101561202257858101830151858201604001528201612006565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461205a57600080fd5b919050565b6000806040838503121561207257600080fd5b61207b83612043565b946020939093013593505050565b60006020828403121561209b57600080fd5b6120a482612043565b9392505050565b6000806000606084860312156120c057600080fd5b6120c984612043565b92506120d760208501612043565b9150604084013590509250925092565b6000602082840312156120f957600080fd5b5035919050565b60006020828403121561211257600080fd5b813560ff811681146120a457600080fd5b6000806040838503121561213657600080fd5b61213f83612043565b915061214d60208401612043565b90509250929050565b600181811c9082168061216a57607f821691505b60208210810361218a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156121a257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761068f5761068f6121a9565b6000826121f357634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03929092168252602082015260400190565b8051801515811461205a57600080fd5b60006020828403121561223357600080fd5b6120a482612211565b8082018082111561068f5761068f6121a9565b8181038181111561068f5761068f6121a9565b6001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b600080600080600080600080610100898b0312156122a957600080fd5b885197506020890151965060408901519550606089015194506080890151935060a089015192506122dc60c08a01612211565b915060e089015190509295985092959890939650565b6000806040838503121561230557600080fd5b61230e83612211565b915060208301519050925092905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122047b8c68e053c0b01a377d9dbfb08d147c5437f7b11c6444c87789e45468e78f164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x90 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xAEDF795E EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xB3B3453E EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xDE9257CD EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0xE6F091F9 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xED61F4A1 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x8CD3F064 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x9ECBFA42 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xA3673B38 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x16B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x3027AC22 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x350245C2 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x481D6EE9 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x5FA7B584 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x6639A81D EQ PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x677A2A5 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x11AF7D95 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x1CD2F7C8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x28250E0D EQ PUSH2 0x2D8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1FF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x20AB JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x26B PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH2 0x26B PUSH2 0xAA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x26B PUSH2 0xAE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0xCE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x2100 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x1311 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x27E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x13D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x13E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x14A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0x14AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x4CE CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0x152A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x50E CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x1E3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x2123 JUMP JUMPDEST PUSH2 0x1538 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x596 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x1563 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x5E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2089 JUMP JUMPDEST PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5F8 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x624 SWAP1 PUSH2 0x2156 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x671 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x646 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x671 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x654 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x689 DUP2 DUP6 DUP6 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69D PUSH2 0x170E JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6CD DUP6 DUP3 DUP6 PUSH2 0x1768 JUMP JUMPDEST PUSH2 0x6D8 DUP6 DUP6 DUP6 PUSH2 0x17E2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x6EB PUSH2 0x170E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7CB17597 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7CB17597 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x756 PUSH2 0x197B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x788 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST LT ISZERO PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53757270726973696E676C7920796F752063616E6E6F74207769746864726177 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20746F6B656E20796F752068617665206E6F7420626F75676874000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x859 JUMPI PUSH1 0x0 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x866 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST SWAP1 POP PUSH2 0x8D6 CALLER DUP5 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x996 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH2 0x90C DUP5 PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x91C DUP9 PUSH3 0xF4240 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x930 SWAP2 SWAP1 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94D SWAP3 SWAP2 SWAP1 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x990 SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST POP PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC5DAC33B CALLVALUE CALLER PUSH2 0x9C0 DUP6 PUSH13 0xC9F2C9CD04674EDEA40000000 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x9D0 DUP10 PUSH3 0xF1B30 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP6 ISZERO ISZERO PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x7D655F729E74749EF66079E8380B356147309A7161212C83E699B8E7FB78781C SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xAA5 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7CB17597 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7CB17597 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH2 0x71A JUMP JUMPDEST PUSH2 0xAEB PUSH2 0x170E JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0xB02 JUMPI PUSH1 0x0 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xB47 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB88 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP3 SWAP2 SWAP1 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE8 SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x1C5ECC06 SWAP3 CALLVALUE SWAP3 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xC27 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x689 DUP2 DUP6 DUP6 PUSH2 0xCD7 DUP4 DUP4 PUSH2 0x1538 JUMP JUMPDEST PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x223C JUMP JUMPDEST PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0xCEE PUSH2 0x197B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x151BDAD95B881B9BDD081E595D081CDD5C1C1BDC9D1959 PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xDA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F206465706F736974206973206D616E6461746F72790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD PUSH1 0x64 DUP4 PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0xDB7 SWAP1 DUP4 PUSH2 0x224F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE1D SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x0 SUB PUSH2 0xE3A JUMPI PUSH2 0xE33 DUP4 PUSH5 0xE8D4A51000 PUSH2 0x21BF JUMP JUMPDEST SWAP1 POP PUSH2 0xF6C JUMP JUMPDEST PUSH2 0xE42 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0xEDC JUMPI PUSH1 0xB SLOAD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0xEC8 DUP6 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0xED2 SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x21D6 JUMP JUMPDEST PUSH1 0xB SLOAD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF41 SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0xF55 DUP5 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0xF69 SWAP2 SWAP1 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xF76 CALLER DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFED SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x1022 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1041 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1065 SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x1 SUB PUSH2 0x10DF JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE2F6603 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x1C5ECC06 SWAP1 CALLVALUE SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x1154 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 SUB PUSH2 0x1154 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE2F6603 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x1C5ECC06 SWAP1 CALLVALUE SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x114E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0xC43285A6E98E6524BF49B1C1BDDA72F38B968B31D2861D4422C0716E89B13181 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x11B2 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11BE PUSH2 0x170E JUMP JUMPDEST PUSH1 0xFF DUP2 AND ISZERO DUP1 PUSH2 0x11D1 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST DUP1 PUSH2 0x11DF JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x2 EQ JUMPDEST PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C7565206D757374206265203020666F72206E65757472616C2C20312066 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1BDC88131BDB99C81BDC880C88199BDC8814DA1BDC9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF DUP1 DUP4 AND SWAP2 AND SUB PUSH2 0x12B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657665727465642062656361757365206578706F736974696F6E2068617320 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1B9BDD0818DA185B99D959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD TIMESTAMP DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 DUP4 ADD MSTORE SWAP1 PUSH32 0xFA0731D6F72A8F51CD2381CDD6778CCEA1323C89D9B49A780EB07D809E4CE169 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1319 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1377 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881B9BDD081E595D081859191959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x4C910B69FE65A61F7531B9C5042B2329CA7179C77290AA7E2EB3AFA3C8511FD3 SWAP1 PUSH2 0x13C7 SWAP1 DUP4 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x13DA PUSH2 0x170E JUMP JUMPDEST PUSH2 0x13E4 PUSH1 0x0 PUSH2 0x1F91 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13EE PUSH2 0x170E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x144D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B88185B1C9958591E481859191959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xAE340411F33C346AE24187433A8DF6E508BE40CF0DEB3949D51CEA12DF7FA021 SWAP1 PUSH2 0x13C7 SWAP1 DUP4 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x5F8 SWAP1 PUSH2 0x2156 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x14BD DUP3 DUP7 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x151D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH2 0x6D8 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x689 DUP2 DUP6 DUP6 PUSH2 0x17E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x156B PUSH2 0x170E JUMP JUMPDEST PUSH2 0x13E4 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0x157B PUSH2 0x170E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH2 0xAA5 DUP2 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x164B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1774 DUP5 DUP5 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x17DC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x17CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH2 0x17DC DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x15E9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1846 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x196E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x19CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1A0C SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A4D SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH2 0x1A61 SWAP1 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A3F088D PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP5 POP PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0x4A3F088D SWAP4 PUSH2 0x1AA7 SWAP4 SWAP1 DUP3 AND SWAP3 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2262 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AEB SWAP2 SWAP1 PUSH2 0x228C JUMP JUMPDEST POP POP POP POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1B83 JUMPI PUSH1 0xA SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x45A6F37 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0x45A6F370 SWAP4 PUSH2 0x1B3D SWAP4 SWAP1 DUP3 AND SWAP3 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B5B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B7F SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST SWAP5 POP POP JUMPDEST PUSH1 0x0 PUSH2 0x1B8F DUP6 DUP4 PUSH2 0x223C JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A3F088D PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP6 POP PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x4A3F088D SWAP5 PUSH2 0x1BD9 SWAP5 SWAP1 DUP3 AND SWAP4 SWAP1 DUP3 AND SWAP3 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2262 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C1D SWAP2 SWAP1 PUSH2 0x228C JUMP JUMPDEST POP POP POP POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1CBA JUMPI PUSH1 0xA SLOAD PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x45A6F37 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0x45A6F370 SWAP5 PUSH2 0x1C74 SWAP5 SWAP1 DUP3 AND SWAP4 SWAP1 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CB6 SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST SWAP6 POP POP JUMPDEST PUSH1 0x0 PUSH2 0x1CC6 DUP7 DUP4 PUSH2 0x224F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1CD3 DUP5 DUP8 PUSH2 0x223C JUMP JUMPDEST PUSH2 0x1CDD SWAP2 SWAP1 PUSH2 0x223C JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0x59D0701380A5813CC605B68BC8AAE0C943D3AECBFA3D35E11F8396E056EB6CC TIMESTAMP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP11 PUSH1 0xB SLOAD DUP10 DUP9 DUP8 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0xFF SWAP1 SWAP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1E9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x839 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F4A SWAP2 SWAP1 PUSH2 0x223C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x231F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2022 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2006 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x205A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2072 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x207B DUP4 PUSH2 0x2043 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x209B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A4 DUP3 PUSH2 0x2043 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20C9 DUP5 PUSH2 0x2043 JUMP JUMPDEST SWAP3 POP PUSH2 0x20D7 PUSH1 0x20 DUP6 ADD PUSH2 0x2043 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x20A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213F DUP4 PUSH2 0x2043 JUMP JUMPDEST SWAP2 POP PUSH2 0x214D PUSH1 0x20 DUP5 ADD PUSH2 0x2043 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x216A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x218A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x68F JUMPI PUSH2 0x68F PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x21F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x205A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A4 DUP3 PUSH2 0x2211 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x68F JUMPI PUSH2 0x68F PUSH2 0x21A9 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x68F JUMPI PUSH2 0x68F PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x22A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 MLOAD SWAP8 POP PUSH1 0x20 DUP10 ADD MLOAD SWAP7 POP PUSH1 0x40 DUP10 ADD MLOAD SWAP6 POP PUSH1 0x60 DUP10 ADD MLOAD SWAP5 POP PUSH1 0x80 DUP10 ADD MLOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD MLOAD SWAP3 POP PUSH2 0x22DC PUSH1 0xC0 DUP11 ADD PUSH2 0x2211 JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x230E DUP4 PUSH2 0x2211 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xB8 0xC6 DUP15 SDIV EXTCODECOPY SIGNEXTEND ADD LOG3 PUSH24 0xD9DBFB08D147C5437F7B11C6444C87789E45468E78F16473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"1790:9528:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4495:97;;;;;;;;;;-1:-1:-1;4571:14:7;;-1:-1:-1;;;;;4571:14:7;4495:97;;;;;;;:::i;:::-;;;;;;;;2154:98:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4431:197::-;;;;;;;;;;-1:-1:-1;4431:197:10;;;;;:::i;:::-;;:::i;:::-;;;1377:14:14;;1370:22;1352:41;;1340:2;1325:18;4431:197:10;1212:187:14;4390:100:7;;;;;;;;;;-1:-1:-1;4390:100:7;;;;;:::i;:::-;;:::i;:::-;;3242:106:10;;;;;;;;;;-1:-1:-1;3329:12:10;;3242:106;;;1741:25:14;;;1729:2;1714:18;3242:106:10;1595:177:14;2188:23:7;;;;;;;;;;-1:-1:-1;2188:23:7;;;;;;;;;;;1949:4:14;1937:17;;;1919:36;;1907:2;1892:18;2188:23:7;1777:184:14;5190:286:10;;;;;;;;;;-1:-1:-1;5190:286:10;;;;;:::i;:::-;;:::i;5902:172:7:-;;;:::i;10249:1067::-;;;;;;:::i;:::-;;:::i;6079:174::-;;;:::i;3091:91:10:-;;;;;;;;;;-1:-1:-1;3173:2:10;3091:91;;5508:389:7;;;:::i;5871:234:10:-;;;;;;;;;;-1:-1:-1;5871:234:10;;;;;:::i;:::-;;:::i;8348:1646:7:-;;;;;;:::i;:::-;;:::i;4905:504::-;;;;;;;;;;-1:-1:-1;4905:504:7;;;;;:::i;:::-;;:::i;3743:224::-;;;;;;;;;;-1:-1:-1;3743:224:7;;;;;:::i;:::-;;:::i;7843:97::-;;;;;;;;;;-1:-1:-1;7920:13:7;;7843:97;;3406:125:10;;;;;;;;;;-1:-1:-1;3406:125:10;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:10;3480:7;3506:18;;;:9;:18;;;;;;;3406:125;1831:101:8;;;;;;;;;;;;;:::i;2010:64:7:-;;;;;;;;;;-1:-1:-1;2010:64:7;;;;-1:-1:-1;;;;;2010:64:7;;;3513:225;;;;;;;;;;-1:-1:-1;3513:225:7;;;;;:::i;:::-;;:::i;1201:85:8:-;;;;;;;;;;-1:-1:-1;1247:7:8;1273:6;-1:-1:-1;;;;;1273:6:8;1201:85;;2365:102:10;;;;;;;;;;;;;:::i;1905:29:7:-;;;;;;;;;;-1:-1:-1;1905:29:7;;;;-1:-1:-1;;;;;1905:29:7;;;2154:28;;;;;;;;;;;;;;;;6592:427:10;;;;;;;;;;-1:-1:-1;6592:427:10;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;;;;;-1:-1:-1;3727:189:10;;;;;:::i;:::-;;:::i;1940:64:7:-;;;;;;;;;;-1:-1:-1;1940:64:7;;;;-1:-1:-1;;;;;1940:64:7;;;2257:45;;;;;;;;;;-1:-1:-1;2257:45:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;2080:68;;;;;;;;;;-1:-1:-1;2080:68:7;;;;-1:-1:-1;;;;;2080:68:7;;;3974:149:10;;;;;;;;;;-1:-1:-1;3974:149:10;;;;;:::i;:::-;;:::i;5414:89:7:-;;;;;;;;;;-1:-1:-1;5486:10:7;;;;5414:89;;3972:122;;;;;;;;;;-1:-1:-1;3972:122:7;;;;;:::i;:::-;-1:-1:-1;;;;;4060:27:7;4037:4;4060:27;;;:13;:27;;;;;;;;;3972:122;6330:79;;;;;;;;;;;;;:::i;2081:198:8:-;;;;;;;;;;-1:-1:-1;2081:198:8;;;;;:::i;:::-;;:::i;2154:98:10:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:13;4568:32:10;719:10:13;4584:7:10;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;4390:100:7:-;1094:13:8;:11;:13::i;:::-;4461:14:7::1;:22:::0;;-1:-1:-1;;;;;;4461:22:7::1;-1:-1:-1::0;;;;;4461:22:7;;;::::1;::::0;;;::::1;::::0;;4390:100::o;5190:286:10:-;5317:4;719:10:13;5373:38:10;5389:4;719:10:13;5404:6:10;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:10;;5190:286;-1:-1:-1;;;;5190:286:10:o;5902:172:7:-;1094:13:8;:11;:13::i;:::-;5988:14:7::1;::::0;5973:94:::1;::::0;-1:-1:-1;;;5973:94:7;;5988:14;5973:94:::1;::::0;::::1;1352:41:14::0;-1:-1:-1;;;;;5988:14:7;;::::1;::::0;5973:48:::1;::::0;6029:9:::1;::::0;1325:18:14;;5973:94:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;5902:172::o:0;10249:1067::-;2261:21:9;:19;:21::i;:::-;10342:1:7::1;10332:7;:11;10324:20;;;::::0;::::1;;10375:26;::::0;-1:-1:-1;;;10375:26:7;;10405:7;;10375:4:::1;::::0;:14:::1;::::0;:26:::1;::::0;10390:10:::1;::::0;10375:26:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;10354:142;;;::::0;-1:-1:-1;;;10354:142:7;;3799:2:14;10354:142:7::1;::::0;::::1;3781:21:14::0;3838:2;3818:18;;;3811:30;3877:34;3857:18;;;3850:62;3948:28;3928:18;;;3921:56;3994:19;;10354:142:7::1;;;;;;;;;10521:10;::::0;10506:11:::1;::::0;10521:10:::1;;::::0;:15:::1;:30;;10546:5;10521:30;;;10539:4;10521:30;10506:46;;10562:12;:10;:12::i;:::-;10584:20;10607:4;-1:-1:-1::0;;;;;10607:16:7::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10584:41;;10635:26;10641:10;10653:7;10635:5;:26::i;:::-;10684:10;::::0;::::1;;;:15:::0;10680:534:::1;;10722:4;::::0;-1:-1:-1;;;;;10722:4:7::1;10715:21;10737:10;10780:19;:12:::0;10793:6:::1;10780:19;:::i;:::-;10764:13;::::0;10749::::1;10755:7:::0;10749:5:::1;:13;:::i;:::-;:28;;;;:::i;:::-;10748:52;;;;:::i;:::-;10715:86;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10680:534;;;10847:14;::::0;-1:-1:-1;;;;;10847:14:7::1;10832:47;10887:9;10915:10;10978:19;:12:::0;10991:6:::1;10978:19;:::i;:::-;10962:13;::::0;10944:16:::1;10953:7:::0;10944:8:::1;:16;:::i;:::-;:31;;;;:::i;:::-;10943:55;;;;:::i;:::-;10832:371;::::0;-1:-1:-1;;;;;;10832:371:7::1;::::0;;;;;;-1:-1:-1;;;;;5420:32:14;;;10832:371:7::1;::::0;::::1;5402:51:14::0;5469:18;;;5462:34;5539:14;;5532:22;5512:18;;;5505:50;5375:18;;10832:371:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;10680:534;11281:13;::::0;11229:80:::1;::::0;;11255:15:::1;5797:25:14::0;;5853:2;5838:18;;5831:34;;;5881:18;;;5874:34;;;;5939:2;5924:18;;5917:34;;;11243:10:7::1;::::0;11229:80:::1;::::0;5784:3:14;5769:19;11229:80:7::1;;;;;;;10314:1002;;2303:20:9::0;1716:1;2809:7;:22;2629:209;2303:20;10249:1067:7;:::o;6079:174::-;1094:13:8;:11;:13::i;:::-;6166:14:7::1;::::0;6151:95:::1;::::0;-1:-1:-1;;;6151:95:7;;6166:14:::1;6151:95;::::0;::::1;1352:41:14::0;-1:-1:-1;;;;;6166:14:7;;::::1;::::0;6151:48:::1;::::0;6207:9:::1;::::0;1325:18:14;;6151:95:7::1;1212:187:14::0;5508:389:7;1094:13:8;:11;:13::i;:::-;5584:10:7::1;::::0;5569:11:::1;::::0;5584:10:::1;;::::0;:15:::1;:30;;5609:5;5584:30;;;5602:4;5584:30;5632:4;::::0;5659:14:::1;::::0;5687:37:::1;::::0;-1:-1:-1;;;5687:37:7;;5569:46;;-1:-1:-1;;;;;;5632:4:7;;::::1;::::0;5625:20:::1;::::0;5659:14;;::::1;::::0;5632:4;;5687:22:::1;::::0;:37:::1;::::0;5718:4:::1;::::0;5687:37:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5625:109;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5759:14:7::1;::::0;5830:4:::1;::::0;5823:37:::1;::::0;-1:-1:-1;;;5823:37:7;;-1:-1:-1;;;;;5759:14:7;;::::1;::::0;5744:47:::1;::::0;5799:9:::1;::::0;5830:4;::::1;::::0;5823:22:::1;::::0;:37:::1;::::0;5854:4:::1;::::0;5823:37:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5744:146;::::0;-1:-1:-1;;;;;;5744:146:7::1;::::0;;;;;;::::1;::::0;::::1;6130:25:14::0;;;;6198:14;;6191:22;6171:18;;;6164:50;6103:18;;5744:146:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;5559:338;5508:389::o:0;5871:234:10:-;5959:4;719:10:13;6013:64:10;719:10:13;6029:7:10;6066:10;6038:25;719:10:13;6029:7:10;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;8348:1646:7:-;2261:21:9;:19;:21::i;:::-;-1:-1:-1;;;;;8452:27:7;::::1;;::::0;;;:13:::1;:27;::::0;;;;;::::1;;8444:63;;;::::0;-1:-1:-1;;;8444:63:7;;6557:2:14;8444:63:7::1;::::0;::::1;6539:21:14::0;6596:2;6576:18;;;6569:30;-1:-1:-1;;;6615:18:14;;;6608:53;6678:18;;8444:63:7::1;6355:347:14::0;8444:63:7::1;8535:1;8525:7;:11;8517:54;;;::::0;-1:-1:-1;;;8517:54:7;;6909:2:14;8517:54:7::1;::::0;::::1;6891:21:14::0;6948:2;6928:18;;;6921:30;6987:32;6967:18;;;6960:60;7037:18;;8517:54:7::1;6707:354:14::0;8517:54:7::1;8581:19;8613:13;8623:3;8613:7:::0;:13:::1;:::i;:::-;8603:23;::::0;:7;:23:::1;:::i;:::-;8581:45;;8699:22;8735:4;-1:-1:-1::0;;;;;8735:16:7::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8757:1;8735:23:::0;8731:547:::1;;8791:18;:7:::0;8802:6:::1;8791:18;:::i;:::-;8774:35;;8731:547;;;8886:12;:10;:12::i;:::-;8916:10;::::0;::::1;;;:15:::0;8912:356:::1;;9033:13;;8991:4;-1:-1:-1::0;;;;;8991:16:7::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8970;8981:7:::0;8971:6:::1;8970:18;:::i;:::-;:39;;;;:::i;:::-;8969:77;;;;:::i;8912:356::-;9192:13;;9170:4;-1:-1:-1::0;;;;;9170:16:7::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9105:42;9136:11:::0;9106:6:::1;9105:42;:::i;:::-;:83;;;;:::i;:::-;9104:101;;;;:::i;:::-;9086:120;;8912:356;9287:33;9293:10;9305:14;9287:5;:33::i;:::-;9330:69;::::0;-1:-1:-1;;;9330:69:7;;9364:10:::1;9330:69;::::0;::::1;7439:34:14::0;9384:4:7::1;7489:18:14::0;;;7482:43;7541:18;;;7534:34;;;-1:-1:-1;;;;;9330:33:7;::::1;::::0;::::1;::::0;7374:18:14;;9330:69:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9438:14:7::1;::::0;9409:53:::1;::::0;-1:-1:-1;;;9409:53:7;;-1:-1:-1;;;;;9409:28:7;;::::1;::::0;::::1;::::0;:53:::1;::::0;9438:14;;::::1;::::0;9454:7;;9409:53:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9476:10:7::1;::::0;::::1;;::::0;:15;9472:351:::1;;9522:14;::::0;9507:126:::1;::::0;-1:-1:-1;;;9507:126:7;;::::1;::::0;::::1;6130:25:14::0;;;9522:14:7;6171:18:14;;;6164:50;-1:-1:-1;;;;;9522:14:7;;::::1;::::0;9507:47:::1;::::0;9562:9:::1;::::0;6103:18:14;;9507:126:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;9472:351;;;9654:10;::::0;::::1;;9668:1;9654:15:::0;9650:173:::1;;9700:14;::::0;9685:127:::1;::::0;-1:-1:-1;;;9685:127:7;;::::1;::::0;::::1;6130:25:14::0;;;9700:14:7::1;6171:18:14::0;;;6164:50;-1:-1:-1;;;;;9700:14:7;;::::1;::::0;9685:47:::1;::::0;9740:9:::1;::::0;6103:18:14;;9685:127:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;9650:173;9837:150;::::0;;9887:15:::1;7810:25:14::0;;-1:-1:-1;;;;;7871:32:14;;7866:2;7851:18;;7844:60;7920:18;;;7913:34;;;7978:2;7963:18;;7956:34;;;9863:10:7::1;::::0;9837:150:::1;::::0;7797:3:14;7782:19;9837:150:7::1;;;;;;;8434:1560;;2303:20:9::0;1716:1;2809:7;:22;2629:209;2303:20;8348:1646:7;;:::o;4905:504::-;1094:13:8;:11;:13::i;:::-;4997:16:7::1;::::0;::::1;::::0;;:36:::1;;;5017:11;:16;;5032:1;5017:16;4997:36;:56;;;;5037:11;:16;;5052:1;5037:16;4997:56;4976:157;;;::::0;-1:-1:-1;;;4976:157:7;;8203:2:14;4976:157:7::1;::::0;::::1;8185:21:14::0;8242:2;8222:18;;;8215:30;8281:34;8261:18;;;8254:62;-1:-1:-1;;;8332:18:14;;;8325:52;8394:19;;4976:157:7::1;8001:418:14::0;4976:157:7::1;5164:10;::::0;:25:::1;::::0;;::::1;:10:::0;::::1;:25:::0;5143:115:::1;;;::::0;-1:-1:-1;;;5143:115:7;;8626:2:14;5143:115:7::1;::::0;::::1;8608:21:14::0;8665:2;8645:18;;;8638:30;8704:34;8684:18;;;8677:62;-1:-1:-1;;;8755:18:14;;;8748:41;8806:19;;5143:115:7::1;8424:407:14::0;5143:115:7::1;5290:10;::::0;;-1:-1:-1;;5310:24:7;::::1;5290:10;5310:24:::0;;::::1;::::0;;::::1;::::0;;;5349:53:::1;::::0;;5359:15:::1;9030:25:14::0;;5290:10:7;;;::::1;9086:2:14::0;9071:18;;9064:45;;;9125:18;;;9118:45;5290:10:7;5349:53:::1;::::0;9018:2:14;9003:18;5349:53:7::1;;;;;;;4966:443;4905:504:::0;:::o;3743:224::-;1094:13:8;:11;:13::i;:::-;-1:-1:-1;;;;;3823:27:7;::::1;;::::0;;;:13:::1;:27;::::0;;;;;::::1;;3815:59;;;::::0;-1:-1:-1;;;3815:59:7;;9376:2:14;3815:59:7::1;::::0;::::1;9358:21:14::0;9415:2;9395:18;;;9388:30;-1:-1:-1;;;9434:18:14;;;9427:49;9493:18;;3815:59:7::1;9174:343:14::0;3815:59:7::1;-1:-1:-1::0;;;;;3884:27:7;::::1;3914:5;3884:27:::0;;;:13:::1;:27;::::0;;;;;;:35;;-1:-1:-1;;3884:35:7::1;::::0;;3934:26;::::1;::::0;::::1;::::0;3898:12;;3934:26:::1;:::i;:::-;;;;;;;;3743:224:::0;:::o;1831:101:8:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3513:225:7:-;1094:13:8;:11;:13::i;:::-;-1:-1:-1;;;;;3594:27:7;::::1;;::::0;;;:13:::1;:27;::::0;;;;;::::1;;3593:28;3585:60;;;::::0;-1:-1:-1;;;3585:60:7;;9724:2:14;3585:60:7::1;::::0;::::1;9706:21:14::0;9763:2;9743:18;;;9736:30;-1:-1:-1;;;9782:18:14;;;9775:49;9841:18;;3585:60:7::1;9522:343:14::0;3585:60:7::1;-1:-1:-1::0;;;;;3655:27:7;::::1;;::::0;;;:13:::1;:27;::::0;;;;;;:34;;-1:-1:-1;;3655:34:7::1;3685:4;3655:34;::::0;;3704:27;::::1;::::0;::::1;::::0;3669:12;;3704:27:::1;:::i;2365:102:10:-:0;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:13;6685:4:10;6766:25;719:10:13;6783:7:10;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:10;;10072:2:14;6801:85:10;;;10054:21:14;10111:2;10091:18;;;10084:30;10150:34;10130:18;;;10123:62;-1:-1:-1;;;10201:18:14;;;10194:35;10246:19;;6801:85:10;9870:401:14;6801:85:10;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:13;3860:28:10;719:10:13;3877:2:10;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:10;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;6330:79:7:-;1094:13:8;:11;:13::i;:::-;6390:12:7::1;:10;:12::i;2081:198:8:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:8;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:8;;10478:2:14;2161:73:8::1;::::0;::::1;10460:21:14::0;10517:2;10497:18;;;10490:30;10556:34;10536:18;;;10529:62;-1:-1:-1;;;10607:18:14;;;10600:36;10653:19;;2161:73:8::1;10276:402:14::0;2161:73:8::1;2244:28;2263:8;2244:18;:28::i;10504:370:10:-:0;-1:-1:-1;;;;;10635:19:10;;10627:68;;;;-1:-1:-1;;;10627:68:10;;10885:2:14;10627:68:10;;;10867:21:14;10924:2;10904:18;;;10897:30;10963:34;10943:18;;;10936:62;-1:-1:-1;;;11014:18:14;;;11007:34;11058:19;;10627:68:10;10683:400:14;10627:68:10;-1:-1:-1;;;;;10713:21:10;;10705:68;;;;-1:-1:-1;;;10705:68:10;;11290:2:14;10705:68:10;;;11272:21:14;11329:2;11309:18;;;11302:30;11368:34;11348:18;;;11341:62;-1:-1:-1;;;11419:18:14;;;11412:32;11461:19;;10705:68:10;11088:398:14;10705:68:10;-1:-1:-1;;;;;10784:18:10;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1741:25:14;;;10835:32:10;;1714:18:14;10835:32:10;;;;;;;;10504:370;;;:::o;1359:130:8:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:8;719:10:13;1422:23:8;1414:68;;;;-1:-1:-1;;;1414:68:8;;11693:2:14;1414:68:8;;;11675:21:14;;;11712:18;;;11705:30;11771:34;11751:18;;;11744:62;11823:18;;1414:68:8;11491:356:14;11155:441:10;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:10;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:10;;12054:2:14;11404:68:10;;;12036:21:14;12093:2;12073:18;;;12066:30;12132:31;12112:18;;;12105:59;12181:18;;11404:68:10;11852:353:14;11404:68:10;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:10;;7591:68;;;;-1:-1:-1;;;7591:68:10;;12412:2:14;7591:68:10;;;12394:21:14;12451:2;12431:18;;;12424:30;12490:34;12470:18;;;12463:62;-1:-1:-1;;;12541:18:14;;;12534:35;12586:19;;7591:68:10;12210:401:14;7591:68:10;-1:-1:-1;;;;;7677:16:10;;7669:64;;;;-1:-1:-1;;;7669:64:10;;12818:2:14;7669:64:10;;;12800:21:14;12857:2;12837:18;;;12830:30;12896:34;12876:18;;;12869:62;-1:-1:-1;;;12947:18:14;;;12940:33;12990:19;;7669:64:10;12616:399:14;7669:64:10;-1:-1:-1;;;;;7815:15:10;;7793:19;7815:15;;;:9;:15;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:10;;13222:2:14;7840:72:10;;;13204:21:14;13261:2;13241:18;;;13234:30;13300:34;13280:18;;;13273:62;-1:-1:-1;;;13351:18:14;;;13344:36;13397:19;;7840:72:10;13020:402:14;7840:72:10;-1:-1:-1;;;;;7946:15:10;;;;;;;:9;:15;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;-1:-1:-1;;;;;;;;;;;8210:26:10;;;7978:6;1741:25:14;;1729:2;1714:18;;1595:177;8210:26:10;;;;;;;;8247:37;9422:659;2336:287:9;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:9;;13629:2:14;2460:63:9;;;13611:21:14;13668:2;13648:18;;;13641:30;13707:33;13687:18;;;13680:61;13758:18;;2460:63:9;13427:355:14;2460:63:9;1759:1;2598:7;:18;2336:287::o;6436:1402:7:-;6493:13;;6615:4;;6609:36;;-1:-1:-1;;;6609:36:7;;6476:14;;;;;;-1:-1:-1;;;;;6615:4:7;;6609:21;;:36;;6639:4;;6609:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;6648:6;6609:45;:::i;:::-;6758:8;;6793:14;;6809:4;;6748:78;;-1:-1:-1;;;6748:78:7;;6591:63;;-1:-1:-1;6709:23:7;;-1:-1:-1;;;;;6758:8:7;;;;6748:44;;:78;;6793:14;;;;6809:4;;;;;6758:8;;6748:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6706:120;;;;;;;;;6858:1;6840:15;:19;6836:220;;;6907:8;;6951:14;;6983:4;;6897:148;;-1:-1:-1;;;6897:148:7;;-1:-1:-1;;;;;6907:8:7;;;;6897:36;;:148;;6951:14;;;;6983:4;;;;;6907:8;;6897:148;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6875:170;-1:-1:-1;;6836:220:7;7065:15;7084:33;7102:15;7084;:33;:::i;:::-;7181:8;;7216:14;;7232:4;;7238;;7171:79;;-1:-1:-1;;;7171:79:7;;7065:53;;-1:-1:-1;7131:24:7;;-1:-1:-1;;;;;7181:8:7;;;;7171:44;;:79;;7216:14;;;;7232:4;;;;7238;;;7131:24;;7171:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7128:122;;;;;;;;;7283:1;7264:16;:20;7260:223;;;7333:8;;7377:14;;7409:4;;7431;;7323:149;;-1:-1:-1;;;7323:149:7;;-1:-1:-1;;;;;7333:8:7;;;;7323:36;;:149;;7377:14;;;;7409:4;;;;7431;;;7333:8;;7323:149;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7300:172;-1:-1:-1;;7260:223:7;7492:16;7512:35;7531:16;7512;:35;:::i;:::-;7492:56;-1:-1:-1;7492:56:7;7574:17;7584:7;7574;:17;:::i;:::-;:28;;;;:::i;:::-;7558:13;:44;;;;7617:214;7639:15;7668:10;;;;;;;;;;;7692:6;7712:13;;7739:7;7760;7781:8;7803:4;-1:-1:-1;;;;;7803:16:7;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7617:214;;;15504:25:14;;;15577:4;15565:17;;;15560:2;15545:18;;15538:45;15599:18;;;15592:34;;;;15657:2;15642:18;;15635:34;;;;15700:3;15685:19;;15678:35;15744:3;15729:19;;15722:35;15788:3;15773:19;;15766:35;15832:3;15817:19;;15810:35;15491:3;15476:19;7617:214:7;;;;;;;6466:1372;;;;;;;;6436:1402::o;9422:659:10:-;-1:-1:-1;;;;;9505:21:10;;9497:67;;;;-1:-1:-1;;;9497:67:10;;16058:2:14;9497:67:10;;;16040:21:14;16097:2;16077:18;;;16070:30;16136:34;16116:18;;;16109:62;-1:-1:-1;;;16187:18:14;;;16180:31;16228:19;;9497:67:10;15856:397:14;9497:67:10;-1:-1:-1;;;;;9660:18:10;;9635:22;9660:18;;;:9;:18;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:10;;16460:2:14;9688:71:10;;;16442:21:14;16499:2;16479:18;;;16472:30;16538:34;16518:18;;;16511:62;-1:-1:-1;;;16589:18:14;;;16582:32;16631:19;;9688:71:10;16258:398:14;9688:71:10;-1:-1:-1;;;;;9793:18:10;;;;;;:9;:18;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1741:25:14;;;9793:18:10;;;-1:-1:-1;;;;;;;;;;;9978:37:10;1714:18:14;9978:37:10;1595:177:14;8567:535:10;-1:-1:-1;;;;;8650:21:10;;8642:65;;;;-1:-1:-1;;;8642:65:10;;16863:2:14;8642:65:10;;;16845:21:14;16902:2;16882:18;;;16875:30;16941:33;16921:18;;;16914:61;16992:18;;8642:65:10;16661:355:14;8642:65:10;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:10;;;;;;:9;:18;;;;;;;;:28;;;;;;8999:37;1741:25:14;;;-1:-1:-1;;;;;;;;;;;8999:37:10;1714:18:14;8999:37:10;;;;;;;8348:1646:7;;:::o;2433:187:8:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:8;;;-1:-1:-1;;;;;;2541:17:8;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:203:14:-;-1:-1:-1;;;;;178:32:14;;;;160:51;;148:2;133:18;;14:203::o;222:548::-;334:4;363:2;392;381:9;374:21;424:6;418:13;467:6;462:2;451:9;447:18;440:34;492:1;502:140;516:6;513:1;510:13;502:140;;;611:14;;;607:23;;601:30;577:17;;;596:2;573:26;566:66;531:10;;502:140;;;506:3;691:1;686:2;677:6;666:9;662:22;658:31;651:42;761:2;754;750:7;745:2;737:6;733:15;729:29;718:9;714:45;710:54;702:62;;;;222:548;;;;:::o;775:173::-;843:20;;-1:-1:-1;;;;;892:31:14;;882:42;;872:70;;938:1;935;928:12;872:70;775:173;;;:::o;953:254::-;1021:6;1029;1082:2;1070:9;1061:7;1057:23;1053:32;1050:52;;;1098:1;1095;1088:12;1050:52;1121:29;1140:9;1121:29;:::i;:::-;1111:39;1197:2;1182:18;;;;1169:32;;-1:-1:-1;;;953:254:14:o;1404:186::-;1463:6;1516:2;1504:9;1495:7;1491:23;1487:32;1484:52;;;1532:1;1529;1522:12;1484:52;1555:29;1574:9;1555:29;:::i;:::-;1545:39;1404:186;-1:-1:-1;;;1404:186:14:o;1966:328::-;2043:6;2051;2059;2112:2;2100:9;2091:7;2087:23;2083:32;2080:52;;;2128:1;2125;2118:12;2080:52;2151:29;2170:9;2151:29;:::i;:::-;2141:39;;2199:38;2233:2;2222:9;2218:18;2199:38;:::i;:::-;2189:48;;2284:2;2273:9;2269:18;2256:32;2246:42;;1966:328;;;;;:::o;2299:180::-;2358:6;2411:2;2399:9;2390:7;2386:23;2382:32;2379:52;;;2427:1;2424;2417:12;2379:52;-1:-1:-1;2450:23:14;;2299:180;-1:-1:-1;2299:180:14:o;2484:269::-;2541:6;2594:2;2582:9;2573:7;2569:23;2565:32;2562:52;;;2610:1;2607;2600:12;2562:52;2649:9;2636:23;2699:4;2692:5;2688:16;2681:5;2678:27;2668:55;;2719:1;2716;2709:12;2758:260;2826:6;2834;2887:2;2875:9;2866:7;2862:23;2858:32;2855:52;;;2903:1;2900;2893:12;2855:52;2926:29;2945:9;2926:29;:::i;:::-;2916:39;;2974:38;3008:2;2997:9;2993:18;2974:38;:::i;:::-;2964:48;;2758:260;;;;;:::o;3023:380::-;3102:1;3098:12;;;;3145;;;3166:61;;3220:4;3212:6;3208:17;3198:27;;3166:61;3273:2;3265:6;3262:14;3242:18;3239:38;3236:161;;3319:10;3314:3;3310:20;3307:1;3300:31;3354:4;3351:1;3344:15;3382:4;3379:1;3372:15;3236:161;;3023:380;;;:::o;3408:184::-;3478:6;3531:2;3519:9;3510:7;3506:23;3502:32;3499:52;;;3547:1;3544;3537:12;3499:52;-1:-1:-1;3570:16:14;;3408:184;-1:-1:-1;3408:184:14:o;4024:127::-;4085:10;4080:3;4076:20;4073:1;4066:31;4116:4;4113:1;4106:15;4140:4;4137:1;4130:15;4156:168;4229:9;;;4260;;4277:15;;;4271:22;;4257:37;4247:71;;4298:18;;:::i;4329:217::-;4369:1;4395;4385:132;;4439:10;4434:3;4430:20;4427:1;4420:31;4474:4;4471:1;4464:15;4502:4;4499:1;4492:15;4385:132;-1:-1:-1;4531:9:14;;4329:217::o;4551:274::-;-1:-1:-1;;;;;4743:32:14;;;;4725:51;;4807:2;4792:18;;4785:34;4713:2;4698:18;;4551:274::o;4830:164::-;4906:13;;4955;;4948:21;4938:32;;4928:60;;4984:1;4981;4974:12;4999:202;5066:6;5119:2;5107:9;5098:7;5094:23;5090:32;5087:52;;;5135:1;5132;5125:12;5087:52;5158:37;5185:9;5158:37;:::i;6225:125::-;6290:9;;;6311:10;;;6308:36;;;6324:18;;:::i;7066:128::-;7133:9;;;7154:11;;;7151:37;;;7168:18;;:::i;13787:466::-;-1:-1:-1;;;;;14068:15:14;;;14050:34;;14120:15;;;14115:2;14100:18;;14093:43;14172:15;;14167:2;14152:18;;14145:43;14231:14;;14224:22;14219:2;14204:18;;14197:50;13999:3;13984:19;;13787:466::o;14258:634::-;14388:6;14396;14404;14412;14420;14428;14436;14444;14497:3;14485:9;14476:7;14472:23;14468:33;14465:53;;;14514:1;14511;14504:12;14465:53;14543:9;14537:16;14527:26;;14593:2;14582:9;14578:18;14572:25;14562:35;;14637:2;14626:9;14622:18;14616:25;14606:35;;14681:2;14670:9;14666:18;14660:25;14650:35;;14725:3;14714:9;14710:19;14704:26;14694:36;;14770:3;14759:9;14755:19;14749:26;14739:36;;14794:47;14836:3;14825:9;14821:19;14794:47;:::i;:::-;14784:57;;14881:3;14870:9;14866:19;14860:26;14850:36;;14258:634;;;;;;;;;;;:::o;14897:263::-;14973:6;14981;15034:2;15022:9;15013:7;15009:23;15005:32;15002:52;;;15050:1;15047;15040:12;15002:52;15073:37;15100:9;15073:37;:::i;:::-;15063:47;;15150:2;15139:9;15135:18;15129:25;15119:35;;14897:263;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1815200","executionCost":"infinite","totalCost":"infinite"},"external":{"GMX_controller()":"2516","USDC()":"2428","WETH()":"2405","acceptToken(address)":"30201","allowance(address,address)":"infinite","approve(address,uint256)":"24674","balanceOf(address)":"2560","decimals()":"268","decreaseAllowance(address,uint256)":"27150","deposit(address,uint256)":"infinite","exposition()":"2447","getExposition()":"2439","getGMX_controller()":"2368","getNetAssetValue()":"2491","gmxVault()":"2449","increaseAllowance(address,uint256)":"infinite","isAccepted(address)":"2703","liquidateLongPositions()":"infinite","liquidateShortPositions()":"infinite","name()":"infinite","netAssetValue()":"2472","openPosition()":"infinite","owner()":"2466","removeToken(address)":"30280","renounceOwnership()":"infinite","setExposition(uint8)":"30677","setGMX_controller(address)":"26825","symbol()":"infinite","tokenAccepted(address)":"2597","totalSupply()":"2393","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"28531","updateNetAssetValue()":"infinite","withdraw(uint256)":"infinite"},"internal":{"_updateNAV()":"infinite"}},"methodIdentifiers":{"GMX_controller()":"9ecbfa42","USDC()":"89a30271","WETH()":"ad5c4648","acceptToken(address)":"8cd3f064","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","deposit(address,uint256)":"47e7ef24","exposition()":"1cd2f7c8","getExposition()":"de9257cd","getGMX_controller()":"0677a2a5","getNetAssetValue()":"6639a81d","gmxVault()":"b3b3453e","increaseAllowance(address,uint256)":"39509351","isAccepted(address)":"e6f091f9","liquidateLongPositions()":"28250e0d","liquidateShortPositions()":"3027ac22","name()":"06fdde03","netAssetValue()":"a3673b38","openPosition()":"350245c2","owner()":"8da5cb5b","removeToken(address)":"5fa7b584","renounceOwnership()":"715018a6","setExposition(uint8)":"481d6ee9","setGMX_controller(address)":"11af7d95","symbol()":"95d89b41","tokenAccepted(address)":"aedf795e","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","updateNetAssetValue()":"ed61f4a1","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"NewTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token_deposited\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"PLPissued\",\"type\":\"uint256\"}],\"name\":\"depositEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"oldexpo\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newexpo\",\"type\":\"uint8\"}],\"name\":\"expoEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"exposition\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNAV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NAV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcNAV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"longNAV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shortNAV\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalsupply\",\"type\":\"uint256\"}],\"name\":\"navEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nav\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preop_supply\",\"type\":\"uint256\"}],\"name\":\"withdrawEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GMX_controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"acceptToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exposition\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExposition\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGMX_controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNetAssetValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gmxVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"isAccepted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateLongPositions\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateShortPositions\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"netAssetValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openPosition\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_exposition\",\"type\":\"uint8\"}],\"name\":\"setExposition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setGMX_controller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenAccepted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateNetAssetValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Victor Gillibert\",\"custom:experimental\":\"This is an experimental contract.\",\"details\":\"Improvement to do :Add fees to compensate for transaction fees paid when position need to be modifiedAllow other token to be added\",\"kind\":\"dev\",\"methods\":{\"acceptToken(address)\":{\"details\":\"until now, only USDC deposit are handled\",\"params\":{\"tokenAddress\":\"arbitrum address of the ERC20 token\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(address,uint256)\":{\"details\":\"take USDC and send back PLP according to current vault value and price per share;\",\"params\":{\"_amount\":\"amount of USDC decimals 10**6\",\"tokenAddress\":\"USDC address only for the moment, but keeping the possibility to add other token\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setExposition(uint8)\":{\"details\":\"only the owner can call this function\",\"params\":{\"_exposition\":\"0 for neutral | 1 Long | 2 Short\"}},\"setGMX_controller(address)\":{\"details\":\"only the owner can call this function\",\"params\":{\"_addr\":\"address of the controller to add\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"take PLP and send back USDC according to current price per share;\",\"params\":{\"_amount\":\"amount of PLP decimals 10**18\"}}},\"title\":\"Vault contract to receive funds and rebalance on GMX thanks to controller according to exposition strategy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptToken(address)\":{\"notice\":\"whitelist the token accepted in the vault, allow a better control\"},\"deposit(address,uint256)\":{\"notice\":\"Function that handles the deposit of fund in USDC and sent back PLP token \"},\"setExposition(uint8)\":{\"notice\":\"function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\"},\"setGMX_controller(address)\":{\"notice\":\"function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\"},\"withdraw(uint256)\":{\"notice\":\"Function to withdraw funds from the vaultFunction that handles the withdraw of fund\"}},\"notice\":\"It works as a fund manager, send token as shares of the vault according to the value in it, send back USDC when token are given back\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyVault.sol\":\"MyVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/MyVault.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"./../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n\\ninterface IGMXController {\\n    function increasePosition(uint256 tokenAmount, bool isLong) external payable ; \\n    function decreasePosition(address _to, uint256 tokenAmount, bool isLong) external payable ; \\n    function liquidatePosition(bool isLong) external payable ; \\n}\\n\\ninterface IGMXVault {\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, uint256 realisedPnl, bool realisedPnLPositive, uint256 lastIncreasedTime);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getPositionDelta(address _account, address _collateralToken, address _indexToken, bool _isLong) external returns (bool hasprofit, uint256 lastIncreasedTime);\\n}\\n\\n/// @title Vault contract to receive funds and rebalance on GMX thanks to controller according to exposition strategy\\n/// @author Victor Gillibert\\n/// @notice It works as a fund manager, send token as shares of the vault according to the value in it, send back USDC when token are given back\\n/// @dev Improvement to do :\\n/// @dev Add fees to compensate for transaction fees paid when position need to be modified\\n/// @dev Allow other token to be added\\n/// @custom:experimental This is an experimental contract.\\ncontract MyVault is Ownable, ERC20, ReentrancyGuard {\\n    // ::::::::::::: VARIABLE AND EVENT ::::::::::::: //\\n    address public GMX_controller;\\n    address public WETH = 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1;\\n    address public USDC = 0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8;\\n    address public gmxVault = 0x489ee077994B6658eAfA855C308275EAd8097C4A;\\n    uint256 public netAssetValue;\\n    uint8 public exposition; //0 neutral - 1 Long ETH - 2 short ETH\\n\\n    mapping(address => bool) public tokenAccepted;\\n    event NewTokenAdded(address tokenAddress);\\n    event TokenRemoved(address tokenAddress);\\n    event expoEvent(uint256 when, uint8 oldexpo, uint8 newexpo);\\n    event depositEvent(\\n        address indexed account,\\n        uint256 when,\\n        address token_deposited,\\n        uint256 amount,\\n        uint256 PLPissued\\n    );\\n    event withdrawEvent(\\n        address indexed account,\\n        uint256 when,\\n        uint256 amount,\\n        uint256 nav,\\n        uint256 preop_supply\\n    );\\n    event navEvent(\\n        uint256 when,\\n        uint8 exposition,\\n        uint256 oldNAV,\\n        uint256 NAV,\\n        uint256 usdcNAV,\\n        uint256 longNAV,\\n        uint256 shortNAV,\\n        uint256 totalsupply\\n    );\\n\\n    // ::::::::::::: CONSTRUCTOR ::::::::::::: //\\n\\n    constructor() ERC20(\\\"Polyplus\\\", \\\"PLP\\\") {\\n        exposition = 0;\\n        netAssetValue = 1;\\n    }\\n\\n    // ::::::::::::: HANDLING TOKEN LISTS ACCEPTED ::::::::::::: //\\n\\n    //Gestion des tokens accept\\u00e9s [until now stable only with USDC]\\n    /// @notice whitelist the token accepted in the vault, allow a better control\\n    /// @dev until now, only USDC deposit are handled\\n    /// @param tokenAddress arbitrum address of the ERC20 token\\n    function acceptToken(address tokenAddress) external onlyOwner {\\n        require(!tokenAccepted[tokenAddress], \\\"Token already added\\\");\\n        tokenAccepted[tokenAddress] = true;\\n        emit NewTokenAdded(tokenAddress);\\n    }\\n    function removeToken(address tokenAddress) external onlyOwner {\\n        require(tokenAccepted[tokenAddress], \\\"Token not yet added\\\");\\n        tokenAccepted[tokenAddress] = false;\\n        emit TokenRemoved(tokenAddress);\\n    }\\n    function isAccepted(address tokenAddress) external view returns (bool) {\\n        return tokenAccepted[tokenAddress];\\n    }\\n\\n    // ::::::::::::: GMX CONTROLLER AND FEES::::::::::::: //\\n\\n    /// @notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\\n    /// @dev only the owner can call this function\\n    /// @param _addr address of the controller to add\\n    function setGMX_controller(address _addr) external onlyOwner {\\n        GMX_controller = _addr;\\n    }\\n    function getGMX_controller() public view returns (address) {\\n        return GMX_controller;\\n    }\\n\\n    // ::::::::::::: STRATEGY EXPOSITION AND GLOBAL TX ::::::::::::: //\\n\\n    /// @notice function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)\\n    /// @dev only the owner can call this function\\n    /// @param _exposition 0 for neutral | 1 Long | 2 Short\\n    function setExposition(uint8 _exposition) external onlyOwner {\\n        require(\\n            _exposition == 0 || _exposition == 1 || _exposition == 2,\\n            \\\"Value must be 0 for neutral, 1 for Long or 2 for Short\\\"\\n        );\\n        require(\\n            exposition != _exposition,\\n            \\\"Reverted because exposition has not changed\\\"\\n        );\\n        uint8 oldexposition = exposition;\\n        exposition = _exposition;\\n        emit expoEvent(block.timestamp, oldexposition, exposition);\\n    }\\n    function getExposition() external view returns (uint8) {\\n        return exposition;\\n    }\\n    function openPosition() external payable onlyOwner {\\n        bool isLong = (exposition == 1 ? true : false);\\n        IERC20(USDC).approve(\\n            GMX_controller,\\n            IERC20(USDC).balanceOf(address(this))\\n        );\\n        IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n            IERC20(USDC).balanceOf(address(this)),\\n            isLong\\n        );\\n    }\\n    function liquidateLongPositions() external payable onlyOwner {\\n        IGMXController(GMX_controller).liquidatePosition{value: msg.value}(\\n            true\\n        );\\n    }\\n    function liquidateShortPositions() external payable onlyOwner {\\n        IGMXController(GMX_controller).liquidatePosition{value: msg.value}(\\n            false\\n        );\\n    }\\n\\n    // ::::::::::::: NET ASSET VALUE OF THE FUNDS ::::::::::::: //\\n   \\n    function updateNetAssetValue() external onlyOwner {\\n        _updateNAV();\\n    }\\n    //decimals 10**30\\n    function _updateNAV() private {\\n        uint256 oldNAV = netAssetValue;\\n        uint256 _deltavalueLong = 0;\\n        uint256 _deltavalueShort = 0;\\n        uint256 usdcBal = ERC20(USDC).balanceOf(address(this)) * 10**24; ///10**18 met USDC 6 decimals donc 10**12\\n        (, uint256 _collateralLong, , , , , , ) = IGMXVault(gmxVault)\\n            .getPosition(GMX_controller, WETH, WETH, true);\\n        if (_collateralLong > 0) {\\n            (, _deltavalueLong) = IGMXVault(gmxVault).getPositionDelta(\\n                GMX_controller,\\n                WETH,\\n                WETH,\\n                true\\n            );\\n        }\\n        uint256 posLong = (_collateralLong + _deltavalueLong);\\n        (, uint256 _collateralShort, , , , , , ) = IGMXVault(gmxVault)\\n            .getPosition(GMX_controller, USDC, WETH, false);\\n        if (_collateralShort > 0) {\\n            (, _deltavalueShort) = IGMXVault(gmxVault).getPositionDelta(\\n                GMX_controller,\\n                USDC,\\n                WETH,\\n                false\\n            );\\n        }\\n        uint256 posShort = (_collateralShort - _deltavalueShort);\\n        netAssetValue = usdcBal + posLong + posShort;\\n        emit navEvent(\\n            block.timestamp,\\n            exposition,\\n            oldNAV,\\n            netAssetValue,\\n            usdcBal,\\n            posLong,\\n            posShort,\\n            this.totalSupply()\\n        );\\n    }\\n    function getNetAssetValue() external view returns (uint256) {\\n        return netAssetValue;\\n    }\\n\\n    // ::::::::::::: USER INTERFACE ::::::::::::: //\\n\\n    /// @notice Function that handles the deposit of fund in USDC and sent back PLP token \\n    /// @dev take USDC and send back PLP according to current vault value and price per share;\\n    /// @param tokenAddress USDC address only for the moment, but keeping the possibility to add other token\\n    /// @param _amount amount of USDC decimals 10**6\\n    function deposit(address tokenAddress, uint256 _amount) external payable nonReentrant {\\n        require(tokenAccepted[tokenAddress], \\\"Token not yet supported\\\");\\n        require(_amount > 0, \\\"Amount to deposit is mandatory\\\");\\n        uint256 amountToken = _amount - _amount / 100; //1% entry fees paid to GMX [0.1% entry fees + 0.8% swap fees]\\n        uint256 amountPLPToken;\\n        if (this.totalSupply() == 0) {\\n            amountPLPToken = _amount * (10**12); //10**18 / 10**6 decimals PLP / decimals USDC\\n        } else {\\n            _updateNAV();\\n            if (exposition == 0) {\\n                amountPLPToken = (((10**24) * _amount * this.totalSupply()) /\\n                    netAssetValue);\\n            } else {\\n                amountPLPToken = (((10**24) *\\n                    amountToken *\\n                    this.totalSupply()) / netAssetValue); //10**30 decimals net asset value / 10**6 USDC\\n            }\\n        }\\n        _mint(msg.sender, amountPLPToken);\\n        IERC20(tokenAddress).transferFrom(msg.sender, address(this), _amount);\\n        IERC20(tokenAddress).approve(GMX_controller, _amount);\\n        if (exposition == 1) {\\n            IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n                _amount,\\n                true\\n            );\\n        } else if (exposition == 2) {\\n            IGMXController(GMX_controller).increasePosition{value: msg.value}(\\n                _amount,\\n                false\\n            );\\n        }\\n        emit depositEvent(\\n            msg.sender,\\n            block.timestamp,\\n            tokenAddress,\\n            _amount,\\n            amountPLPToken\\n        );\\n    }\\n\\n    /// @notice Function to withdraw funds from the vault\\n    /// @notice Function that handles the withdraw of fund\\n    /// @dev take PLP and send back USDC according to current price per share;\\n    /// @param _amount amount of PLP decimals 10**18\\n    function withdraw(uint256 _amount) external payable nonReentrant {\\n        require(_amount > 0);\\n        require(\\n            this.balanceOf(msg.sender) >= _amount,\\n            \\\"Surprisingly you cannot withdraw token you have not bought\\\"\\n        );\\n        bool isLong = (exposition == 1 ? true : false);\\n        _updateNAV();\\n        uint256 preop_supply = this.totalSupply();\\n        _burn(msg.sender, _amount);\\n        \\n        if (exposition == 0) {\\n            IERC20(USDC).transfer(msg.sender,(10**6*_amount *netAssetValue)/(preop_supply*10**30));\\n        } else {\\n            IGMXController(GMX_controller).decreasePosition{value: msg.value}(\\n                msg.sender,\\n                (99*10**4*_amount *netAssetValue)/(preop_supply*10**30), // [decimals USDC] * (#PLP / [decimals PLP]) * (NAV / [decimals NAV]) * ([decimals TS] / TS)) | 99% pour prendre en compte l'effet dillutif des frais GMX \\u00e0 la sortie\\n                isLong\\n            );\\n        } \\n        emit withdrawEvent(msg.sender, block.timestamp, _amount, netAssetValue, preop_supply);\\n    }\\n}\\n\",\"keccak256\":\"0xaf588eb0f8d9b53a0fd1662b26229133f4ec962a004d67bed263a2fcb41926dc\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2447,"contract":"contracts/MyVault.sol:MyVault","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2700,"contract":"contracts/MyVault.sol:MyVault","label":"_balances","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":2706,"contract":"contracts/MyVault.sol:MyVault","label":"_allowances","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2708,"contract":"contracts/MyVault.sol:MyVault","label":"_totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":2710,"contract":"contracts/MyVault.sol:MyVault","label":"_name","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2712,"contract":"contracts/MyVault.sol:MyVault","label":"_symbol","offset":0,"slot":"5","type":"t_string_storage"},{"astId":2641,"contract":"contracts/MyVault.sol:MyVault","label":"_status","offset":0,"slot":"6","type":"t_uint256"},{"astId":1696,"contract":"contracts/MyVault.sol:MyVault","label":"GMX_controller","offset":0,"slot":"7","type":"t_address"},{"astId":1699,"contract":"contracts/MyVault.sol:MyVault","label":"WETH","offset":0,"slot":"8","type":"t_address"},{"astId":1702,"contract":"contracts/MyVault.sol:MyVault","label":"USDC","offset":0,"slot":"9","type":"t_address"},{"astId":1705,"contract":"contracts/MyVault.sol:MyVault","label":"gmxVault","offset":0,"slot":"10","type":"t_address"},{"astId":1707,"contract":"contracts/MyVault.sol:MyVault","label":"netAssetValue","offset":0,"slot":"11","type":"t_uint256"},{"astId":1709,"contract":"contracts/MyVault.sol:MyVault","label":"exposition","offset":0,"slot":"12","type":"t_uint8"},{"astId":1713,"contract":"contracts/MyVault.sol:MyVault","label":"tokenAccepted","offset":0,"slot":"13","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"acceptToken(address)":{"notice":"whitelist the token accepted in the vault, allow a better control"},"deposit(address,uint256)":{"notice":"Function that handles the deposit of fund in USDC and sent back PLP token "},"setExposition(uint8)":{"notice":"function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)"},"setGMX_controller(address)":{"notice":"function that sets the exposition of the contract (Long Short or Neutral and rebalance assets accordingly)"},"withdraw(uint256)":{"notice":"Function to withdraw funds from the vaultFunction that handles the withdraw of fund"}},"notice":"It works as a fund manager, send token as shares of the vault according to the value in it, send back USDC when token are given back","version":1}}},"node_modules/@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2447,"contract":"node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2641,"contract":"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2729":{"entryPoint":null,"id":2729,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:14"},"nodeType":"YulFunctionCall","src":"66:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:14"},"nodeType":"YulFunctionCall","src":"56:31:14"},"nodeType":"YulExpressionStatement","src":"56:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:14"},"nodeType":"YulFunctionCall","src":"96:15:14"},"nodeType":"YulExpressionStatement","src":"96:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:14"},"nodeType":"YulFunctionCall","src":"120:15:14"},"nodeType":"YulExpressionStatement","src":"120:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:14"},{"body":{"nodeType":"YulBlock","src":"210:776:14","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:14"},"nodeType":"YulFunctionCall","src":"261:12:14"},"nodeType":"YulExpressionStatement","src":"261:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:14"},"nodeType":"YulFunctionCall","src":"234:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:14"},"nodeType":"YulFunctionCall","src":"230:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:14"},"nodeType":"YulFunctionCall","src":"223:35:14"},"nodeType":"YulIf","src":"220:55:14"},{"nodeType":"YulVariableDeclaration","src":"284:23:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:14"},"nodeType":"YulFunctionCall","src":"294:13:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:14","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:14"},"nodeType":"YulFunctionCall","src":"330:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:14"},"nodeType":"YulFunctionCall","src":"326:18:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:14"},"nodeType":"YulFunctionCall","src":"369:18:14"},"nodeType":"YulExpressionStatement","src":"369:18:14"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:14"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:14"},"nodeType":"YulFunctionCall","src":"356:10:14"},"nodeType":"YulIf","src":"353:36:14"},{"nodeType":"YulVariableDeclaration","src":"398:17:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:14"},"nodeType":"YulFunctionCall","src":"408:7:14"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:14"},"nodeType":"YulFunctionCall","src":"438:9:14"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:14"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:14"},"nodeType":"YulFunctionCall","src":"498:13:14"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:14"},"nodeType":"YulFunctionCall","src":"494:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:14","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:14"},"nodeType":"YulFunctionCall","src":"490:31:14"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:14"},"nodeType":"YulFunctionCall","src":"486:40:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:14"},"nodeType":"YulFunctionCall","src":"474:53:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:14"},"nodeType":"YulFunctionCall","src":"588:18:14"},"nodeType":"YulExpressionStatement","src":"588:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:14"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:14"},"nodeType":"YulFunctionCall","src":"542:18:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:14"},"nodeType":"YulFunctionCall","src":"562:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:14"},"nodeType":"YulFunctionCall","src":"539:46:14"},"nodeType":"YulIf","src":"536:72:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:14"},"nodeType":"YulFunctionCall","src":"617:22:14"},"nodeType":"YulExpressionStatement","src":"617:22:14"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:14"},"nodeType":"YulFunctionCall","src":"648:18:14"},"nodeType":"YulExpressionStatement","src":"648:18:14"},{"nodeType":"YulVariableDeclaration","src":"675:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:14","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:14"},"nodeType":"YulFunctionCall","src":"737:12:14"},"nodeType":"YulExpressionStatement","src":"737:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:14"},"nodeType":"YulFunctionCall","src":"708:15:14"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:14"},"nodeType":"YulFunctionCall","src":"704:24:14"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:14"},"nodeType":"YulFunctionCall","src":"701:33:14"},"nodeType":"YulIf","src":"698:53:14"},{"nodeType":"YulVariableDeclaration","src":"760:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:14"},"nodeType":"YulFunctionCall","src":"850:14:14"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:14"},"nodeType":"YulFunctionCall","src":"846:23:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:14"},"nodeType":"YulFunctionCall","src":"881:14:14"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:14"},"nodeType":"YulFunctionCall","src":"877:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:14"},"nodeType":"YulFunctionCall","src":"871:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:14"},"nodeType":"YulFunctionCall","src":"839:63:14"},"nodeType":"YulExpressionStatement","src":"839:63:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:14"},"nodeType":"YulFunctionCall","src":"787:9:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:14","statements":[{"nodeType":"YulAssignment","src":"799:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:14"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:14"},"nodeType":"YulFunctionCall","src":"804:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:14","statements":[]},"src":"779:133:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:14"},"nodeType":"YulFunctionCall","src":"932:15:14"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:14"},"nodeType":"YulFunctionCall","src":"928:24:14"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:14"},"nodeType":"YulFunctionCall","src":"921:35:14"},"nodeType":"YulExpressionStatement","src":"921:35:14"},{"nodeType":"YulAssignment","src":"965:15:14","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:14"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:14","type":""}],"src":"146:840:14"},{"body":{"nodeType":"YulBlock","src":"1109:444:14","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:14"},"nodeType":"YulFunctionCall","src":"1157:12:14"},"nodeType":"YulExpressionStatement","src":"1157:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:14"},"nodeType":"YulFunctionCall","src":"1126:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:14"},"nodeType":"YulFunctionCall","src":"1122:32:14"},"nodeType":"YulIf","src":"1119:52:14"},{"nodeType":"YulVariableDeclaration","src":"1180:30:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:14"},"nodeType":"YulFunctionCall","src":"1194:16:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:14","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:14","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:14"},"nodeType":"YulFunctionCall","src":"1233:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:14"},"nodeType":"YulFunctionCall","src":"1229:18:14"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:14"},"nodeType":"YulFunctionCall","src":"1276:12:14"},"nodeType":"YulExpressionStatement","src":"1276:12:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:14"},"nodeType":"YulFunctionCall","src":"1259:14:14"},"nodeType":"YulIf","src":"1256:34:14"},{"nodeType":"YulAssignment","src":"1299:71:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:14"},"nodeType":"YulFunctionCall","src":"1338:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:14"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:14"},"nodeType":"YulFunctionCall","src":"1309:61:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:14"},"nodeType":"YulFunctionCall","src":"1401:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:14"},"nodeType":"YulFunctionCall","src":"1395:25:14"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:14"},"nodeType":"YulFunctionCall","src":"1451:12:14"},"nodeType":"YulExpressionStatement","src":"1451:12:14"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:14"},"nodeType":"YulFunctionCall","src":"1432:16:14"},"nodeType":"YulIf","src":"1429:36:14"},{"nodeType":"YulAssignment","src":"1474:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:14"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:14"},"nodeType":"YulFunctionCall","src":"1513:24:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:14"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:14"},"nodeType":"YulFunctionCall","src":"1484:63:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:14"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:14","type":""}],"src":"991:562:14"},{"body":{"nodeType":"YulBlock","src":"1613:325:14","statements":[{"nodeType":"YulAssignment","src":"1623:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:14"},"nodeType":"YulFunctionCall","src":"1633:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:14"},"nodeType":"YulFunctionCall","src":"1680:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:14","statements":[{"nodeType":"YulAssignment","src":"1733:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:14"},"nodeType":"YulFunctionCall","src":"1743:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:14"},"nodeType":"YulFunctionCall","src":"1704:26:14"},"nodeType":"YulIf","src":"1701:61:14"},{"body":{"nodeType":"YulBlock","src":"1821:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:14"},"nodeType":"YulFunctionCall","src":"1845:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:14"},"nodeType":"YulFunctionCall","src":"1835:31:14"},"nodeType":"YulExpressionStatement","src":"1835:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:14"},"nodeType":"YulFunctionCall","src":"1879:15:14"},"nodeType":"YulExpressionStatement","src":"1879:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:14"},"nodeType":"YulFunctionCall","src":"1907:15:14"},"nodeType":"YulExpressionStatement","src":"1907:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:14"},"nodeType":"YulFunctionCall","src":"1797:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:14"},"nodeType":"YulFunctionCall","src":"1774:38:14"},"nodeType":"YulIf","src":"1771:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:14","type":""}],"src":"1558:380:14"},{"body":{"nodeType":"YulBlock","src":"1999:65:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:14","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:14"},"nodeType":"YulFunctionCall","src":"2009:14:14"},"nodeType":"YulExpressionStatement","src":"2009:14:14"},{"nodeType":"YulAssignment","src":"2032:26:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:14"},"nodeType":"YulFunctionCall","src":"2040:18:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:14"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:14","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:14","type":""}],"src":"1943:121:14"},{"body":{"nodeType":"YulBlock","src":"2150:464:14","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:14","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:14","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:14"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:14"},"nodeType":"YulFunctionCall","src":"2221:17:14"},"nodeType":"YulExpressionStatement","src":"2221:17:14"},{"nodeType":"YulVariableDeclaration","src":"2251:31:14","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:14"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:14"},"nodeType":"YulFunctionCall","src":"2263:19:14"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:14","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:14"},"nodeType":"YulFunctionCall","src":"2331:19:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:14"},"nodeType":"YulFunctionCall","src":"2324:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:14"},"nodeType":"YulFunctionCall","src":"2314:38:14"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:14","statements":[{"nodeType":"YulAssignment","src":"2391:19:14","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:14"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:14","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:14"},"nodeType":"YulFunctionCall","src":"2368:20:14"},"nodeType":"YulIf","src":"2365:47:14"},{"nodeType":"YulVariableDeclaration","src":"2425:41:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:14","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:14"},"nodeType":"YulFunctionCall","src":"2452:12:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:14"},"nodeType":"YulFunctionCall","src":"2445:20:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:14"},"nodeType":"YulFunctionCall","src":"2435:31:14"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:14","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:14"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:14","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:14"},"nodeType":"YulFunctionCall","src":"2579:17:14"},"nodeType":"YulExpressionStatement","src":"2579:17:14"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:14"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:14"},"nodeType":"YulFunctionCall","src":"2524:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:14","statements":[{"nodeType":"YulAssignment","src":"2540:22:14","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:14"},"nodeType":"YulFunctionCall","src":"2549:13:14"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:14"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:14","statements":[]},"src":"2516:82:14"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:14"},"nodeType":"YulFunctionCall","src":"2163:11:14"},"nodeType":"YulIf","src":"2160:448:14"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:14","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:14","type":""}],"src":"2069:545:14"},{"body":{"nodeType":"YulBlock","src":"2704:81:14","statements":[{"nodeType":"YulAssignment","src":"2714:65:14","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:14"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:14","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:14"},"nodeType":"YulFunctionCall","src":"2743:11:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:14"},"nodeType":"YulFunctionCall","src":"2756:6:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:14"},"nodeType":"YulFunctionCall","src":"2739:24:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:14"},"nodeType":"YulFunctionCall","src":"2735:29:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:14"},"nodeType":"YulFunctionCall","src":"2725:40:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:14","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:14"},"nodeType":"YulFunctionCall","src":"2767:11:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:14"},"nodeType":"YulFunctionCall","src":"2722:57:14"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:14","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:14","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:14","type":""}],"src":"2619:166:14"},{"body":{"nodeType":"YulBlock","src":"2886:1256:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:14"},"nodeType":"YulFunctionCall","src":"2910:10:14"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:14"},"nodeType":"YulFunctionCall","src":"2965:18:14"},"nodeType":"YulExpressionStatement","src":"2965:18:14"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:14","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:14"},"nodeType":"YulFunctionCall","src":"2947:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:14"},"nodeType":"YulFunctionCall","src":"2943:18:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:14"},"nodeType":"YulFunctionCall","src":"2932:30:14"},"nodeType":"YulIf","src":"2929:56:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:14"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:14"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:14"},"nodeType":"YulFunctionCall","src":"3070:11:14"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:14"},"nodeType":"YulFunctionCall","src":"3044:38:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:14"},"nodeType":"YulFunctionCall","src":"2994:97:14"},"nodeType":"YulExpressionStatement","src":"2994:97:14"},{"nodeType":"YulVariableDeclaration","src":"3100:18:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:14","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:14","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:14","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:14"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:14","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:14"},"nodeType":"YulFunctionCall","src":"3270:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:14"},"nodeType":"YulFunctionCall","src":"3258:20:14"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:14","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:14"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:14"},"nodeType":"YulFunctionCall","src":"3305:35:14"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:14"},"nodeType":"YulFunctionCall","src":"3479:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:14"},"nodeType":"YulFunctionCall","src":"3473:26:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:14"},"nodeType":"YulFunctionCall","src":"3458:42:14"},"nodeType":"YulExpressionStatement","src":"3458:42:14"},{"nodeType":"YulAssignment","src":"3517:24:14","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:14"},"nodeType":"YulFunctionCall","src":"3527:14:14"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:14"}]},{"nodeType":"YulAssignment","src":"3558:40:14","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:14"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:14"},"nodeType":"YulFunctionCall","src":"3571:27:14"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:14"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:14"},"nodeType":"YulFunctionCall","src":"3384:14:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:14","statements":[{"nodeType":"YulAssignment","src":"3401:24:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:14"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:14"},"nodeType":"YulFunctionCall","src":"3406:19:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:14","statements":[]},"src":"3376:236:14"},{"body":{"nodeType":"YulBlock","src":"3660:166:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:14"},"nodeType":"YulFunctionCall","src":"3701:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:14"},"nodeType":"YulFunctionCall","src":"3695:26:14"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:14"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:14"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:14","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:14"},"nodeType":"YulFunctionCall","src":"3780:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:14","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:14"},"nodeType":"YulFunctionCall","src":"3776:24:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:14"},"nodeType":"YulFunctionCall","src":"3802:6:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:14"},"nodeType":"YulFunctionCall","src":"3772:37:14"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:14"},"nodeType":"YulFunctionCall","src":"3768:42:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:14"},"nodeType":"YulFunctionCall","src":"3753:58:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:14"},"nodeType":"YulFunctionCall","src":"3738:74:14"},"nodeType":"YulExpressionStatement","src":"3738:74:14"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:14"},"nodeType":"YulFunctionCall","src":"3628:19:14"},"nodeType":"YulIf","src":"3625:201:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:14","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:14"},"nodeType":"YulFunctionCall","src":"3856:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:14"},"nodeType":"YulFunctionCall","src":"3852:22:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:14"},"nodeType":"YulFunctionCall","src":"3839:36:14"},"nodeType":"YulExpressionStatement","src":"3839:36:14"}]},"nodeType":"YulCase","src":"3222:663:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:14","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:14","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:14","statements":[{"nodeType":"YulAssignment","src":"3983:35:14","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:14"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:14"},"nodeType":"YulFunctionCall","src":"3998:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:14"},"nodeType":"YulFunctionCall","src":"3992:26:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:14"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:14"},"nodeType":"YulIf","src":"3943:89:14"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:14"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:14"},"nodeType":"YulFunctionCall","src":"4058:67:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:14"},"nodeType":"YulFunctionCall","src":"4045:81:14"},"nodeType":"YulExpressionStatement","src":"4045:81:14"}]},"nodeType":"YulCase","src":"3894:242:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:14"},"nodeType":"YulFunctionCall","src":"3199:14:14"},"nodeType":"YulSwitch","src":"3192:944:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:14","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:14","type":""}],"src":"2790:1352:14"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220d435fcaca0b0a3cad416913f5cc4b8d6f7c196b3d091d35df47d7d683b0d732564736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 CALLDATALOAD 0xFC 0xAC LOG0 0xB0 LOG3 0xCA 0xD4 AND SWAP2 EXTCODEHASH 0x5C 0xC4 0xB8 0xD6 0xF7 0xC1 SWAP7 0xB3 0xD0 SWAP2 0xD3 0x5D DELEGATECALL PUSH30 0x7D683B0D732564736F6C6343000811003300000000000000000000000000 ","sourceMap":"1401:11610:10:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:5;:13;2050:5;2042;:13;:::i;:::-;-1:-1:-1;2065:7:10;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;1401:11610;;14:127:14;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:14;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:14;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:14:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:14;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:14;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:14;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:14;;;3992:26;3943:89;-1:-1:-1;;2747:1:14;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:14;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:14;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:14;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:14:o;:::-;1401:11610:10;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_3270":{"entryPoint":null,"id":3270,"parameterSlots":3,"returnSlots":0},"@_approve_3205":{"entryPoint":858,"id":3205,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_3259":{"entryPoint":null,"id":3259,"parameterSlots":3,"returnSlots":0},"@_msgSender_3283":{"entryPoint":null,"id":3283,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_3248":{"entryPoint":1150,"id":3248,"parameterSlots":3,"returnSlots":0},"@_transfer_3031":{"entryPoint":1272,"id":3031,"parameterSlots":3,"returnSlots":0},"@allowance_2826":{"entryPoint":815,"id":2826,"parameterSlots":2,"returnSlots":1},"@approve_2851":{"entryPoint":562,"id":2851,"parameterSlots":2,"returnSlots":1},"@balanceOf_2783":{"entryPoint":null,"id":2783,"parameterSlots":1,"returnSlots":1},"@decimals_2759":{"entryPoint":null,"id":2759,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_2954":{"entryPoint":673,"id":2954,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_2913":{"entryPoint":624,"id":2913,"parameterSlots":2,"returnSlots":1},"@name_2739":{"entryPoint":416,"id":2739,"parameterSlots":0,"returnSlots":1},"@symbol_2749":{"entryPoint":658,"id":2749,"parameterSlots":0,"returnSlots":1},"@totalSupply_2769":{"entryPoint":null,"id":2769,"parameterSlots":0,"returnSlots":1},"@transferFrom_2884":{"entryPoint":588,"id":2884,"parameterSlots":3,"returnSlots":1},"@transfer_2808":{"entryPoint":801,"id":2808,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1770,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1934,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1840,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1798,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2043,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1985,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5754:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:14","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:14"},"nodeType":"YulFunctionCall","src":"166:21:14"},"nodeType":"YulExpressionStatement","src":"166:21:14"},{"nodeType":"YulVariableDeclaration","src":"196:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:14"},"nodeType":"YulFunctionCall","src":"210:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:14"},"nodeType":"YulFunctionCall","src":"239:18:14"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:14"},"nodeType":"YulFunctionCall","src":"232:34:14"},"nodeType":"YulExpressionStatement","src":"232:34:14"},{"nodeType":"YulVariableDeclaration","src":"275:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:14"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:14"},"nodeType":"YulFunctionCall","src":"369:17:14"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:14"},"nodeType":"YulFunctionCall","src":"365:26:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:14"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:14"},"nodeType":"YulFunctionCall","src":"403:14:14"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:14"},"nodeType":"YulFunctionCall","src":"399:23:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:14"},"nodeType":"YulFunctionCall","src":"393:30:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:14"},"nodeType":"YulFunctionCall","src":"358:66:14"},"nodeType":"YulExpressionStatement","src":"358:66:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:14"},"nodeType":"YulFunctionCall","src":"302:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:14","statements":[{"nodeType":"YulAssignment","src":"318:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:14"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:14"},"nodeType":"YulFunctionCall","src":"323:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:14","statements":[]},"src":"294:140:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:14"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:14"},"nodeType":"YulFunctionCall","src":"454:22:14"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:14"},"nodeType":"YulFunctionCall","src":"450:31:14"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:14"},"nodeType":"YulFunctionCall","src":"443:42:14"},"nodeType":"YulExpressionStatement","src":"443:42:14"},{"nodeType":"YulAssignment","src":"494:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:14"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:14"},"nodeType":"YulFunctionCall","src":"525:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:14"},"nodeType":"YulFunctionCall","src":"542:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:14"},"nodeType":"YulFunctionCall","src":"521:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:14"},"nodeType":"YulFunctionCall","src":"506:45:14"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:14"},"nodeType":"YulFunctionCall","src":"502:54:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:14","type":""}],"src":"14:548:14"},{"body":{"nodeType":"YulBlock","src":"616:124:14","statements":[{"nodeType":"YulAssignment","src":"626:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:14"},"nodeType":"YulFunctionCall","src":"635:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:14"}]},{"body":{"nodeType":"YulBlock","src":"718:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:14"},"nodeType":"YulFunctionCall","src":"720:12:14"},"nodeType":"YulExpressionStatement","src":"720:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:14"},"nodeType":"YulFunctionCall","src":"699:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:14"},"nodeType":"YulFunctionCall","src":"695:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:14"},"nodeType":"YulFunctionCall","src":"684:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:14"},"nodeType":"YulFunctionCall","src":"674:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:14"},"nodeType":"YulFunctionCall","src":"667:50:14"},"nodeType":"YulIf","src":"664:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:14","type":""}],"src":"567:173:14"},{"body":{"nodeType":"YulBlock","src":"832:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:14"},"nodeType":"YulFunctionCall","src":"880:12:14"},"nodeType":"YulExpressionStatement","src":"880:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:14"},"nodeType":"YulFunctionCall","src":"849:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:14"},"nodeType":"YulFunctionCall","src":"845:32:14"},"nodeType":"YulIf","src":"842:52:14"},{"nodeType":"YulAssignment","src":"903:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:14"},"nodeType":"YulFunctionCall","src":"913:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:14"}]},{"nodeType":"YulAssignment","src":"951:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:14"},"nodeType":"YulFunctionCall","src":"974:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:14"},"nodeType":"YulFunctionCall","src":"961:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:14","type":""}],"src":"745:254:14"},{"body":{"nodeType":"YulBlock","src":"1099:92:14","statements":[{"nodeType":"YulAssignment","src":"1109:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:14"},"nodeType":"YulFunctionCall","src":"1117:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:14"},"nodeType":"YulFunctionCall","src":"1169:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:14"},"nodeType":"YulFunctionCall","src":"1162:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:14"},"nodeType":"YulFunctionCall","src":"1144:41:14"},"nodeType":"YulExpressionStatement","src":"1144:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:14","type":""}],"src":"1004:187:14"},{"body":{"nodeType":"YulBlock","src":"1297:76:14","statements":[{"nodeType":"YulAssignment","src":"1307:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:14"},"nodeType":"YulFunctionCall","src":"1315:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:14"},"nodeType":"YulFunctionCall","src":"1342:25:14"},"nodeType":"YulExpressionStatement","src":"1342:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:14","type":""}],"src":"1196:177:14"},{"body":{"nodeType":"YulBlock","src":"1482:224:14","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:14"},"nodeType":"YulFunctionCall","src":"1530:12:14"},"nodeType":"YulExpressionStatement","src":"1530:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:14"},"nodeType":"YulFunctionCall","src":"1499:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:14"},"nodeType":"YulFunctionCall","src":"1495:32:14"},"nodeType":"YulIf","src":"1492:52:14"},{"nodeType":"YulAssignment","src":"1553:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:14"},"nodeType":"YulFunctionCall","src":"1563:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:14"}]},{"nodeType":"YulAssignment","src":"1601:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:14"},"nodeType":"YulFunctionCall","src":"1630:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:14"},"nodeType":"YulFunctionCall","src":"1611:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:14"}]},{"nodeType":"YulAssignment","src":"1658:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:14"},"nodeType":"YulFunctionCall","src":"1681:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:14"},"nodeType":"YulFunctionCall","src":"1668:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:14","type":""}],"src":"1378:328:14"},{"body":{"nodeType":"YulBlock","src":"1808:87:14","statements":[{"nodeType":"YulAssignment","src":"1818:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:14"},"nodeType":"YulFunctionCall","src":"1826:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:14"},"nodeType":"YulFunctionCall","src":"1871:17:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:14"},"nodeType":"YulFunctionCall","src":"1853:36:14"},"nodeType":"YulExpressionStatement","src":"1853:36:14"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:14","type":""}],"src":"1711:184:14"},{"body":{"nodeType":"YulBlock","src":"1970:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:14"},"nodeType":"YulFunctionCall","src":"2018:12:14"},"nodeType":"YulExpressionStatement","src":"2018:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:14"},"nodeType":"YulFunctionCall","src":"1987:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:14"},"nodeType":"YulFunctionCall","src":"1983:32:14"},"nodeType":"YulIf","src":"1980:52:14"},{"nodeType":"YulAssignment","src":"2041:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:14"},"nodeType":"YulFunctionCall","src":"2051:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:14","type":""}],"src":"1900:186:14"},{"body":{"nodeType":"YulBlock","src":"2178:173:14","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:14"},"nodeType":"YulFunctionCall","src":"2226:12:14"},"nodeType":"YulExpressionStatement","src":"2226:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:14"},"nodeType":"YulFunctionCall","src":"2195:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:14"},"nodeType":"YulFunctionCall","src":"2191:32:14"},"nodeType":"YulIf","src":"2188:52:14"},{"nodeType":"YulAssignment","src":"2249:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:14"},"nodeType":"YulFunctionCall","src":"2259:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:14"}]},{"nodeType":"YulAssignment","src":"2297:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:14"},"nodeType":"YulFunctionCall","src":"2326:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:14"},"nodeType":"YulFunctionCall","src":"2307:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:14","type":""}],"src":"2091:260:14"},{"body":{"nodeType":"YulBlock","src":"2411:325:14","statements":[{"nodeType":"YulAssignment","src":"2421:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:14","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:14"},"nodeType":"YulFunctionCall","src":"2431:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:14"},"nodeType":"YulFunctionCall","src":"2478:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:14","statements":[{"nodeType":"YulAssignment","src":"2531:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:14"},"nodeType":"YulFunctionCall","src":"2541:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:14"},"nodeType":"YulFunctionCall","src":"2502:26:14"},"nodeType":"YulIf","src":"2499:61:14"},{"body":{"nodeType":"YulBlock","src":"2619:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:14"},"nodeType":"YulFunctionCall","src":"2643:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:14"},"nodeType":"YulFunctionCall","src":"2633:31:14"},"nodeType":"YulExpressionStatement","src":"2633:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:14"},"nodeType":"YulFunctionCall","src":"2677:15:14"},"nodeType":"YulExpressionStatement","src":"2677:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:14"},"nodeType":"YulFunctionCall","src":"2705:15:14"},"nodeType":"YulExpressionStatement","src":"2705:15:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:14"},"nodeType":"YulFunctionCall","src":"2595:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:14"},"nodeType":"YulFunctionCall","src":"2572:38:14"},"nodeType":"YulIf","src":"2569:161:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:14","type":""}],"src":"2356:380:14"},{"body":{"nodeType":"YulBlock","src":"2789:174:14","statements":[{"nodeType":"YulAssignment","src":"2799:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:14"},"nodeType":"YulFunctionCall","src":"2806:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:14"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:14"},"nodeType":"YulFunctionCall","src":"2870:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:14"},"nodeType":"YulFunctionCall","src":"2860:31:14"},"nodeType":"YulExpressionStatement","src":"2860:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:14"},"nodeType":"YulFunctionCall","src":"2904:15:14"},"nodeType":"YulExpressionStatement","src":"2904:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:14"},"nodeType":"YulFunctionCall","src":"2932:15:14"},"nodeType":"YulExpressionStatement","src":"2932:15:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:14"},"nodeType":"YulFunctionCall","src":"2827:10:14"},"nodeType":"YulIf","src":"2824:133:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:14","type":""}],"src":"2741:222:14"},{"body":{"nodeType":"YulBlock","src":"3142:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:14"},"nodeType":"YulFunctionCall","src":"3152:21:14"},"nodeType":"YulExpressionStatement","src":"3152:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:14"},"nodeType":"YulFunctionCall","src":"3189:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:14"},"nodeType":"YulFunctionCall","src":"3182:30:14"},"nodeType":"YulExpressionStatement","src":"3182:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:14"},"nodeType":"YulFunctionCall","src":"3228:18:14"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:14","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:14"},"nodeType":"YulFunctionCall","src":"3221:62:14"},"nodeType":"YulExpressionStatement","src":"3221:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:14"},"nodeType":"YulFunctionCall","src":"3299:18:14"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:14","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:14"},"nodeType":"YulFunctionCall","src":"3292:35:14"},"nodeType":"YulExpressionStatement","src":"3292:35:14"},{"nodeType":"YulAssignment","src":"3336:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:14"},"nodeType":"YulFunctionCall","src":"3344:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:14","type":""}],"src":"2968:401:14"},{"body":{"nodeType":"YulBlock","src":"3548:226:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:14"},"nodeType":"YulFunctionCall","src":"3558:21:14"},"nodeType":"YulExpressionStatement","src":"3558:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:14"},"nodeType":"YulFunctionCall","src":"3595:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:14","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:14"},"nodeType":"YulFunctionCall","src":"3588:30:14"},"nodeType":"YulExpressionStatement","src":"3588:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:14"},"nodeType":"YulFunctionCall","src":"3634:18:14"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:14","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:14"},"nodeType":"YulFunctionCall","src":"3627:62:14"},"nodeType":"YulExpressionStatement","src":"3627:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:14"},"nodeType":"YulFunctionCall","src":"3705:18:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:14"},"nodeType":"YulFunctionCall","src":"3698:34:14"},"nodeType":"YulExpressionStatement","src":"3698:34:14"},{"nodeType":"YulAssignment","src":"3741:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:14"},"nodeType":"YulFunctionCall","src":"3749:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:14","type":""}],"src":"3374:400:14"},{"body":{"nodeType":"YulBlock","src":"3953:224:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:14"},"nodeType":"YulFunctionCall","src":"3963:21:14"},"nodeType":"YulExpressionStatement","src":"3963:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:14"},"nodeType":"YulFunctionCall","src":"4000:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:14","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:14"},"nodeType":"YulFunctionCall","src":"3993:30:14"},"nodeType":"YulExpressionStatement","src":"3993:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:14"},"nodeType":"YulFunctionCall","src":"4039:18:14"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:14","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:14"},"nodeType":"YulFunctionCall","src":"4032:62:14"},"nodeType":"YulExpressionStatement","src":"4032:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:14"},"nodeType":"YulFunctionCall","src":"4110:18:14"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:14","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:14"},"nodeType":"YulFunctionCall","src":"4103:32:14"},"nodeType":"YulExpressionStatement","src":"4103:32:14"},{"nodeType":"YulAssignment","src":"4144:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:14"},"nodeType":"YulFunctionCall","src":"4152:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:14","type":""}],"src":"3779:398:14"},{"body":{"nodeType":"YulBlock","src":"4356:179:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:14"},"nodeType":"YulFunctionCall","src":"4366:21:14"},"nodeType":"YulExpressionStatement","src":"4366:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:14"},"nodeType":"YulFunctionCall","src":"4403:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:14","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:14"},"nodeType":"YulFunctionCall","src":"4396:30:14"},"nodeType":"YulExpressionStatement","src":"4396:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:14"},"nodeType":"YulFunctionCall","src":"4442:18:14"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:14","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:14"},"nodeType":"YulFunctionCall","src":"4435:59:14"},"nodeType":"YulExpressionStatement","src":"4435:59:14"},{"nodeType":"YulAssignment","src":"4503:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:14"},"nodeType":"YulFunctionCall","src":"4511:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:14","type":""}],"src":"4182:353:14"},{"body":{"nodeType":"YulBlock","src":"4714:227:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:14"},"nodeType":"YulFunctionCall","src":"4724:21:14"},"nodeType":"YulExpressionStatement","src":"4724:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:14"},"nodeType":"YulFunctionCall","src":"4761:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:14","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:14"},"nodeType":"YulFunctionCall","src":"4754:30:14"},"nodeType":"YulExpressionStatement","src":"4754:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:14"},"nodeType":"YulFunctionCall","src":"4800:18:14"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:14","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:14"},"nodeType":"YulFunctionCall","src":"4793:62:14"},"nodeType":"YulExpressionStatement","src":"4793:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:14"},"nodeType":"YulFunctionCall","src":"4871:18:14"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:14","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:14"},"nodeType":"YulFunctionCall","src":"4864:35:14"},"nodeType":"YulExpressionStatement","src":"4864:35:14"},{"nodeType":"YulAssignment","src":"4908:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:14"},"nodeType":"YulFunctionCall","src":"4916:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:14","type":""}],"src":"4540:401:14"},{"body":{"nodeType":"YulBlock","src":"5120:225:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:14"},"nodeType":"YulFunctionCall","src":"5130:21:14"},"nodeType":"YulExpressionStatement","src":"5130:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:14"},"nodeType":"YulFunctionCall","src":"5167:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:14","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:14"},"nodeType":"YulFunctionCall","src":"5160:30:14"},"nodeType":"YulExpressionStatement","src":"5160:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:14"},"nodeType":"YulFunctionCall","src":"5206:18:14"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:14","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:14"},"nodeType":"YulFunctionCall","src":"5199:62:14"},"nodeType":"YulExpressionStatement","src":"5199:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:14"},"nodeType":"YulFunctionCall","src":"5277:18:14"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:14","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:14"},"nodeType":"YulFunctionCall","src":"5270:33:14"},"nodeType":"YulExpressionStatement","src":"5270:33:14"},{"nodeType":"YulAssignment","src":"5312:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:14"},"nodeType":"YulFunctionCall","src":"5320:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:14","type":""}],"src":"4946:399:14"},{"body":{"nodeType":"YulBlock","src":"5524:228:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:14"},"nodeType":"YulFunctionCall","src":"5534:21:14"},"nodeType":"YulExpressionStatement","src":"5534:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:14"},"nodeType":"YulFunctionCall","src":"5571:18:14"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:14","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:14"},"nodeType":"YulFunctionCall","src":"5564:30:14"},"nodeType":"YulExpressionStatement","src":"5564:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:14"},"nodeType":"YulFunctionCall","src":"5610:18:14"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:14","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:14"},"nodeType":"YulFunctionCall","src":"5603:62:14"},"nodeType":"YulExpressionStatement","src":"5603:62:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:14"},"nodeType":"YulFunctionCall","src":"5681:18:14"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:14","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:14"},"nodeType":"YulFunctionCall","src":"5674:36:14"},"nodeType":"YulExpressionStatement","src":"5674:36:14"},{"nodeType":"YulAssignment","src":"5719:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:14"},"nodeType":"YulFunctionCall","src":"5727:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:14","type":""}],"src":"5350:402:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220d435fcaca0b0a3cad416913f5cc4b8d6f7c196b3d091d35df47d7d683b0d732564736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 CALLDATALOAD 0xFC 0xAC LOG0 0xB0 LOG3 0xCA 0xD4 AND SWAP2 EXTCODEHASH 0x5C 0xC4 0xB8 0xD6 0xF7 0xC1 SWAP7 0xB3 0xD0 SWAP2 0xD3 0x5D DELEGATECALL PUSH30 0x7D683B0D732564736F6C6343000811003300000000000000000000000000 ","sourceMap":"1401:11610:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:14;;1162:22;1144:41;;1132:2;1117:18;4431:197:10;1004:187:14;3242:106:10;3329:12;;3242:106;;;1342:25:14;;;1330:2;1315:18;3242:106:10;1196:177:14;5190:286:10;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1853:36:14;;1841:2;1826:18;3091:91:10;1711:184:14;5871:234:10;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:10;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:13;4568:32:10;719:10:13;4584:7:10;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:13;5373:38:10;5389:4;719:10:13;5404:6:10;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:10;;5190:286;-1:-1:-1;;;;5190:286:10:o;5871:234::-;5959:4;719:10:13;6013:64:10;719:10:13;6029:7:10;6066:10;6038:25;719:10:13;6029:7:10;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:13;6685:4:10;6766:25;719:10:13;6783:7:10;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:10;;3170:2:14;6801:85:10;;;3152:21:14;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:14;;;3292:35;3344:19;;6801:85:10;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:13;3860:28:10;719:10:13;3877:2:10;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:10;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:10;;10627:68;;;;-1:-1:-1;;;10627:68:10;;3576:2:14;10627:68:10;;;3558:21:14;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:14;;;3698:34;3749:19;;10627:68:10;3374:400:14;10627:68:10;-1:-1:-1;;;;;10713:21:10;;10705:68;;;;-1:-1:-1;;;10705:68:10;;3981:2:14;10705:68:10;;;3963:21:14;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:14;;;4103:32;4152:19;;10705:68:10;3779:398:14;10705:68:10;-1:-1:-1;;;;;10784:18:10;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1342:25:14;;;10835:32:10;;1315:18:14;10835:32:10;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:10;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:10;;4384:2:14;11404:68:10;;;4366:21:14;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11404:68:10;4182:353:14;11404:68:10;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:10;;7591:68;;;;-1:-1:-1;;;7591:68:10;;4742:2:14;7591:68:10;;;4724:21:14;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:14;;;4864:35;4916:19;;7591:68:10;4540:401:14;7591:68:10;-1:-1:-1;;;;;7677:16:10;;7669:64;;;;-1:-1:-1;;;7669:64:10;;5148:2:14;7669:64:10;;;5130:21:14;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:14;;;5270:33;5320:19;;7669:64:10;4946:399:14;7669:64:10;-1:-1:-1;;;;;7815:15:10;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:10;;5552:2:14;7840:72:10;;;5534:21:14;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:14;;;5674:36;5727:19;;7840:72:10;5350:402:14;7840:72:10;-1:-1:-1;;;;;7946:15:10;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1342:25:14;;;8161:13:10;;8210:26;;1315:18:14;8210:26:10;;;;;;;8247:37;12180:121;14:548:14;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:14;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:14:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:14:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"426000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24628","balanceOf(address)":"2562","decimals()":"266","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51138","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2700,"contract":"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":2706,"contract":"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":2708,"contract":"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":2710,"contract":"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":2712,"contract":"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"node_modules/@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}